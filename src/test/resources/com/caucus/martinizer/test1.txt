~
+import com.caucus.apps.corelib.search.ContentServiceFigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
+import com.caucus.apps.corelib.search.FigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.IRetrieveResponseRecParser;
~
 import com.caucus.apps.corelib.search.IValidateTranslation;
~
 import com.caucus.apps.corelib.search.QueryResultsLocator;
~
@@ -156,6 +158,7 @@ import com.caucus.apps.corelib.search.impl.fastesp.FastESPModule;
 import com.caucus.apps.corelib.search.impl.fastesp.FastESPQueryDocIDBatcher;
~
 import com.caucus.apps.corelib.search.impl.fastesp.FastESPQueryTranslator;
~
 import com.caucus.apps.corelib.search.impl.fastesp.FastESPSearchEngine;
~
+import com.caucus.apps.corelib.search.impl.fastesp.FastFigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.FastValidateTranslation;
~
 import com.caucus.apps.corelib.search.impl.fastesp.QueryComplexityAnalyzer;
~
 import com.caucus.apps.corelib.search.impl.fastesp.QueryComplexityAnalyzerImpl;
~
@@ -443,6 +446,12 @@ public class AppCoreLibModule
 		} else {
~
 			binder.bind(IValidateTranslation.class, ContentServiceValidateTranslation.class);
~
 		}
~
 		
~
 		
+if("FAST".equals(System.getProperty(SearchEngine.CFGKEY_SEARCHENGINE, "FAST"))){
~
+	        binder.bind(FigTableSearchConverter.class, FastFigTableSearchConverter.class);
~
+	    } else {
~
+	    	binder.bind(FigTableSearchConverter.class, ContentServiceFigTableSearchConverter.class);
~
+	    }
 
~
 
~
 		// TODO:  smallest possible change to the code to fix PQ-9929 for 2013.1; will be refactored for trunk and 2013.2
~
 		binder.bind(QueryInspector.class, FastESPSearchEngine.class).withId("FastQueryInspector").preventReloading();
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/SimpleUser.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/SimpleUser.java
new file mode 100755
index 0000000..f21122b
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/SimpleUser.java
@@ -0,0 +1,800 @@
+package com.caucus.apps.corelib.access;
~
~
+import java.io.Serializable;
~
+import java.text.SimpleDateFormat;
~
+import java.util.Date;
~
+import java.util.HashMap;
~
+import java.util.HashSet;
~
+import java.util.Map;
~
+import java.util.Set;
~
~
+import javax.servlet.http.HttpSessionBindingEvent;
~
+import javax.servlet.http.HttpSessionBindingListener;
~
~
+import org.apache.commons.lang.StringUtils;
~
+import org.apache.commons.lang.builder.ToStringBuilder;
~
+import org.apache.tapestry5.OptimizedSessionPersistedObject;
~
+import org.slf4j.Logger;
~
+import org.slf4j.LoggerFactory;
~
~
+import com.caucus.apps.core.services.auth.AuthFailure;
~
+import com.caucus.apps.core.services.auth.BrandingImage;
~
+import com.caucus.apps.core.services.auth.BrandingLink;
~
+import com.caucus.apps.core.services.auth.ExternalWidget;
~
+import com.caucus.apps.core.services.auth.ProjectCodes;
~
+import com.caucus.apps.core.services.personalprofile.PublicProfile;
~
+import com.caucus.apps.corelib.federatedsearch.service.FederatedSearchType;
~
~
~
+/**
~
+ * Primary just a Bean class representing user details.  This is the "base" user class,
~
+ * without stuff that is specific to Shibboleth, Flow, Ebrary, or other "unusual"
~
+ * authentication methods or search engines.
~
+ * 
~
+ * The "unusual" stuff is added in the 'User' class.
~
+ * 
~
+ * @author mpearce
~
+ * Modified by Charles Roth (and many others)
~
+ */
~
+public class SimpleUser implements OptimizedSessionPersistedObject, HttpSessionBindingListener, Serializable
~
+{
~
+	private static final long serialVersionUID = 2L;
~
~
+	public static final String AUTHENTICATED_BY_SSO = "SSO";
~
+	public static final String AUTHENTICATED_BY_IP = "IP Address";
~
+	public static final String AUTHENTICATED_BY_USERNAME_PASSWORD = "Username/Password";
~
+	public static final String AUTHENTICATED_BY_COOKIE = "Cookie";
~
+	public static final String AUTHENTICATED_BY_PERSONAL_PROFILE = "PersonalProfile";
~
+	public static final String AUTHENTICATED_BY_ATHENS = "Athens";
~
+	public static final String AUTHENTICATED_BY_SHIBBOLETH = "Shibboleth";
~
+	public static final String AUTHENTICATED_BY_SHIBBOLETH_TEST = "ShibbolethTest";
~
+	public static final String AUTHENTICATED_BY_BARCODE = "Barcode";
~
+	public static final String AUTHENTICATED_BY_TOKEN = "Token";
~
+	public static final String AUTHENTICATED_BY_REFERRER = "Referrer";
~
+	public static final String AUTHENTICATED_BY_GEOLOCATION = "Geolocation";
~
+	public static final String AUTHENTICATED_BY_LOCAL_AUTH = "Local Auth";
~
+	public static final String AUTHENTICATED_BY_SHIBBOLETH_COOKIE = "Shibboleth cookie";
~
+	public static final String AUTHENTICATED_BY_ATHENS_COOKIE = "Athens cookie";
~
+	public static final String AUTHENTICATED_BY_ALERT_EMAIL = "AlertEmail";
~
+	public static final String PARAM_ACCOUNT_ID = "accountid";
~
+	public static final String PARAM_GROUP_ID = "groupid";
~
+	public static final String PARAM_SHIBBOLETH_FEDERATION_ID = "federation";
~
+	public static final String PARAM_SHIBBOLETH_INSTITUTION_ID = "institution";
~
+	public static final String ACCOUNTINFO_PATH = "/accountinfo";
~
+	public static final String ADMIN_DEL = "ADMIN_DEL";
~
+	public static final String UNKNOWN = "UNKNOWN";
~
+	public static final String TERM_DATE = "TERM_DATE";
~
+	public static final String WG_TERM = "WG_TERM";
~
+	public static final String MY_RESEARCH_EXPIRY_FLAG = "E";
~
+	
~
+	public static final String DEFAULT_REQUEST_URL = "/";
~
~
+	protected String username = "";
~
+	protected String accountId;
~
+	protected String accountURI;
~
+	protected String usageGroupId;
~
+	protected String usageGroupName;
~
+	protected String accountPreferencesURI;
~
+	protected String outboundLinkingURI;
~
+	protected String subscriptionURI;
~
+	protected String ipAddress;
~
+	protected boolean authenticated = false;
~
+	protected boolean duplicateIP = false;
~
+	protected boolean duplicateGeo = false;
~
+	protected String startUrl;
~
+	protected String preferredUrl;
~
+	protected boolean institutionAccountExpired = false;
~
+	protected boolean institutionAccountExpiresSoon = false;
~
+	protected boolean accountReactivatedThisSesson = false;
~
+	protected boolean authException = false;
~
+	protected boolean accountDeleted;
~
+	protected Throwable serverException = null;
~
+	protected boolean personalProfileExpired = false;
~
+	
~
+	// Authentication flags
~
+	protected boolean ssoCheckDone = false;
~
+	protected String authenticatedBy;
~
~
+	// Country code from OneAdmin account, based on the current assumption that
~
+	// user is associated with one institutional account.
~
+	protected String countryCode;
~
~
+	protected String requestUrl;    // Pre-login URL
~
+	
~
+	protected String targetUrl;     // Separate copy of pre-login URL, used to track/log user's target page.
~
+	protected String targetUrlSource;  // authenticator who supplied targetUrl
~
~
+	// Authentication status message
~
+	protected String authenticationStatus;
~
~
+	protected String referrer = null;        // Referring URL, where did the user come from?
~
+	protected String referrerSource = null;  // authenticator who supplied referer
~
~
+	// Branding images and links associated with the account.
~
+	protected BrandingImage[] brandingImages;
~
~
+	// Branding links and text associated with the account.
~
+	protected BrandingLink[] brandingLinks;
~
~
+	// External (non-PQ) widgets associtated with this account
~
+	protected ExternalWidget[] widgets;
~
+	
~
+	protected transient boolean dirty;
~
~
+	protected static /*final*/ Logger logger = LoggerFactory.getLogger(SimpleUser.class);
~
~
+	protected AuthFailure authFailure;
~
~
+	protected boolean isSignedInIntoMyProfile;
~
~
+	protected Date institutionAccountExpiryDate;
~
~
+	protected PublicProfile publicProfile;
~
~
+	// Whether to continue to show the user a notification that their
~
+	// institutional
~
+	// account will expire soon when they access their My Research pages.
~
+	protected boolean showWarningMessage = true;
~
~
+	// whether to show the shopping cart
~
+	protected boolean showShoppingCart = false;
~
+	
~
+	protected String projectCode = null;
~
+	
~
+	protected boolean pricingNotification = false;
~
+	
~
+	protected boolean pricePreviewLink = false;
~
+	
~
+	protected boolean overTheLimit = false;
~
+	
~
+	// Project code lists associated with an account.
~
+	protected ProjectCodes projectCodeLists;
~
+	
~
+	protected Object[] context;
~
+	
~
+	protected String[] sessionLimitMessage;
~
+	
~
+	protected boolean userPubTitleViewSelection;
~
+	
~
+	protected Map<FederatedSearchType, FederatedSearchAuthToken> federatedSearchAuthTokens = new HashMap<FederatedSearchType, FederatedSearchAuthToken>();
~
+	
~
+	protected Set<String> validKnownIPs;
~
+	
~
+	// Stores the return location when coming back from the istore ecommerce shopping cart 
~
+	protected String redirect;
~
~
+	public Set<String> getValidKnownIPs() {
~
+		lazilyInstantiateValidKnownIps();
~
+		return validKnownIPs;
~
+	}
~
~
+	public void setValidKnownIPs(Set<String> validKnownIPs) {
~
+		this.validKnownIPs = validKnownIPs;
~
+		markDirty();
~
+	}
~
+	
~
+	public void addToValidKnownIPs(String ipAddress) {
~
+		lazilyInstantiateValidKnownIps();
~
+		validKnownIPs.add(ipAddress);
~
+		markDirty();
~
+	}
~
+	
~
+	private void lazilyInstantiateValidKnownIps() {
~
+		if (validKnownIPs == null) {
~
+			setValidKnownIPs(new HashSet<String>());
~
+		}
~
+	}
~
~
+	public String getProjectCode() {
~
+		return projectCode;
~
+	}
~
+	
~
+	public String getProjectCodeForDisplay() {		
~
+		if (projectCode == null || "".equals(projectCode))
~
+			return "none applied";		
~
+		return projectCode;	
~
+	}
~
+	
~
+	public void setProjectCode(String projectCode) {
~
+		this.projectCode = projectCode;
~
+		markDirty();
~
+	}
~
~
+	public boolean isSignedInIntoMyProfile() {
~
+		return isSignedInIntoMyProfile;
~
+	}
~
~
+	public void setIsSignedInIntoMyProfile(boolean isSignedInIntoMyProfile) {
~
+		this.isSignedInIntoMyProfile = isSignedInIntoMyProfile;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * Username is the OneAdmin username.
~
+	 * 
~
+	 * @return the OneAdmin username, if supplied, or the empty string otherwise.
~
+	 */
~
+	public String getUsername() {
~
+		return username;
~
+	}
~
~
+	public void setUsername(String username) {
~
+		this.username = username;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * AccountID is the OneAdmin account ID returned from the authenticator.
~
+	 * 
~
+	 * <p>
~
+	 * <b>Note</b>: This should not be used to interact with the service. Use the account URI instead.
~
+	 * </p>
~
+	 * 
~
+	 * @return the account ID.
~
+	 */
~
+	public String getAccountId() {
~
+		return accountId;
~
+	}
~
~
+	public void setAccountId(String accountId) {
~
+		this.accountId = accountId;
~
+		markDirty();
~
+	}
~
~
+	public String getAccountURI() {
~
+		return accountURI;
~
+	}
~
~
+	public void setAccountURI(String accountURI) {
~
+		this.accountURI = accountURI;
~
+		markDirty();
~
+	}
~
~
+	public String getAccountPreferencesURI() {
~
+		return accountPreferencesURI;
~
+	}
~
~
+	public void setAccountPreferencesURI(String accountPreferencesURI) {
~
+		this.accountPreferencesURI = accountPreferencesURI;
~
+		markDirty();
~
+	}
~
~
+	public String getUsageGroupId() {
~
+		return usageGroupId;
~
+	}
~
~
+	public void setUsageGroupId(String usageGroupId) {
~
+		this.usageGroupId = usageGroupId;
~
+		markDirty();
~
+	}
~
~
+	
~
+	public String getUsageGroupName() {
~
+		return usageGroupName;
~
+	}
~
~
+	
~
+	public void setUsageGroupName(String usageGroupName) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.usageGroupName = usageGroupName;
~
+	}
~
~
+	public boolean isDuplicateIP() {
~
+		return duplicateIP;
~
+	}
~
~
+	public void setDuplicateIP(boolean b) {    //TODO CR Should this call markDirty()?  Why not?
~
+		duplicateIP = b;
~
+	}
~
~
+	/**
~
+	 * @return flag to denote a multiple account availability for this geo location.
~
+	 */
~
+	public boolean isDuplicateGeo() {
~
+		return duplicateGeo;
~
+	}
~
~
+	/**
~
+	 * @param duplicateGeo flag to denote a multiple account availability for this geo location.
~
+	 */
~
+	public void setDuplicateGeo(boolean duplicateGeo) {
~
+		this.duplicateGeo = duplicateGeo;
~
+	}
~
~
+	public boolean isAuthenticated() {
~
+		return authenticated;
~
+	}
~
~
+	public void setAuthenticated(boolean authenticated) {
~
+		this.authenticated = authenticated;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * RequestUrl is the URL requested prior to initialising authentication. If the URL has not been given a value then
~
+	 * null will be returned.
~
+	 * 
~
+	 * @return the URL.
~
+	 */
~
+	public String getRequestUrl() {
~
+		return requestUrl;
~
+	}
~
~
+	public void setRequestUrl(String requestUrl) {
~
+		this.requestUrl = requestUrl;
~
+		markDirty();
~
+	}
~
~
+	public String getOutboundLinkingURI() {
~
+		return outboundLinkingURI;
~
+	}
~
~
+	public void setOutboundLinkingURI(String outboundLinkingURI) {
~
+		this.outboundLinkingURI = outboundLinkingURI;
~
+		markDirty();
~
+	}
~
~
+	public String getSubscriptionURI() {
~
+		return subscriptionURI;
~
+	}
~
~
+	public void setSubscriptionURI(String subscriptionURI) {
~
+		this.subscriptionURI = subscriptionURI;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * RequestUrl is the URL requested prior to initialising authentication. Has the account id added as a query
~
+	 * parameter if available.
~
+	 * 
~
+	 * @return the URL.
~
+	 */
~
+	public String getRequestUrlWithAccountId() {
~
+		String withAccountUrl = StringUtils.defaultIfEmpty(startUrl, StringUtils.defaultIfEmpty(getRequestUrl(),DEFAULT_REQUEST_URL));
~
+		if (accountId == null)
~
+			return withAccountUrl;
~
+		
~
+		if (withAccountUrl.indexOf('?') == -1) {
~
+			// No query string is present.
~
+			withAccountUrl += "?" + PARAM_ACCOUNT_ID + "=" + accountId;
~
+		} else if ( withAccountUrl.contains("?" + SimpleUser.PARAM_ACCOUNT_ID + "=") ||
~
+					withAccountUrl.contains("&" + SimpleUser.PARAM_ACCOUNT_ID + "="))
~
+		{
~
+			// The accountId is already present in the query string. However, it may be an accountId left over
~
+			// from a previous session. Therefore, we need to make sure the current accountId is used.
~
+			withAccountUrl =
~
+					withAccountUrl.replaceFirst("[?]" + SimpleUser.PARAM_ACCOUNT_ID + "=[^&%]*", 
~
+							"?" + SimpleUser.PARAM_ACCOUNT_ID + "=" + accountId);
~
+			withAccountUrl =
~
+					withAccountUrl.replaceAll("[&]" + SimpleUser.PARAM_ACCOUNT_ID + "=[^&%]*", 
~
+							"&" + SimpleUser.PARAM_ACCOUNT_ID + "=" + accountId);
~
+		} else {
~
+			// A query string is present, but the accountId isn't in it. Append the accountId to the query string.
~
+			withAccountUrl += "&" + PARAM_ACCOUNT_ID + "=" + accountId;
~
+		}
~
+		return withAccountUrl;
~
+	}
~
~
+	/**
~
+	 * Has this user been checked against the SSO service? This is done initially, when the user first hits a secure
~
+	 * page. If the user then goes to an interactive authentication page, such as username/password, it is reset so that
~
+	 * the user can be registered with the SSO service.
~
+	 * 
~
+	 * @return <code>true</code> if the check has been done, <code>false</code> if the check has not been done, or
~
+	 *         should be carried out again.
~
+	 */
~
+	public boolean isSsoCheckDone() {
~
+		return ssoCheckDone;
~
+	}
~
~
+	public void setSsoCheckDone(boolean ssoCheckDone) {
~
+		this.ssoCheckDone = ssoCheckDone;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * Has authentication by IP address been attempted? This is the first authentication attempt apart from the SSO
~
+	 * check that is done when a user hits a secure page, and only needs doing once.
~
+	 * 
~
+	 * @return <code>true</code> if IP authentication has been attempted, <code>false</code> otherwise.
~
+	 */
~
+	public boolean isIpCheckDone() {
~
+		// CliffW commented out returning the flag as PAM can change the status of an IP check so the assumption
~
+		// has to be that an IP check might work on subsequent attempts.
~
+		//return ipCheckDone;
~
+		return false;
~
+	}
~
~
+	public void setIpCheckDone(boolean ipCheckDone) {
~
+//		this.ipCheckDone = ipCheckDone;
~
+//		markDirty();
~
+	}
~
~
+	/**
~
+	 * The method used for authentication.
~
+	 * 
~
+	 * @return the successful authentication method.
~
+	 */
~
+	public String getAuthenticatedBy() {
~
+		return authenticatedBy;
~
+	}
~
~
+	public void setAuthenticatedBy(String authenticatedBy) {
~
+		this.authenticatedBy = authenticatedBy;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * @return the ipAddress
~
+	 */
~
+	public String getIpAddress() {
~
+		return ipAddress;
~
+	}
~
~
+	/**
~
+	 * @param ipAddress the ipAddress to set
~
+	 */
~
+	public void setIpAddress(String ipAddress) {
~
+		this.ipAddress = ipAddress;
~
+		markDirty();
~
+	}
~
~
+	public String getStartUrl() {
~
+		return startUrl;
~
+	}
~
~
+	public void setStartUrl(String startUrl) {
~
+		this.startUrl = startUrl;
~
+		markDirty();
~
+	}
~
~
+	public String getPreferredUrl() {
~
+		return preferredUrl;
~
+	}
~
~
+	public void setPreferredUrl(String preferredUrl) {
~
+		this.preferredUrl = preferredUrl;
~
+		markDirty();
~
+	}
~
~
+	public String getCountryCode() {
~
+		return countryCode;
~
+	}
~
~
+	public void setCountryCode(String countryCode) {
~
+		this.countryCode = countryCode;
~
+		markDirty();
~
+	}
~
~
+	/**
~
+	 * Get the authentication status returned from the authentication service, if set. (This is likely to only be set in
~
+	 * cases where the status holds an error code.)
~
+	 * 
~
+	 * @return the authentication status.
~
+	 */
~
+	public String getAuthenticationStatus() {
~
+		return authenticationStatus;
~
+	}
~
~
+	public void setAuthenticationStatus(String authenticationStatus) {
~
+		this.authenticationStatus = authenticationStatus;
~
+		markDirty();
~
+	}
~
~
+	public String getReferrer() {
~
+		return referrer;
~
+	}
~
~
+	public void setReferrer(String referrer, String authenticator) {
~
+		markDirty();
~
+		this.referrer = referrer;
~
+		referrerSource = authenticator;
~
+	}
~
+	
~
+	public void setReferrerUnlessAlreadySetByADifferentAuthenticator (String referrer, String authenticator) {
~
+		if (referrerSource == null || StringUtils.equals(referrerSource, authenticator)) {
~
+			setReferrer(referrer, authenticator);
~
+		}
~
+		
~
+//		if (StringUtils.isBlank(referrer))
~
+//			return;
~
+//		
~
+//		if (StringUtils.isBlank(this.referrer) || StringUtils.equals(referrerSource, authenticator)) {
~
+//			setReferrer(referrer, authenticator);
~
+//		}
~
+	}
~
+	
~
+	public void setTargetUrlUnlessAlreadySetByADifferentAuthenticator(String url, String authenticator) {
~
+		if (StringUtils.isBlank(url))
~
+			return;
~
+		
~
+		if (StringUtils.isBlank(targetUrl) || StringUtils.equals(targetUrlSource, authenticator)) {
~
+			markDirty();
~
+			targetUrl = url;
~
+			targetUrlSource = authenticator;
~
+		}
~
+	}
~
+	
~
+	public String getTargetUrl() {
~
+		return targetUrl;
~
+	}
~
~
+	@Override
~
+	public String toString() {
~
+		return ToStringBuilder.reflectionToString(this);
~
+	}
~
~
+	@Override
~
+	public void valueBound(HttpSessionBindingEvent event) {
~
+		markSessionPersistedObjectClean();
~
+//		if (wayfInfo != null) {
~
+//			wayfInfo.markSessionPersistedObjectClean();
~
+//		}
~
+		logger.debug("User object bound to session: (" + event.getSession().getId() + "): " + this.toString());
~
+	}
~
~
+	@Override
~
+	public void valueUnbound(HttpSessionBindingEvent event) {
~
+		logger.debug("User object unbound from session: (" + event.getSession().getId() + "): " + this.toString());
~
+	}
~
~
+	public BrandingImage[] getBrandingImages() {
~
+		return brandingImages;
~
+	}
~
~
+	public void setBrandingImages(BrandingImage[] brandingImages) {
~
+		this.brandingImages = brandingImages;
~
+		markDirty();
~
+	}
~
~
+	public BrandingLink[] getBrandingLinks() {
~
+		return brandingLinks;
~
+	}
~
~
+	public void setBrandingLinks(BrandingLink[] brandingLinks) {
~
+		this.brandingLinks = brandingLinks;
~
+		markDirty();
~
+	}
~
~
+	public ExternalWidget[] getExternalWidgets() {
~
+		return widgets;
~
+	}
~
~
+	public void setExternalWidgets(ExternalWidget[] widgets) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.widgets = widgets;
~
+	}
~
~
+	public void setAuthFailure(AuthFailure authFailure) {
~
+		this.authFailure = authFailure;
~
+		markDirty();
~
+	}
~
~
+	public AuthFailure getAuthFailure() {
~
+		return authFailure;
~
+	}
~
~
+	@Override
~
+	public boolean checkAndResetDirtyMarker() {
~
+		return dirty;
~
+	}
~
~
+	public final void markSessionPersistedObjectClean() {
~
+		dirty = false;
~
+	}
~
~
+	protected final void markDirty() {
~
+		dirty = true;
~
+	}
~
+	
~
+	public void setAccountDeleted(boolean deleted) {
~
+		this.accountDeleted = deleted;
~
+		markDirty();
~
+	}
~
+	
~
+	/**
~
+	 * Check whether the user's (admin-created) My Research profile has been
~
+	 * deleted.
~
+	 * @return <code>true</code> if the account has been deleted.
~
+	 */
~
+	public boolean isAccountDeleted() {
~
+		return accountDeleted;
~
+	}
~
~
+	public boolean isInstitutionAccountExpired() {
~
+		return institutionAccountExpired;
~
+	}
~
+	
~
+	public void setInstitutionAccountExpired(boolean institutionAccountExpired) {
~
+		this.institutionAccountExpired = institutionAccountExpired;
~
+		markDirty();
~
+	}
~
~
+	public boolean getInstitutionAccountExpiresSoon() {
~
+		return institutionAccountExpiresSoon;
~
+	}
~
~
+	public void setInstitutionAccountExpiresSoon(boolean institutionAccountExpiresSoon) {
~
+		this.institutionAccountExpiresSoon = institutionAccountExpiresSoon;
~
+		markDirty();
~
+	}
~
~
+	// For My Research accounts that are going to expire sometime soon....
~
+	public void setInstitutionAccountExpiryDate(Date expiryDate) {  //TODO CR Should this call markDirty()?  Why not?
~
+		institutionAccountExpiryDate = expiryDate;
~
+	}
~
~
+	public Date getInstitutionAccountExpiryDate() {
~
+		return institutionAccountExpiryDate;
~
+	}
~
~
+	public String getInstitutionAccountExpiryDateFormatted() {
~
+		// Should this be Locale sensitive?
~
+		SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
~
+		return sdf.format(institutionAccountExpiryDate);
~
+	}
~
~
+	public boolean isAccountReactivatedThisSession() {
~
+		return accountReactivatedThisSesson;
~
+	}
~
~
+	public void setAccountReactivatedThisSession(boolean accountReactivatedThisSesson) {
~
+		this.accountReactivatedThisSesson = accountReactivatedThisSesson;
~
+		markDirty();
~
+	}
~
~
+	public boolean isPublicProfileAvailable() {
~
+		return publicProfile != null;
~
+	}
~
~
+	public void setPublicProfile(PublicProfile pubprofile) {
~
+		publicProfile = pubprofile;
~
+		markDirty();
~
+	}
~
~
+	public PublicProfile getPublicProfile() {
~
+		return publicProfile;
~
+	}
~
~
+	public boolean getShowWarningMessage() {
~
+		return showWarningMessage;
~
+	}
~
~
+	public void setShowWarningMessage(boolean val) {  //TODO CR Should this call markDirty()?  Why not?
~
+		showWarningMessage = val;
~
+	}
~
~
+	public boolean getShowShoppingCart() {
~
+		return showShoppingCart;
~
+	}
~
~
+	public void setShowShoppingCart(boolean val) {  //TODO CR Should this call markDirty()?  Why not?
~
+		showShoppingCart = val;
~
+	}
~
+	
~
+	public boolean hasAuthException() {
~
+		return authException;
~
+	}
~
+	
~
+	public void setAuthException(boolean hasException) { //TODO CR Should this call markDirty()?  Why not?
~
+		authException = hasException;
~
+	}
~
+	
~
+	public Throwable getServerException() {
~
+		return serverException;
~
+	}
~
+	
~
+	public void setServerException(Throwable exception) { //TODO CR Should this call markDirty()?  Why not?
~
+		serverException = exception;
~
+	}
~
+	
~
+	public boolean getPricingNotification() {
~
+		return pricingNotification;
~
+	}
~
~
+	public void setPricingNotification( boolean disableNotification ) {
~
+		pricingNotification = disableNotification;
~
+		markDirty();
~
+	}
~
+	
~
+	public boolean isPricePreviewLink() {
~
+		return pricePreviewLink;
~
+	}
~
+	
~
+	public void setPricePreviewLink(boolean pricePreviewLink) {
~
+		this.pricePreviewLink = pricePreviewLink;
~
+		markDirty();
~
+	}
~
+	
~
+	public boolean isOverTheLimit() {
~
+		return overTheLimit;
~
+	}
~
+	
~
+	public void setOverTheLimit(boolean overTheLimit) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.overTheLimit = overTheLimit;
~
+	}
~
~
+	public String[] getProjectCodeLists() {
~
+		return (projectCodeLists != null ? projectCodeLists.getProjectCode() : new String[0]);
~
+	}
~
~
+	public void setProjectCodeLists(ProjectCodes projectCodeLists) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.projectCodeLists = projectCodeLists;
~
+	}
~
+	
~
+	public String getRequestedPage() {
~
+		String resourceName = requestUrl;
~
+		if(StringUtils.isNotBlank(requestUrl) && requestUrl.indexOf('?') != -1) { 
~
+			resourceName = requestUrl.substring(0, requestUrl.indexOf('?'));	
~
+		}		
~
+		return resourceName;
~
+	}
~
+	
~
+	public Object[] getContext() {
~
+		return context;
~
+	}
~
+	
~
+	public void setContext(Object[] context) {   //TODO CR Should this call markDirty()?  Why not?
~
+		this.context = context;
~
+	}
~
~
+	public String[] getSessionLimitMessage() {
~
+		return sessionLimitMessage;
~
+	}
~
+	
~
+	public void setSessionLimitMessage(String[] sessionLimitMessage) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.sessionLimitMessage = sessionLimitMessage;
~
+	}
~
+	
~
+	public boolean isUserPubTitleViewSelection() {
~
+		return userPubTitleViewSelection;
~
+	}
~
~
+	public void setUserPubTitleViewSelection(boolean userPubTitleViewSelection) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.userPubTitleViewSelection = userPubTitleViewSelection;
~
+	}
~
+	
~
+	public boolean isPersonalProfileExpired() {
~
+		return personalProfileExpired;
~
+	}
~
+	
~
+	public void setPersonalProfileExpired(boolean personalProfileExpired) {
~
+		this.personalProfileExpired = personalProfileExpired;
~
+		markDirty();
~
+	}
~
+	
~
+	public String getRedirect() {
~
+		return redirect;				
~
+	}
~
+	
~
+	public void setRedirect(String redirect) {
~
+		this.redirect = redirect;
~
+		markDirty();		
~
+	}
~
+	
~
+	/*
~
+	 * To clear the Properties which are no longer required after successful authentication. ensuring that information 
~
+	 * is removed from the session state when it is no longer needed.
~
+	 */
~
+	public void clearUnusedProperties(){
~
+		serverException = null;
~
+		requestUrl = null;
~
+		authenticationStatus = null;
~
+		referrer = null;
~
+		authFailure = null;
~
+	}
~
+	
~
+	public Map<FederatedSearchType, FederatedSearchAuthToken> getFederatedSearchAuthTokens() {
~
+		if(federatedSearchAuthTokens == null) {
~
+			federatedSearchAuthTokens = new HashMap<FederatedSearchType, FederatedSearchAuthToken>();
~
+		} 
~
+		return federatedSearchAuthTokens;
~
+	}
~
~
+	public FederatedSearchAuthToken getEbraryToken() {
~
+		return getFederatedSearchAuthTokens().get(FederatedSearchType.EBRARY);
~
+	}
~
+	
~
+	public void setEbraryToken(FederatedSearchAuthToken token) {  //TODO CR Should this call markDirty()?  Why not?
~
+		getFederatedSearchAuthTokens().put(FederatedSearchType.EBRARY, token);
~
+	}	
~
+ 	
~
+}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/User.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/User.java
index 59bc5de..04599d9 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/User.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/access/User.java
@@ -1,597 +1,35 @@
 package com.caucus.apps.corelib.access;
~
 
~
-import java.io.Serializable;
~
-import java.text.SimpleDateFormat;
~
-import java.util.Date;
~
-import java.util.HashMap;
~
-import java.util.HashSet;
~
-import java.util.Map;
~
-import java.util.Set;
~
~
 import javax.servlet.http.HttpSessionBindingEvent;
~
-import javax.servlet.http.HttpSessionBindingListener;
~
~
-import org.apache.commons.lang.StringUtils;
~
-import org.apache.commons.lang.builder.ToStringBuilder;
~
-import org.apache.tapestry5.OptimizedSessionPersistedObject;
~
-import org.slf4j.Logger;
~
-import org.slf4j.LoggerFactory;
~
 
~
-import com.caucus.apps.core.services.auth.AuthFailure;
~
-import com.caucus.apps.core.services.auth.BrandingImage;
~
-import com.caucus.apps.core.services.auth.BrandingLink;
~
-import com.caucus.apps.core.services.auth.ExternalWidget;
~
-import com.caucus.apps.core.services.auth.ProjectCodes;
~
-import com.caucus.apps.core.services.personalprofile.PublicProfile;
~
-import com.caucus.apps.corelib.federatedsearch.service.FederatedSearchType;
~
 import com.caucus.apps.corelib.util.EbraryChannel;
~
 
~
 
~
 
~
 /**
~
  * Bean class representing user details.  
+This class just contains "unusual" added 
~
+ * stuff like Shibboleth, Flow, Ebrary, etc.  See the base class 'SimpleUser' for 
~
+ * everything else.
~
  * 
~
  * @author 
-mpearce
+Charles Roth
~
  */
~
 public class User 
-implements OptimizedSessionPersistedObject, HttpSessionBindingListener, Serializable
+extends SimpleUser
  
~
 {
~
-/**
~
-	 * Default serialisation ID
~
-	 */
 	private static final long serialVersionUID = 
-1L;
~
~
-	public static final String AUTHENTICATED_BY_SSO = "SSO";
~
-	public static final String AUTHENTICATED_BY_IP = "IP Address";
~
-	public static final String AUTHENTICATED_BY_USERNAME_PASSWORD = "Username/Password";
~
-	public static final String AUTHENTICATED_BY_COOKIE = "Cookie";
~
-	public static final String AUTHENTICATED_BY_PERSONAL_PROFILE = "PersonalProfile";
~
-	public static final String AUTHENTICATED_BY_ATHENS = "Athens";
~
-	public static final String AUTHENTICATED_BY_SHIBBOLETH = "Shibboleth";
~
-	public static final String AUTHENTICATED_BY_SHIBBOLETH_TEST = "ShibbolethTest";
~
-	public static final String AUTHENTICATED_BY_BARCODE = "Barcode";
~
-	public static final String AUTHENTICATED_BY_TOKEN = "Token";
~
-	public static final String AUTHENTICATED_BY_REFERRER = "Referrer";
~
-	public static final String AUTHENTICATED_BY_GEOLOCATION = "Geolocation";
~
-	public static final String AUTHENTICATED_BY_LOCAL_AUTH = "Local Auth";
~
-	public static final String AUTHENTICATED_BY_SHIBBOLETH_COOKIE = "Shibboleth cookie";
~
-	public static final String AUTHENTICATED_BY_ATHENS_COOKIE = "Athens cookie";
~
-	public static final String AUTHENTICATED_BY_ALERT_EMAIL = "AlertEmail";
~
-	public static final String PARAM_ACCOUNT_ID = "accountid";
~
-	public static final String PARAM_GROUP_ID = "groupid";
~
-	public static final String PARAM_SHIBBOLETH_FEDERATION_ID = "federation";
~
-	public static final String PARAM_SHIBBOLETH_INSTITUTION_ID = "institution";
~
-	public static final String ACCOUNTINFO_PATH = "/accountinfo";
~
-	public static final String ADMIN_DEL = "ADMIN_DEL";
~
-	public static final String UNKNOWN = "UNKNOWN";
~
-	public static final String TERM_DATE = "TERM_DATE";
~
-	public static final String WG_TERM = "WG_TERM";
~
-	public static final String MY_RESEARCH_EXPIRY_FLAG = "E";
+2L;
~
 	
~
-	public static final String DEFAULT_REQUEST_URL = "/";
~
~
-	private String username = "";
~
-	private String accountId;
~
-	private String accountURI;
~
-	private String usageGroupId;
~
-	private String usageGroupName;
~
-	private String accountPreferencesURI;
~
-	private String outboundLinkingURI;
~
-	private String subscriptionURI;
~
-	private String ipAddress;
~
-	private boolean authenticated = false;
~
-	private boolean duplicateIP = false;
~
-	private boolean duplicateGeo = false;
~
-	private String startUrl;
~
-	private String preferredUrl;
~
-	private boolean institutionAccountExpired = false;
~
-	private boolean institutionAccountExpiresSoon = false;
~
-	private boolean accountReactivatedThisSesson = false;
~
-	private boolean authException = false;
~
-	private boolean accountDeleted;
~
-	private Throwable serverException = null;
~
-	private boolean personalProfileExpired = false;
~
-	private String saveToFlowInProgress;
~
-	private int retryCounterForFlow;
~
-	
~
-	// Authentication flags
~
-	private boolean ssoCheckDone = false;
~
-	private String authenticatedBy;
~
~
-	// Country code from OneAdmin account, based on the current assumption that
~
-	// user is associated with one institutional account.
~
-	private String countryCode;
~
~
-	private String requestUrl;    // Pre-login URL
~
-	
~
-	private String targetUrl;     // Separate copy of pre-login URL, used to track/log user's target page.
~
-	private String targetUrlSource;  // authenticator who supplied targetUrl
~
~
-	// Authentication status message
~
-	private String authenticationStatus;
~
~
-	private String referrer = null;        // Referring URL, where did the user come from?
~
-	private String referrerSource = null;  // authenticator who supplied referer
~
~
-	// Branding images and links associated with the account.
~
-	private BrandingImage[] brandingImages;
~
~
-	// Branding links and text associated with the account.
~
-	private BrandingLink[] brandingLinks;
~
~
-	// External (non-PQ) widgets associtated with this account
~
-	private ExternalWidget[] widgets;
~
-	
~
-	// Shibboleth WAYF info
~
 	private ShibbolethWayf wayfInfo;
~
 	private String ShibbolethRequestedPageURI;
~
 	private
-transient boolean dirty;
~
~
-	private static /*final*/ Logger logger = LoggerFactory.getLogger(User.class);
~
~
-	private AuthFailure authFailure;
~
~
-	private boolean isSignedInIntoMyProfile;
~
~
-	private Date institutionAccountExpiryDate;
~
~
-	private PublicProfile publicProfile;
~
~
-	// Whether to continue to show the user a notification that their
~
-	// institutional
~
-	// account will expire soon when they access their My Research pages.
~
-	private boolean showWarningMessage = true;
~
~
-	// whether to show the shopping cart
~
-	private boolean showShoppingCart = false;
~
-	
~
-	private
  String 
-projectCode = null;
~
-	
~
-	private boolean pricingNotification = false;
~
-	
~
-	private boolean pricePreviewLink = false;
~
-	
~
-	private boolean overTheLimit = false;
~
-	
~
-	// Project code lists associated with an account.
~
-	private ProjectCodes projectCodeLists;
~
-	
~
-	private Object[] context;
~
-	
~
-	private String[] sessionLimitMessage;
+saveToFlowInProgress;
~
 	private 
-boolean userPubTitleViewSelection;
+int retryCounterForFlow;
~
 	private EbraryChannel ebraryChannel;
~
 	
-//	private FederatedSearchAuthTokenImpl token;
~
-	
~
-	private Map<FederatedSearchType, FederatedSearchAuthToken> federatedSearchAuthTokens = new HashMap<FederatedSearchType, FederatedSearchAuthToken>();
~
-	
~
-	private Set<String> validKnownIPs;
~
-	
~
-	// Stores the return location when coming back from the istore ecommerce shopping cart 
~
-	private String redirect;
~
-	
~
-	//Access token for Flow
~
-	private
+protected
  FlowAccessToken accessTokenForFlow;
-public Set<String> getValidKnownIPs() {
~
-		lazilyInstantiateValidKnownIps();
~
-		return validKnownIPs;
~
-	}
~
~
-	public void setValidKnownIPs(Set<String> validKnownIPs) {
~
-		this.validKnownIPs = validKnownIPs;
~
-		markDirty();
~
-	}
~
-	
~
-	public void addToValidKnownIPs(String ipAddress) {
~
-		lazilyInstantiateValidKnownIps();
~
-		validKnownIPs.add(ipAddress);
~
-		markDirty();
~
-	}
~
-	
~
-	private void lazilyInstantiateValidKnownIps() {
~
-		if (validKnownIPs == null) {
~
-			setValidKnownIPs(new HashSet<String>());
~
-		}
~
-	}
~
~
-	public String getProjectCode() {
~
-		return projectCode;
~
-	}
~
-	
~
-	public String getProjectCodeForDisplay() {		
~
-		if (projectCode == null || "".equals(projectCode))
~
-			return "none applied";		
~
-		return projectCode;	
~
-	}
~
-	
~
-	public void setProjectCode(String projectCode) {
~
-		this.projectCode = projectCode;
~
-		markDirty();
~
-	}
~
~
-	public boolean isSignedInIntoMyProfile() {
~
-		return isSignedInIntoMyProfile;
~
-	}
~
~
-	public void setIsSignedInIntoMyProfile(boolean isSignedInIntoMyProfile) {
~
-		this.isSignedInIntoMyProfile = isSignedInIntoMyProfile;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * Username is the OneAdmin username.
~
-	 * 
~
-	 * @return the OneAdmin username, if supplied, or the empty string otherwise.
~
-	 */
~
-	public String getUsername() {
~
-		return username;
~
-	}
~
~
-	public void setUsername(String username) {
~
-		this.username = username;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * AccountID is the OneAdmin account ID returned from the authenticator.
~
-	 * 
~
-	 * <p>
~
-	 * <b>Note</b>: This should not be used to interact with the service. Use the account URI instead.
~
-	 * </p>
~
-	 * 
~
-	 * @return the account ID.
~
-	 */
~
-	public String getAccountId() {
~
-		return accountId;
~
-	}
~
~
-	public void setAccountId(String accountId) {
~
-		this.accountId = accountId;
~
-		markDirty();
~
-	}
~
~
-	public String getAccountURI() {
~
-		return accountURI;
~
-	}
~
~
-	public void setAccountURI(String accountURI) {
~
-		this.accountURI = accountURI;
~
-		markDirty();
~
-	}
~
~
-	public String getAccountPreferencesURI() {
~
-		return accountPreferencesURI;
~
-	}
~
~
-	public void setAccountPreferencesURI(String accountPreferencesURI) {
~
-		this.accountPreferencesURI = accountPreferencesURI;
~
-		markDirty();
~
-	}
~
~
-	public String getUsageGroupId() {
~
-		return usageGroupId;
~
-	}
~
~
-	public void setUsageGroupId(String usageGroupId) {
~
-		this.usageGroupId = usageGroupId;
~
-		markDirty();
~
-	}
~
~
-	
~
-	public String getUsageGroupName() {
~
-		return usageGroupName;
~
-	}
~
~
-	
~
-	public void setUsageGroupName(String usageGroupName) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.usageGroupName = usageGroupName;
~
-	}
~
~
-	public boolean isDuplicateIP() {
~
-		return duplicateIP;
~
-	}
~
~
-	public void setDuplicateIP(boolean b) {    //TODO CR Should this call markDirty()?  Why not?
~
-		duplicateIP = b;
~
-	}
~
~
-	/**
~
-	 * @return flag to denote a multiple account availability for this geo location.
~
-	 */
~
-	public boolean isDuplicateGeo() {
~
-		return duplicateGeo;
~
-	}
~
~
-	/**
~
-	 * @param duplicateGeo flag to denote a multiple account availability for this geo location.
~
-	 */
~
-	public void setDuplicateGeo(boolean duplicateGeo) {
~
-		this.duplicateGeo = duplicateGeo;
~
-	}
~
~
-	public boolean isAuthenticated() {
~
-		return authenticated;
~
-	}
~
~
-	public void setAuthenticated(boolean authenticated) {
~
-		this.authenticated = authenticated;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * RequestUrl is the URL requested prior to initialising authentication. If the URL has not been given a value then
~
-	 * null will be returned.
~
-	 * 
~
-	 * @return the URL.
~
-	 */
~
-	public String getRequestUrl() {
~
-		return requestUrl;
~
-	}
~
~
-	public void setRequestUrl(String requestUrl) {
~
-		this.requestUrl = requestUrl;
~
-		markDirty();
~
-	}
~
~
-	public String getOutboundLinkingURI() {
~
-		return outboundLinkingURI;
~
-	}
~
~
-	public void setOutboundLinkingURI(String outboundLinkingURI) {
~
-		this.outboundLinkingURI = outboundLinkingURI;
~
-		markDirty();
~
-	}
~
~
-	public String getSubscriptionURI() {
~
-		return subscriptionURI;
~
-	}
~
~
-	public void setSubscriptionURI(String subscriptionURI) {
~
-		this.subscriptionURI = subscriptionURI;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * RequestUrl is the URL requested prior to initialising authentication. Has the account id added as a query
~
-	 * parameter if available.
~
-	 * 
~
-	 * @return the URL.
~
-	 */
~
-	public String getRequestUrlWithAccountId() {
~
-		String withAccountUrl = StringUtils.defaultIfEmpty(startUrl, StringUtils.defaultIfEmpty(getRequestUrl(),DEFAULT_REQUEST_URL));
~
-		if (accountId == null)
~
-			return withAccountUrl;
~
-		
~
-		if (withAccountUrl.indexOf('?') == -1) {
~
-			// No query string is present.
~
-			withAccountUrl += "?" + PARAM_ACCOUNT_ID + "=" + accountId;
~
-		} else if ( withAccountUrl.contains("?" + User.PARAM_ACCOUNT_ID + "=") ||
~
-					withAccountUrl.contains("&" + User.PARAM_ACCOUNT_ID + "="))
~
-		{
~
-			// The accountId is already present in the query string. However, it may be an accountId left over
~
-			// from a previous session. Therefore, we need to make sure the current accountId is used.
~
-			withAccountUrl =
~
-					withAccountUrl.replaceFirst("[?]" + User.PARAM_ACCOUNT_ID + "=[^&%]*", 
~
-							"?" + User.PARAM_ACCOUNT_ID + "=" + accountId);
~
-			withAccountUrl =
~
-					withAccountUrl.replaceAll("[&]" + User.PARAM_ACCOUNT_ID + "=[^&%]*", 
~
-							"&" + User.PARAM_ACCOUNT_ID + "=" + accountId);
~
-		} else {
~
-			// A query string is present, but the accountId isn't in it. Append the accountId to the query string.
~
-			withAccountUrl += "&" + PARAM_ACCOUNT_ID + "=" + accountId;
~
-		}
~
-		return withAccountUrl;
~
-	}
~
~
-	/**
~
-	 * Has this user been checked against the SSO service? This is done initially, when the user first hits a secure
~
-	 * page. If the user then goes to an interactive authentication page, such as username/password, it is reset so that
~
-	 * the user can be registered with the SSO service.
~
-	 * 
~
-	 * @return <code>true</code> if the check has been done, <code>false</code> if the check has not been done, or
~
-	 *         should be carried out again.
~
-	 */
~
-	public boolean isSsoCheckDone() {
~
-		return ssoCheckDone;
~
-	}
~
~
-	public void setSsoCheckDone(boolean ssoCheckDone) {
~
-		this.ssoCheckDone = ssoCheckDone;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * Has authentication by IP address been attempted? This is the first authentication attempt apart from the SSO
~
-	 * check that is done when a user hits a secure page, and only needs doing once.
~
-	 * 
~
-	 * @return <code>true</code> if IP authentication has been attempted, <code>false</code> otherwise.
~
-	 */
~
-	public boolean isIpCheckDone() {
~
-		// CliffW commented out returning the flag as PAM can change the status of an IP check so the assumption
~
-		// has to be that an IP check might work on subsequent attempts.
~
-		//return ipCheckDone;
~
-		return false;
~
-	}
~
~
-	public void setIpCheckDone(boolean ipCheckDone) {
~
-//		this.ipCheckDone = ipCheckDone;
~
-//		markDirty();
~
-	}
~
~
-	/**
~
-	 * The method used for authentication.
~
-	 * 
~
-	 * @return the successful authentication method.
~
-	 */
~
-	public String getAuthenticatedBy() {
~
-		return authenticatedBy;
~
-	}
~
~
-	public void setAuthenticatedBy(String authenticatedBy) {
~
-		this.authenticatedBy = authenticatedBy;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * @return the ipAddress
~
-	 */
~
-	public String getIpAddress() {
~
-		return ipAddress;
~
-	}
~
~
-	/**
~
-	 * @param ipAddress the ipAddress to set
~
-	 */
~
-	public void setIpAddress(String ipAddress) {
~
-		this.ipAddress = ipAddress;
~
-		markDirty();
~
-	}
~
~
-	public String getStartUrl() {
~
-		return startUrl;
~
-	}
~
~
-	public void setStartUrl(String startUrl) {
~
-		this.startUrl = startUrl;
~
-		markDirty();
~
-	}
~
~
-	public String getPreferredUrl() {
~
-		return preferredUrl;
~
-	}
~
~
-	public void setPreferredUrl(String preferredUrl) {
~
-		this.preferredUrl = preferredUrl;
~
-		markDirty();
~
-	}
~
~
-	public String getCountryCode() {
~
-		return countryCode;
~
-	}
~
~
-	public void setCountryCode(String countryCode) {
~
-		this.countryCode = countryCode;
~
-		markDirty();
~
-	}
~
~
-	/**
~
-	 * Get the authentication status returned from the authentication service, if set. (This is likely to only be set in
~
-	 * cases where the status holds an error code.)
~
-	 * 
~
-	 * @return the authentication status.
~
-	 */
~
-	public String getAuthenticationStatus() {
~
-		return authenticationStatus;
~
-	}
~
~
-	public void setAuthenticationStatus(String authenticationStatus) {
~
-		this.authenticationStatus = authenticationStatus;
~
-		markDirty();
~
-	}
~
~
-	public String getReferrer() {
~
-		return referrer;
~
-	}
~
~
-	public void setReferrer(String referrer, String authenticator) {
~
-		markDirty();
~
-		this.referrer = referrer;
~
-		referrerSource = authenticator;
~
-	}
~
-	
~
-	public void setReferrerUnlessAlreadySetByADifferentAuthenticator (String referrer, String authenticator) {
~
-		if (referrerSource == null || StringUtils.equals(referrerSource, authenticator)) {
~
-			setReferrer(referrer, authenticator);
~
-		}
~
-		
~
-//		if (StringUtils.isBlank(referrer))
~
-//			return;
~
-//		
~
-//		if (StringUtils.isBlank(this.referrer) || StringUtils.equals(referrerSource, authenticator)) {
~
-//			setReferrer(referrer, authenticator);
~
-//		}
~
-	}
~
-	
~
-	public void setTargetUrlUnlessAlreadySetByADifferentAuthenticator(String url, String authenticator) {
~
-		if (StringUtils.isBlank(url))
~
-			return;
~
-		
~
-		if (StringUtils.isBlank(targetUrl) || StringUtils.equals(targetUrlSource, authenticator)) {
~
-			markDirty();
~
-			targetUrl = url;
~
-			targetUrlSource = authenticator;
~
-		}
~
-	}
~
-	
~
-	public String getTargetUrl() {
~
-		return targetUrl;
~
-	}
~
~
-	@Override
~
-	public String toString() {
~
-		return ToStringBuilder.reflectionToString(this);
~
-	}
~
 
~
 	@Override
~
 	public void valueBound(HttpSessionBindingEvent event) {
~
 		
-markSessionPersistedObjectClean();
+super.valueBound(event);
~
 		if (wayfInfo != null) {
~
 			wayfInfo.markSessionPersistedObjectClean();
~
 		}
~
-		logger.debug("User object bound to session: (" + event.getSession().getId() + "): " + this.toString());
~
-	}
~
~
-	@Override
~
-	public void valueUnbound(HttpSessionBindingEvent event) {
~
-		logger.debug("User object unbound from session: (" + event.getSession().getId() + "): " + this.toString());
~
-	}
~
~
-	public BrandingImage[] getBrandingImages() {
~
-		return brandingImages;
~
-	}
~
~
-	public void setBrandingImages(BrandingImage[] brandingImages) {
~
-		this.brandingImages = brandingImages;
~
-		markDirty();
~
-	}
~
~
-	public BrandingLink[] getBrandingLinks() {
~
-		return brandingLinks;
~
-	}
~
~
-	public void setBrandingLinks(BrandingLink[] brandingLinks) {
~
-		this.brandingLinks = brandingLinks;
~
-		markDirty();
~
-	}
~
~
-	public ExternalWidget[] getExternalWidgets() {
~
-		return widgets;
~
-	}
~
~
-	public void setExternalWidgets(ExternalWidget[] widgets) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.widgets = widgets;
~
-	}
~
~
~
-	public ShibbolethWayf getWayfInfo() {
~
-		return wayfInfo;
~
-	}
~
~
-	public void setWayfInfo(ShibbolethWayf wayfInfo) {
~
-		this.wayfInfo = wayfInfo;
~
-		markDirty();
~
-	}
~
~
-	public void setAuthFailure(AuthFailure authFailure) {
~
-		this.authFailure = authFailure;
~
-		markDirty();
~
-	}
~
~
-	public AuthFailure getAuthFailure() {
~
-		return authFailure;
~
 	}
~
 
~
 	@Override
~
@@ -600,221 +38,47 @@ public class User implements OptimizedSessionPersistedObject, HttpSessionBinding
 											: wayfInfo.isSessionPersistedObjectDirty();
~
 	}
~
 
~
 	
+@Override
~
 	public
-final
  void 
-markSessionPersistedObjectClean() {
~
-		dirty
+clearUnusedProperties(){
~
+		super.clearUnusedProperties();
~
+		wayfInfo
  =
-false;
~
-	}
~
~
-	protected final void markDirty() {
~
-		dirty = true;
~
-	}
~
-	
~
-	public void setAccountDeleted(boolean deleted) {
~
-		this.accountDeleted = deleted;
~
-		markDirty();
~
-	}
~
-	
~
-	/**
~
-	 * Check whether the user's (admin-created) My Research profile has been
~
-	 * deleted.
~
-	 * @return <code>true</code> if the account has been deleted.
~
-	 */
~
-	public boolean isAccountDeleted() {
~
-		return accountDeleted;
~
-	}
~
~
-	public boolean isInstitutionAccountExpired() {
~
-		return institutionAccountExpired;
~
-	}
~
-	
~
-	public void setInstitutionAccountExpired(boolean institutionAccountExpired) {
~
-		this.institutionAccountExpired = institutionAccountExpired;
~
-		markDirty();
~
-	}
~
~
-	public boolean getInstitutionAccountExpiresSoon() {
~
-		return institutionAccountExpiresSoon;
~
-	}
~
~
-	public void setInstitutionAccountExpiresSoon(boolean institutionAccountExpiresSoon) {
~
-		this.institutionAccountExpiresSoon = institutionAccountExpiresSoon;
~
-		markDirty();
~
-	}
~
~
-	// For My Research accounts that are going to expire sometime soon....
~
-	public void setInstitutionAccountExpiryDate(Date expiryDate) {  //TODO CR Should this call markDirty()?  Why not?
~
-		institutionAccountExpiryDate = expiryDate;
~
-	}
~
~
-	public Date getInstitutionAccountExpiryDate() {
~
-		return institutionAccountExpiryDate;
~
-	}
~
~
-	public String getInstitutionAccountExpiryDateFormatted() {
~
-		// Should this be Locale sensitive?
~
-		SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
~
-		return sdf.format(institutionAccountExpiryDate);
~
-	}
~
~
-	public boolean isAccountReactivatedThisSession() {
~
-		return accountReactivatedThisSesson;
~
-	}
~
~
-	public void setAccountReactivatedThisSession(boolean accountReactivatedThisSesson) {
~
-		this.accountReactivatedThisSesson = accountReactivatedThisSesson;
~
-		markDirty();
~
-	}
~
~
-	public boolean isPublicProfileAvailable() {
~
-		return publicProfile !=
  null;
-}
~
~
-	public void setPublicProfile(PublicProfile pubprofile) {
~
-		publicProfile = pubprofile;
~
-		markDirty();
~
-	}
~
~
-	public PublicProfile getPublicProfile() {
~
-		return publicProfile;
~
-	}
~
~
-	public boolean getShowWarningMessage() {
~
-		return showWarningMessage;
~
-	}
~
~
-	public void setShowWarningMessage(boolean val) {  //TODO CR Should this call markDirty()?  Why not?
~
-		showWarningMessage = val;
~
-	}
~
~
-	public boolean getShowShoppingCart() {
~
-		return showShoppingCart;
~
-	}
~
~
-	public void setShowShoppingCart(boolean val) {  //TODO CR Should this call markDirty()?  Why not?
~
-		showShoppingCart = val;
~
-	}
~
-	
~
-	public boolean hasAuthException() {
~
-		return authException;
~
-	}
~
-	
~
-	public void setAuthException(boolean hasException) { //TODO CR Should this call markDirty()?  Why not?
~
-		authException = hasException;
~
 	}
~
 	
~
 	
-public Throwable getServerException() {
~
-		return serverException;
~
-	}
+// =================================================================================================
~
 	
~
 	public 
-void setServerException(Throwable exception) { //TODO CR Should this call markDirty()?  Why not?
~
-		serverException = exception;
~
-	}
~
-	
~
-	public boolean getPricingNotification()
+ShibbolethWayf getWayfInfo()
  {
~
 		return 
-pricingNotification;
+wayfInfo;
~
 	}
~
 
~
 	public void 
-setPricingNotification( boolean disableNotification )
+setWayfInfo(ShibbolethWayf wayfInfo)
  {
~
 		
-pricingNotification
+this.wayfInfo
  = 
-disableNotification;
~
-		markDirty();
~
-	}
~
-	
~
-	public boolean isPricePreviewLink() {
~
-		return pricePreviewLink;
~
-	}
~
-	
~
-	public void setPricePreviewLink(boolean pricePreviewLink) {
~
-		this.pricePreviewLink = pricePreviewLink;
+wayfInfo;
~
 		markDirty();
~
 	}
~
 	
~
 	public
-boolean isOverTheLimit() {
~
-		return overTheLimit;
~
-	}
~
-	
~
-	public void setOverTheLimit(boolean overTheLimit) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.overTheLimit = overTheLimit;
~
-	}
~
~
-	public String[] getProjectCodeLists() {
~
-		return (projectCodeLists != null ? projectCodeLists.getProjectCode() : new String[0]);
~
-	}
~
~
-	public void setProjectCodeLists(ProjectCodes projectCodeLists) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.projectCodeLists = projectCodeLists;
~
-	}
~
-	
~
-	public String getRequestedPage() {
  String 
-resourceName = requestUrl;
~
-		if(StringUtils.isNotBlank(requestUrl) && requestUrl.indexOf('?') != -1) { 
~
-			resourceName = requestUrl.substring(0, requestUrl.indexOf('?'));	
~
-		}		
~
-		return resourceName;
~
-	}
~
-	
~
-	public Object[] getContext()
+getShibbolethRequestedPageURI()
  {
~
 		return 
-context;
~
-	}
~
-	
~
-	public void setContext(Object[] context) {   //TODO CR Should this call markDirty()?  Why not?
~
-		this.context = context;
+ShibbolethRequestedPageURI;
~
 	}
~
 
~
 	public
-String[] getSessionLimitMessage() {
~
-		return sessionLimitMessage;
~
-	}
~
-	
~
-	public
  void 
-setSessionLimitMessage(String[] sessionLimitMessage)
+setShibbolethRequestedPageURI(String shibbolethRequestedPageURI)
  {   //TODO CR Should this call markDirty()?  Why not?
~
 		
-this.sessionLimitMessage
+ShibbolethRequestedPageURI
  = 
-sessionLimitMessage;
+shibbolethRequestedPageURI;
~
 	}
~
 	
~
 	public 
-boolean isUserPubTitleViewSelection()
+String getSaveToFlowInProgress()
  {
~
 		return 
-userPubTitleViewSelection;
+saveToFlowInProgress;
~
 	}
~
 
~
 	public void 
-setUserPubTitleViewSelection(boolean userPubTitleViewSelection)
+setSaveToFlowInProgress(String saveToFlowInProgress)
  {  //TODO CR Should this call markDirty()?  Why not?
~
 		
-this.userPubTitleViewSelection
+this.saveToFlowInProgress
  = 
-userPubTitleViewSelection;
~
-	}
~
-	
~
-	public boolean isPersonalProfileExpired() {
~
-		return personalProfileExpired;
~
-	}
~
-	
~
-	public void setPersonalProfileExpired(boolean personalProfileExpired) {
~
-		this.personalProfileExpired = personalProfileExpired;
~
-		markDirty();
~
-	}
~
-	
~
-	public String getRedirect() {
~
-		return redirect;
+saveToFlowInProgress;
~
 	}
~
 	
~
 	public 
-void setRedirect(String redirect)
+int getRetryCounterForFlow()
  {
~
 		
-this.redirect = redirect;
~
-		markDirty();
+return retryCounterForFlow;
~
 	}
~
 	
~
-/*
~
-	 * To clear the Properties which are no longer required after successful authentication. ensuring that information 
~
-	 * is removed from the session state when it is no longer needed.
~
-	 */
 	public void 
-clearUnusedProperties(){
~
-		serverException
+setRetryCounterForFlow(int retryCounterForFlow) {  //TODO CR Should this call markDirty()?  Why not?
~
+		this.retryCounterForFlow
  = 
-null;
~
-		requestUrl = null;
~
-		authenticationStatus = null;
~
-		referrer = null;
~
-		wayfInfo = null;
~
-		authFailure = null;
+retryCounterForFlow;
~
 	}
~
~
 	
~
-	public String getShibbolethRequestedPageURI() {
~
-		return ShibbolethRequestedPageURI;
~
-	}
~
~
-	public void setShibbolethRequestedPageURI(String shibbolethRequestedPageURI) {   //TODO CR Should this call markDirty()?  Why not?
~
-		ShibbolethRequestedPageURI = shibbolethRequestedPageURI;
~
-	}
~
~
 	public EbraryChannel getEbraryChannel() {
~
 		return ebraryChannel;
~
 	}
~
@@ -823,22 +87,7 @@ public class User implements OptimizedSessionPersistedObject, HttpSessionBinding
 		this.ebraryChannel = ebraryChannel;
~
 	}
~
 	
~
 	public
-Map<FederatedSearchType, FederatedSearchAuthToken> getFederatedSearchAuthTokens() {
~
-		if(federatedSearchAuthTokens == null) {
~
-			federatedSearchAuthTokens = new HashMap<FederatedSearchType, FederatedSearchAuthToken>();
~
-		} 
~
-		return federatedSearchAuthTokens;
~
-	}
~
~
-	public FederatedSearchAuthToken getEbraryToken() {
~
-		return getFederatedSearchAuthTokens().get(FederatedSearchType.EBRARY);
~
-	}
~
-	
~
-	public void setEbraryToken(FederatedSearchAuthToken token) {  //TODO CR Should this call markDirty()?  Why not?
~
-		getFederatedSearchAuthTokens().put(FederatedSearchType.EBRARY, token);
~
-	}	
~
- 	
~
- 	public
  FlowAccessToken getAccessTokenForFlow() {
~
 		return accessTokenForFlow;
~
 	}
~
 
~
@@ -846,19 +95,4 @@ public class User implements OptimizedSessionPersistedObject, HttpSessionBinding
 		this.accessTokenForFlow = accessTokenForFlow;
~
 	}
~
 
~
-	public String getSaveToFlowInProgress() {
~
-		return saveToFlowInProgress;
~
-	}
~
~
-	public void setSaveToFlowInProgress(String saveToFlowInProgress) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.saveToFlowInProgress = saveToFlowInProgress;
~
-	}
~
-	
~
-	public int getRetryCounterForFlow() {
~
-		return retryCounterForFlow;
~
-	}
~
-	
~
-	public void setRetryCounterForFlow(int retryCounterForFlow) {  //TODO CR Should this call markDirty()?  Why not?
~
-		this.retryCounterForFlow = retryCounterForFlow;
~
-	}
~
 }
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/MinimalProductConfig.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/MinimalProductConfig.java
index 25a1fc6..d995efe 100755
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/MinimalProductConfig.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/MinimalProductConfig.java
@@ -43,7 +43,7 @@ public class MinimalProductConfig implements ProductConfig, Serializable
 	@Override
~
 	public String getString(String key) throws ProductConfigException {
~
 		if (!productConfigMap.containsKey(key)) {
~
 			throw new ProductConfigException("not 
-found");
+found: " + key);
~
 		}
~
 		return productConfigMap.get(key);
~
 	}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MStarConfigurationAcademicImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MStarConfigurationAcademicImpl.java
new file mode 100644
index 0000000..68931cf
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MStarConfigurationAcademicImpl.java
@@ -0,0 +1,17 @@
+package com.caucus.apps.corelib.config.mstar;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+
~
+public class MStarConfigurationAcademicImpl extends MnemonicsConfigurationDefaultImpl{
~
+
~
+	public MStarConfigurationAcademicImpl(ProductConfig productConfig) {
~
+		super(productConfig);
~
+	}
~
+
~
+	@Override
~
+	protected String getPreferredApplication() {
~
+		
~
+		return "preferredAcademic";
~
+	}
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfiguration.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfiguration.java
index 55b4383..00204af 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfiguration.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfiguration.java
@@ -4,7 +4,7 @@ import java.util.List;
 import java.util.Map;
~
 import java.util.Set;
~
 
~
 import 
-com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
+com.caucus.apps.corelib.search.Mnemonic;
 
~
 
~
 /**
~
  * Configuration of MStar mnemonics.
~
@@ -15,6 +15,8 @@ import com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
  */
~
 public interface MnemonicsConfiguration {
~
 
~
 	
+public static final String RELATION_OPERATOR = "#";
 
~
 
~
 	/**
~
 	 *  Get preferred mnemonics. Used on Command Line page to show available mnemonics.
~
 	 * 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationDefaultImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationDefaultImpl.java
index 3288c4f..aa23127 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationDefaultImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationDefaultImpl.java
@@ -9,8 +9,8 @@ import java.util.Set;
 import org.apache.commons.lang.StringUtils;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
~
 
~
 public class MnemonicsConfigurationDefaultImpl implements MnemonicsConfiguration {
~
 	
~
@@ -77,7 +77,7 @@ public class MnemonicsConfigurationDefaultImpl implements MnemonicsConfiguration
 			mnemonicExpansion = defaultValue;
~
 		}
~
 		if (StringUtils.isNotBlank(mnemonic.getRelation()) && StringUtils.isNotBlank(mnemonicExpansion)) {
~
 			mnemonicExpansion += 
-FieldMnemonicTranslator.RELATION_OPERATOR
+RELATION_OPERATOR
  + mnemonic.getRelation();
~
 		}
~
 		return mnemonicExpansion;
~
 	}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParent.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParent.java
index f894f32..330955d 100755
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParent.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParent.java
@@ -1,20 +1,9 @@
 package com.caucus.apps.corelib.documents.indexfields.model.data;
~
 
~
-import org.apache.commons.lang.ArrayUtils;
~
~
-import com.caucus.apps.core.services.relatedids.RelatedId;
~
-import com.caucus.apps.core.services.relatedids.RelatedIds;
~
-import com.caucus.apps.gossamer.relatedids.RelatedidsGoidIdtypeIdResource;
~
-import com.caucus.gossamer.exceptions.CommunicationsException;
~
-import com.caucus.gossamer.exceptions.EncodingDecodingException;
~
-import com.caucus.gossamer.exceptions.MethodFault;
~
 
~
 /**
~
  * Data model/bean for Experian "parent" or "ultimate parent" companies.
~
  * 
~
- * Just a bean, except that the details of getting the company's goid are also here,
~
- * since it depends on the state (recordId) of the ExperianParent.
~
- * 
~
  * @author Charles Roth
~
  */
~
 
~
@@ -39,18 +28,4 @@ public class ExperianParent
 	public String toString() {
~
 		return companyName + ":" + recordId;
~
 	}
~
-	
~
-	public String getGoid (RelatedidsGoidIdtypeIdResource relatedIdResource) {
~
-		RelatedIds goids = null;
~
-		try {
~
-			goids = relatedIdResource.get("MstarXID", recordId);
~
-		} catch (EncodingDecodingException | CommunicationsException | MethodFault e) {
~
-		}
~
-		
~
-		if (goids == null)
~
-			return "";
~
-		
~
-		RelatedId[] ids = goids.getRelatedId();
~
-		return (ArrayUtils.isNotEmpty(ids) ? ids[0].getContent() : "");
~
-	}
~
 }
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Media.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Media.java
index 28d43c2..e438fd0 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Media.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Media.java
@@ -2,8 +2,8 @@ package com.caucus.apps.corelib.media;
 
~
 import java.util.List;
~
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Link;
~
 import com.caucus.apps.corelib.media.mindexv2.RelatedId;
~
 import com.caucus.apps.corelib.media.mindexv2.Repattrib;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaAttachment.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaAttachment.java
index 277af51..64a2fa2 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaAttachment.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaAttachment.java
@@ -7,8 +7,8 @@ import java.util.List;
 
~
 import org.apache.commons.lang.StringUtils;
~
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Comp;
~
 import com.caucus.apps.corelib.media.mindexv2.Link;
~
 import com.caucus.apps.corelib.media.mindexv2.Mindex;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaIndex.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaIndex.java
index 638df98..9df2d3d 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaIndex.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MediaIndex.java
@@ -88,34 +88,34 @@ public class MediaIndex
 	// Data structure to speed up look ups of media by role an subrole
~
 	private Map<Role, Map<SubRole, List<MediaAttachment>>> mediaMap;
~
 
~
+//
 	public enum Role {
~
+//
 		CIT, CITR, ABS, FT, PART, ILI, IXI, VI, AU, MMCD, MMI, MMPN, MMST, MMDT, MMUS, IND, SUPP, IP, IM, PG, CHEM, UNKNOWN;
~
+//		
~
+//
 		public static Role find(String roleName) {
~
+//
 			for(Role role : Role.values()) {
~
+//
 				if(role.name().equalsIgnoreCase(roleName)) {
~
+//
 					return role;
~
+//
 				}
~
+//
 			}
~
+//
 			logger.error("No matching role found for - " + roleName);
~
+//
 			return Role.UNKNOWN;
~
+//
 		}
~
+//
 	}
~
 
~
+//
 	public enum SubRole {
~
+//
 		CD, CIT, CITR, ABS, PABS, FT, BFT, AI, PFT, ZFT, PRW, HQPF, NORM, HQ, THUM, INL, FULL, PNKY, EMBD, DNLD, EXE,
~
+//
 		NORMAL, ORIG, TXT, ZIP, IMP, PCMI, LST, FILE, XG, MF, MC, EC, PREM, CMST, LO, UNKNOWN;
~
+//		
~
+//
 		public static SubRole find(String subRoleName) {
~
+//
 			for(SubRole subRole : SubRole.values()) {
~
+//
 				if(subRole.name().equalsIgnoreCase(subRoleName)) {
~
+//
 					return subRole;
~
+//
 				}
~
+//
 			}
~
+//
 			logger.error("No matching subrole found for - " + subRoleName);
~
+//
 			return SubRole.UNKNOWN;
~
+//
 		}
~
+//
 	}
~
 	
~
 	public enum UserRights {
~
 		OpenAccess, Restricted, NoRightsSpecified, HasRightsForCategory, PartialAccess, NoAccess
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MindexDigesterV2.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MindexDigesterV2.java
index f9e4397..e804d9c 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MindexDigesterV2.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/MindexDigesterV2.java
@@ -180,7 +180,7 @@ public class MindexDigesterV2 implements MindexParser
 		 */
~
 		if(xmlcomp.getAttributesValue("dbid") != null) {
~
 				comp.setDbid( xmlcomp.getAttributesValue("dbid") );
~
 		} else if 
-(StringUtils.equalsIgnoreCase(MediaIndex.Role.ILI.toString(),
+(StringUtils.equalsIgnoreCase(Role.ILI.toString(),
  comp.getType())) {
~
 			if (comp.getOrder()!=null) 
~
 				comp.setDbid(comp.getMstar_lm_media_id()+comp.getType()+comp.getOrder().getCategory()+comp.getOrder().getContent()+comp.getBasepath());
~
 			else
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Role.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Role.java
new file mode 100755
index 0000000..274ffcc
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/Role.java
@@ -0,0 +1,21 @@
+package com.caucus.apps.corelib.media;
~
~
+import org.slf4j.Logger;
~
+import org.slf4j.LoggerFactory;
~
~
+public enum Role {
~
+	CIT, CITR, ABS, FT, PART, ILI, IXI, VI, AU, MMCD, MMI, MMPN, MMST, MMDT, MMUS, IND, SUPP, IP, IM, PG, CHEM, UNKNOWN;
~
+	
~
+	private static final Logger logger = LoggerFactory.getLogger(Role.class);
~
+	
~
+	public static Role find(String roleName) {
~
+		for(Role role : Role.values()) {
~
+			if(role.name().equalsIgnoreCase(roleName)) {
~
+				return role;
~
+			}
~
+		}
~
+		logger.error("No matching role found for - " + roleName);
~
+		return Role.UNKNOWN;
~
+	}
~
~
+}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/SubRole.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/SubRole.java
new file mode 100755
index 0000000..3d61d00
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/media/SubRole.java
@@ -0,0 +1,22 @@
+package com.caucus.apps.corelib.media;
~
~
+import org.slf4j.Logger;
~
+import org.slf4j.LoggerFactory;
~
~
+public enum SubRole {
~
+	CD, CIT, CITR, ABS, PABS, FT, BFT, AI, PFT, ZFT, PRW, HQPF, NORM, HQ, THUM, INL, FULL, PNKY, EMBD, DNLD, EXE,
~
+	NORMAL, ORIG, TXT, ZIP, IMP, PCMI, LST, FILE, XG, MF, MC, EC, PREM, CMST, LO, UNKNOWN;
~
+	
~
+	private static final Logger logger = LoggerFactory.getLogger(SubRole.class);
~
+	
~
+	public static SubRole find(String subRoleName) {
~
+		for(SubRole subRole : SubRole.values()) {
~
+			if(subRole.name().equalsIgnoreCase(subRoleName)) {
~
+				return subRole;
~
+			}
~
+		}
~
+		logger.error("No matching subrole found for - " + subRoleName);
~
+		return SubRole.UNKNOWN;
~
+	}
~
~
+}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/models/DisplayFormat.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/models/DisplayFormat.java
index 6b7fc12..4620b3a 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/models/DisplayFormat.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/models/DisplayFormat.java
@@ -1,8 +1,8 @@
 package com.caucus.apps.corelib.models;
~
 
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.services.retrieve.ItemFormatConstants;
~
 
~
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/ContentServiceFigTableSearchConverter.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/ContentServiceFigTableSearchConverter.java
new file mode 100644
index 0000000..e38f279
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/ContentServiceFigTableSearchConverter.java
@@ -0,0 +1,13 @@
+package com.caucus.apps.corelib.search;
~
~
+import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
~
+public class ContentServiceFigTableSearchConverter implements
~
+		FigTableSearchConverter {
~
~
+	@Override
~
+	public SearchTerm getFigTableTerm(SearchTerm term, QueryData query) {
~
+		return term;
~
+	}
~
~
+}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java
deleted file mode 100644
index ce51130..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package com.caucus.apps.corelib.search;
~
~
-import java.util.Set;
~
~
-/*
~
- * Dummy version of FieldFormatter, that does nothing -- mostly passes its arguments
~
- * through unchanged. containsHit() does check for {@code [[mkup]].
~
- * Primarily needed for testing, but because it is used in
~
- * multiple projects (Corelib and OneSearch), I stuck it here.
~
- * 
~
- * Charles Roth, May 2012
~
- */
~
-public class DummyFieldFormatter implements FieldFormatter {
~
-	
~
-	@Override public String formatHitHighlighting(String content, boolean removeHighlights) { return content; }
~
-	@Override public String removeHitHighlighting(String content)                           { return content; }
~
-	@Override public String removeHitHighlightingHTML(String content)                       { return content; }
~
-	@Override public String forceHighlightAll(String content)                               { return content; }
~
-	@Override public String removeCDataMarkup(String content)                               { return content; }
~
-	@Override public Set<String> getMarkupValues(String content)                            { return null; }
~
-	@Override public String markupContent(String content, Set<String> valuesToHighlight)    { return null; }
~
-	@Override public boolean containsHit(String content)                                    { return content.contains(SearchEngine.HIT_HIGHLIGHT_TEXT); } 
~
~
-}
~
-		
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyResultsItem.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyResultsItem.java
index 6b48f42..ec241b5 100755
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyResultsItem.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/DummyResultsItem.java
@@ -17,6 +17,12 @@ import org.junit.Ignore;
  * @author Charles Roth 1 May 2012
~
  */
~
 
~
~
+// DANGER DANGER DANGER DANGER!!!
~
+//
~
+// This class is used in production code!!  This is really, really, bad, and should be fixed
~
+// soon, one way or t'other.     2014-11-23
~
~
 @Ignore
~
 public class DummyResultsItem extends AbstractResultsItem {
~
 	private static final long serialVersionUID = 1L;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/FigTableSearchConverter.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/FigTableSearchConverter.java
new file mode 100644
index 0000000..7e70369
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/FigTableSearchConverter.java
@@ -0,0 +1,22 @@
+package com.caucus.apps.corelib.search;
~
+
~
+import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
+
~
+
~
+/**
~
+ * Converts SearchTerm to a SearchTerm for finding
~
+ * images and figures.
~
+ * 
~
+ * @author rappelbo
~
+ */
~
+public interface FigTableSearchConverter {
~
+
~
+	/**
~
+	 * Creates searchterm to search for images/ tables for a query.
~
+	 * @param term Original search term.
~
+	 * @param query Original query.
~
+	 * @return Searchterm to find related images/ figures.
~
+	 */
~
+	SearchTerm getFigTableTerm(SearchTerm term, QueryData query);
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/IDocumentSummary.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/IDocumentSummary.java
index 820eb4b..8f86bf7 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/IDocumentSummary.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/IDocumentSummary.java
@@ -1,6 +1,7 @@
 package com.caucus.apps.corelib.search;
~
 
~
 import java.util.Iterator;
~
+import java.util.Map.Entry;
~
 
~
 public interface IDocumentSummary {
~
 	public long getRank();
~
@@ -13,5 +14,5 @@ public interface IDocumentSummary {
   
~
 	public String getSummaryField(String key);
~
   
~
 	public 
-Iterator<?>
+Iterator<Entry<String,String>>
  summaryFields();
~
 }
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/Mnemonic.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/Mnemonic.java
new file mode 100644
index 0000000..57529b5
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/Mnemonic.java
@@ -0,0 +1,96 @@
+package com.caucus.apps.corelib.search;
~
+
~
+import java.util.Collection;
~
+import java.util.Collections;
~
+import java.util.HashSet;
~
+import java.util.Set;
~
+
~
+import org.apache.commons.lang.StringUtils;
~
+
~
+import com.caucus.apps.corelib.search.strategy.MStarFieldStrategy;
~
+import com.caucus.apps.corelib.search.strategy.MStarFieldStrategyBuilder;
~
+
~
+public class Mnemonic {
~
+	
~
+	
~
+	private final MStarFieldStrategyBuilder strategyBuilder;
~
+	
~
+	private String mnemonic = "";
~
+	private Set<String> relations = new HashSet<String>();
~
+	private String expansion = "";
~
+
~
+	private String qualifier;
~
+	
~
+	public Mnemonic() {
~
+		this.strategyBuilder = null;
~
+	}
~
+	
~
+	public Mnemonic(MStarFieldStrategyBuilder strategyBuilder) {
~
+		this.strategyBuilder = strategyBuilder;
~
+	}
~
+	
~
+	public Mnemonic(MStarFieldStrategyBuilder strategyBuilder, String mnemonic, String relation) {
~
+		this(strategyBuilder);
~
+		this.mnemonic = mnemonic;
~
+		if (StringUtils.isNotBlank(relation)) {
~
+			this.relations.add(relation);
~
+		}
~
+	}
~
+
~
+	public Mnemonic(String mnemonic, String relation) {
~
+		this(null);
~
+		this.mnemonic = mnemonic;
~
+		if (StringUtils.isNotBlank(relation)) {
~
+			this.relations.add(relation);
~
+		}
~
+	}
~
+	
~
+	public String getMnemonic() {
~
+		return mnemonic;
~
+	}
~
+	public void setMnemonic(String mnemonic) {
~
+		this.mnemonic = mnemonic;
~
+	}
~
+	public String getRelation() {
~
+		return relations.size() > 0 ? StringUtils.join(relations, ".") : "";
~
+	}
~
+	
~
+	public Set<String> getRelations() {
~
+		return Collections.unmodifiableSet(relations);
~
+	}
~
+	
~
+	public void addRelation(String relation) {
~
+		if (StringUtils.isNotBlank(relation)) {
~
+			this.relations.add(relation);
~
+		}
~
+	}
~
+
~
+	public void setRelations(Collection<String> relations) {
~
+		this.relations.clear();
~
+		this.relations.addAll(relations);
~
+	}
~
+	
~
+	public String getExpansion() {
~
+		return expansion;
~
+	}
~
+
~
+	
~
+	public void setExpansion(String expansion) {
~
+		this.expansion = expansion;
~
+	}
~
+
~
+	public boolean isExact() {
~
+		boolean res =  relations.contains("exact");
~
+		if(!res && strategyBuilder != null) {
~
+			MStarFieldStrategy strategy = strategyBuilder.buildTermStrategy(qualifier);
~
+			if(strategy != null)
~
+				res = strategy.treatInputAsPhrase();
~
+		}
~
+		return res;
~
+	}
~
+
~
+	public void setQualifier(MnemonicExpressionHandler handler) {
~
+		if(strategyBuilder != null && handler != null)
~
+			qualifier = handler.getMnemonicExpansion(this, null);
~
+	}
~
+}
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/MnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/MnemonicExpressionHandler.java
new file mode 100644
index 0000000..7e6dc2c
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/MnemonicExpressionHandler.java
@@ -0,0 +1,11 @@
+package com.caucus.apps.corelib.search;
~
+
~
+import java.io.IOException;
~
+
~
+
~
+public interface MnemonicExpressionHandler {
~
+
~
+	public String handleMnemonicSubExpression(Mnemonic mnemonic, String mnemonicSubKey, String mnemonicExpression) throws IOException;
~
+	public String getMnemonicExpansion(Mnemonic mnemonic, String mnemonicSubKey);
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/UniqueItemID.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/UniqueItemID.java
index 3f89247..8ba0cea 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/UniqueItemID.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/UniqueItemID.java
@@ -83,7 +83,7 @@ public class UniqueItemID implements Serializable
 	public UniqueItemID(String instance, String collection, String itemId)
~
 	{
~
 		if (StringUtils.isBlank(instance) || StringUtils.isBlank(itemId)) {
~
 			throw new IllegalArgumentException("Cannot construct a UniqueItemID from a blank id. 
-collection="
+instance="
  + 
-collection
+instance
  + ", itemId=" + itemId);
~
 		}
~
 		this.instance = instance;
~
 		if (StringUtils.isNotBlank(collection)) {
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ContentItemWrapperFactoryServiceImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ContentItemWrapperFactoryServiceImpl.java
index 4ff9ffa..3aa5971 100755
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ContentItemWrapperFactoryServiceImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ContentItemWrapperFactoryServiceImpl.java
@@ -73,7 +73,7 @@ public class ContentItemWrapperFactoryServiceImpl implements ContentItemWrapperF
 	private static final Pattern ABS_LANG = Pattern.compile("<Language.*?>.*?</Language>");
~
 	private static final Pattern ABS_LANG_RAW = Pattern.compile("<RawLang>(.*)</RawLang>");
~
 	private static final Pattern ABS_IMAGE = Pattern.compile("<object.*?>.*?</object>");
~
 	private static final Pattern ABS_BODY = 
-Pattern.compile("<body.*?>.*?</body>");
+Pattern.compile("<body.*?>.*?</body>",Pattern.DOTALL);
 
~
 	private static final Pattern ABS_LANG_EXPANSION = Pattern.compile("<ISOExpansion.*?>(.*)</ISOExpansion>");
~
 	/**
~
 	 * TODO:
~
@@ -860,7 +860,7 @@ public class ContentItemWrapperFactoryServiceImpl implements ContentItemWrapperF
 	@Override
~
 	public String getObjectTypeByXPath(ResultsItem item, boolean highlighted) {
~
 		String objectType = "";
~
 		
-if(item.supportsGetObjectByXpath()){
+if (!(item.supportsGetObjectByXpath())) {
 
~
 			objectType = getFieldValue(item, OBJECTXPATH, highlighted, true);
~
 			objectType = StringUtils.replace(objectType, "; ", "|");
~
 		}
~
@@ -1347,7 +1347,7 @@ public class ContentItemWrapperFactoryServiceImpl implements ContentItemWrapperF
 	private String processAbstractFieldValue(String abstractText, final String requiredAbstractType, final boolean highlighted, ThreadLocale currentLocale) {
~
 		if (hasValidTypeTag(abstractText, requiredAbstractType)) {
~
 			final StringBuilder out = new StringBuilder();
~
 			Pattern ABS_TYPE = Pattern.compile("<"+ requiredAbstractType + ".*?>.*?</" + requiredAbstractType + 
-">");
+">",Pattern.DOTALL);
 
~
 			Matcher matchType = ABS_TYPE.matcher(abstractText);
~
 			List<String> absTypeNodes = new ArrayList<String>();
~
 			while (matchType.find()) {
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ResultsItemImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ResultsItemImpl.java
index 0a8b3f8..9298fbf 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ResultsItemImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/ResultsItemImpl.java
@@ -1,7 +1,10 @@
 package com.caucus.apps.corelib.search.impl;
~
 
~
 import java.util.Collection;
~
+import java.util.HashMap;
~
+import java.util.Iterator;
~
 import java.util.Map;
~
+import java.util.Map.Entry;
~
 
~
 import org.slf4j.Logger;
~
 import org.slf4j.LoggerFactory;
~
@@ -105,7 +108,13 @@ public class ResultsItemImpl extends AbstractResultsItem {
 
~
 	@Override
~
 	public Map<String, String> getAllFields() {
~
         
-throw
+Map<String, String> allFields =
  new 
-UnsupportedOperationException();
+HashMap<String, String>(docSummary.fieldCount());
~
+        for (Iterator<Entry<String,String>> it = docSummary.summaryFields();it.hasNext(); ) 
~
+        {
~
+            Entry<String,String> docSummField = it.next();
~
+            allFields.put(docSummField.getKey(), docSummField.getValue());
~
+        }
~
+        return allFields;
~
 	}
~
 
~
 	@Override
~
@@ -152,7 +161,7 @@ public class ResultsItemImpl extends AbstractResultsItem {
 
~
         if (remoteFieldResultView != null){
~
             try {
~
                 String espQueryString = fastESPQueryBuilder.buildFastEspQueryForFullText(getCollection(), getContentId(), 
-searchEngine.getFieldNameDuplicateID(),
+null,
  remoteFieldResultView);
~
                 searchEngine.setEspQueryString(espQueryString);
~
                 
~
                 UniqueItemID id = getUniqueID();
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/SearchEngineImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/SearchEngineImpl.java
index 1ca3d7f..ced742a 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/SearchEngineImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/SearchEngineImpl.java
@@ -41,6 +41,11 @@ public class SearchEngineImpl implements SearchEngine , ProductConfigListener, C
 	 */
~
 	private static final long serialVersionUID = 5466678528840152467L;
~
 	private final Logger logger = LoggerFactory.getLogger(SearchEngineImpl.class);
~
 	
~
 	
+private static final String IDENTITY = "FastEnterpriseSearch";
~
+	private static final String CFGKEY_SEARCHENGINECONFIG = CFGKEY_SEARCHENGINE + "." + IDENTITY;
~
+	private static final String CFGKEY_FIELDNAME_DUPLICATE_ID = CFGKEY_SEARCHENGINECONFIG + ".fieldNameDuplicateId";
~
 	
~
 	private String searchEngineName;
~
 	private String fql;
~
 	
~
@@ -75,7 +80,7 @@ public class SearchEngineImpl implements SearchEngine , ProductConfigListener, C
         ids.add(id);
~
 
~
         IQueryResult queryResult = executeRetrieve(ids);
~
         InstanceAndView instanceView = (id.getInstance() != null) ? new InstanceAndView(id.getInstance()) : new 
-InstanceAndView();
+InstanceAndView("MSTAR");
~
 		return new ResultsItemImpl(queryResult.getDocument(0),instanceView, productConfig, this);
~
 	}
~
 
~
@@ -122,12 +127,13 @@ public class SearchEngineImpl implements SearchEngine , ProductConfigListener, C
  //      Iql iql = new Iql();
~
  //      iql.addOp(vOp);
~
  //      search.setIql(iql);
~
        
~
         if(StringUtils.isNotBlank(fql)){
~
             search.setFql(fql);
~
             retrieveRequest.setSearch(search);      
~
             
~
         }
~
       
~
         List<String> idsList = new ArrayList<>();
~
         List<String> idsListFullText = new ArrayList<>();
~
         
~
@@ -196,7 +202,7 @@ public class SearchEngineImpl implements SearchEngine , ProductConfigListener, C
 
~
 	@Override
~
 	public String getFieldNameDuplicateID() {
~
 	    
-throw new UnsupportedOperationException();
+return productConfig.getString(CFGKEY_FIELDNAME_DUPLICATE_ID);
~
 	}
~
 
~
 	@Override
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverter.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverter.java
new file mode 100644
index 0000000..d05e8a0
--- /dev/null
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverter.java
@@ -0,0 +1,162 @@
+package com.caucus.apps.corelib.search.impl.fastesp;
~
+
~
+import java.io.IOException;
~
+import java.io.StreamTokenizer;
~
+
~
+import org.apache.commons.lang.StringUtils;
~
+import org.slf4j.Logger;
~
+import org.slf4j.LoggerFactory;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.FigTableSearchConverter;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.QueryData;
~
+import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.MultiMnemonicTranslator;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.ReservedCharFilter;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.TranslatorUtils;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
+import com.caucus.apps.corelib.search.translation.SearchTermTranslatorContext;
~
+
~
+/**
~
+ * Class which uses the FAST SearchEngine classes to convert
~
+ * a searchterm to a searchterm for Figures and Images.
~
+ * 
~
+ * Is used for the "Find related figures & table" link on the search results page.
~
+ * 
~
+ * This is all MSTAR  related.
~
+ * Unfortunately this is tied to FieldMnemonicTranslator and MultiMnemonicTranslator.
~
+ * Which are partly FAST related. So it's going into the FAST package.
~
+ * 
~
+ * This code was copied from FigAndTablesQueryParser
~
+ * 
~
+ * @author rappelbo
~
+ */
~
+public class FastFigTableSearchConverter implements FigTableSearchConverter {
~
+	
~
+	private static final Logger logger=LoggerFactory.getLogger(FastFigTableSearchConverter.class);
~
+	
~
+	public static final String CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING = "SearchEngine.FastEnterpriseSearch.TextToFigTablesFieldsMappings.";
~
+	
~
+	private final ProductConfig productConfig;
~
+
~
+	private final MnemonicsConfiguration mstarConfig;
~
+	
~
+	public FastFigTableSearchConverter(ProductConfig productConfig, MnemonicsConfiguration mstarConfig) {
~
+		this.productConfig=productConfig;
~
+		this.mstarConfig=mstarConfig;
~
+	}
~
+	
~
+	/**
~
+	 * Creates searchterm to search for images/ tables for a query.
~
+	 * @param term Original search term.
~
+	 * @param query Original query.
~
+	 * @return Searchterm to find related images/ figures.
~
+	 */
~
+	@Override
~
+	public SearchTerm getFigTableTerm(SearchTerm term, QueryData query) {
~
+		String termFieldName = term.getFieldName();
~
+		SearchTermTranslatorContext ctx = new SearchTermTranslatorContext(term.getQueryTerm(), termFieldName,
~
+				query.getQueryType(), term.getTermName());
~
+		ctx.setProductConfig(productConfig);
~
+		String defaultTranslator = productConfig.getString(CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING + "default");
~
+		ReservedCharFilter charFilter = new ReservedCharFilter();
~
+		MultiMnemonicTranslator mnemonicTranslator = new MultiMnemonicTranslator();
~
+		charFilter.translate(ctx);
~
+		mnemonicTranslator.translate(ctx);
~
+		
~
+		StringBuilder builder = new StringBuilder();
~
+
~
+		try {
~
+			boolean isword = false;
~
+			FQLTokenizer tokenizer = new FQLTokenizer(new FQLReader(ctx.getProcessedTerm().toCharArray()));
~
+			TranslatorUtils.setupTokenizer(tokenizer);
~
+			tokenizer.wordChars('!', '!');
~
+			tokenizer.wordChars('#', '\'');
~
+			tokenizer.wordChars(')', Integer.MAX_VALUE);
~
+			int ttype = tokenizer.nextToken();
~
+			boolean first = true;
~
+			while (ttype != StreamTokenizer.TT_EOF && ttype != ')') {
~
+				String token = tokenizer.sval;
~
+				if (ttype == StreamTokenizer.TT_WORD) {
~
+					isword = true;
~
+					FieldMnemonicTranslator fieldTranslator = new FieldMnemonicTranslator(productConfig,productConfig,mstarConfig);
~
+					FieldExpression expressionType = fieldTranslator.getFieldExpression(tokenizer, token, productConfig,
~
+							termFieldName, ctx.getMnemonicSubTypeKey());
~
+					if (expressionType == FieldExpression.Mnemonic) {
~
+						ttype = tokenizer.nextToken();
~
+						
~
+						Mnemonic mnemonic = fieldTranslator.parseToken(token, termFieldName);
~
+						String translator = getTranslatedMnemonic(mnemonic.getMnemonic());
~
+						
~
+						if (translator == null) {
~
+							first = append(builder, defaultTranslator, ttype, first);
~
+						}
~
+						else {
~
+							if (!StringUtils.isEmpty(mnemonic.getRelation())) {
~
+								translator += "." + mnemonic.getRelation();
~
+							}
~
+							first = append(builder, translator, ttype, first);
~
+						}
~
+					} 
~
+					else {
~
+						first = append(builder, token, ttype, first);
~
+					}
~
+				} 
~
+				else {
~
+					first = append(builder, token, ttype, first);
~
+				}
~
+
~
+				ttype = tokenizer.nextToken();
~
+			}
~
+
~
+			String fieldName = termFieldName;
~
+			
~
+			if (mstarConfig.hasMnemonicExpansion(termFieldName, ctx.getMnemonicSubTypeKey())) {
~
+				fieldName = getTranslatedMnemonic(termFieldName);
~
+				if (fieldName == null)
~
+					fieldName = defaultTranslator;
~
+				if (StringUtils.isNotEmpty(fieldName)) {
~
+					if (isword)
~
+						builder.insert(0, fieldName + ".");
~
+					else
~
+						builder.insert(0, fieldName + "(").append(")");
~
+				}
~
+			}
~
+			return new SearchTerm(term.getOperator(), fieldName, builder.toString());
~
+		} catch (IOException iOException) {
~
+			logger.error("Error converting query ", iOException);
~
+		}
~
+		return null;
~
+	}
~
+	
~
+	private String getTranslatedMnemonic(String mnemonic) {
~
+		return productConfig.getString(CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING + mnemonic, null);
~
+	}
~
+	
~
+	private boolean append(StringBuilder builder, String token, int ttype, boolean first) {
~
+		if (!first) {
~
+			builder.append(" ");
~
+		} 
~
+		first = false;
~
+		if (token == null) {
~
+			builder.append((char) ttype);
~
+			first=ttype=='(';
~
+		} else {
~
+			if (ttype == '"') {
~
+				token = "\"" + token + "\"";
~
+			}
~
+			if (ttype == '(') {
~
+				token = token + "(";
~
+				first = true;
~
+			}
~
+			builder.append(token);
~
+		}
~
+		return first;
~
+	}
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandler.java
index f6f2189..8963b17 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandler.java
@@ -7,6 +7,8 @@ import java.util.List;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/BaseMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/BaseMnemonicExpressionHandler.java
index c031ba4..fff93b7 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/BaseMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/BaseMnemonicExpressionHandler.java
@@ -2,6 +2,7 @@ package com.caucus.apps.corelib.search.impl.fastesp.translation;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 
~
 /**
~
  * Expression handler.
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandler.java
index a39c988..6e34425 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandler.java
@@ -9,6 +9,8 @@ import org.apache.commons.lang.StringUtils;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseMnemonicExpressionHandler.java
index cdcb9f9..823332b 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseMnemonicExpressionHandler.java
@@ -3,6 +3,8 @@ package com.caucus.apps.corelib.search.impl.fastesp.translation;
 import java.io.IOException;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 
~
 
~
 public class DatabaseMnemonicExpressionHandler implements MnemonicExpressionHandler
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandler.java
index 795ff0b..0eece90 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandler.java
index 845c171..893bad7 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandler.java
@@ -7,6 +7,8 @@ import org.apache.commons.lang.StringUtils;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslator.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslator.java
index fb08cca..b062dc2 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslator.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslator.java
@@ -18,6 +18,8 @@ import org.slf4j.LoggerFactory;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.MnemonicInfo;
~
 import com.caucus.apps.corelib.search.SearchEngine;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
@@ -41,7 +43,6 @@ import com.caucus.apps.corelib.search.translation.SearchTermTranslatorContext;
 public class FieldMnemonicTranslator implements SearchTermTranslator, FieldExpressionAnalyser {
~
 	
~
 	public static final String FIELD_OPERATOR = ":";
~
-	public static final String RELATION_OPERATOR = "#";
~
 
~
 	private static final Logger LOGGER = LoggerFactory.getLogger(FieldMnemonicTranslator.class);
~
 	
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandler.java
index 3dae85a..fabf40c 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandler.java
index 685df21..9e6b010 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 import com.caucus.apps.corelib.search.impl.search.FieldMnemonicException;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/Mnemonic.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/Mnemonic.java
deleted file mode 100644
index ab49dfe..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/Mnemonic.java
+++ /dev/null
@@ -1,96 +0,0 @@
-package com.caucus.apps.corelib.search.impl.fastesp.translation;
~
-
~
-import java.util.Collection;
~
-import java.util.Collections;
~
-import java.util.HashSet;
~
-import java.util.Set;
~
-
~
-import org.apache.commons.lang.StringUtils;
~
-
~
-import com.caucus.apps.corelib.search.strategy.MStarFieldStrategy;
~
-import com.caucus.apps.corelib.search.strategy.MStarFieldStrategyBuilder;
~
-
~
-public class Mnemonic {
~
-	
~
-	
~
-	private final MStarFieldStrategyBuilder strategyBuilder;
~
-	
~
-	private String mnemonic = "";
~
-	private Set<String> relations = new HashSet<String>();
~
-	private String expansion = "";
~
-
~
-	private String qualifier;
~
-	
~
-	public Mnemonic() {
~
-		this.strategyBuilder = null;
~
-	}
~
-	
~
-	public Mnemonic(MStarFieldStrategyBuilder strategyBuilder) {
~
-		this.strategyBuilder = strategyBuilder;
~
-	}
~
-	
~
-	public Mnemonic(MStarFieldStrategyBuilder strategyBuilder, String mnemonic, String relation) {
~
-		this(strategyBuilder);
~
-		this.mnemonic = mnemonic;
~
-		if (StringUtils.isNotBlank(relation)) {
~
-			this.relations.add(relation);
~
-		}
~
-	}
~
-
~
-	public Mnemonic(String mnemonic, String relation) {
~
-		this(null);
~
-		this.mnemonic = mnemonic;
~
-		if (StringUtils.isNotBlank(relation)) {
~
-			this.relations.add(relation);
~
-		}
~
-	}
~
-	
~
-	public String getMnemonic() {
~
-		return mnemonic;
~
-	}
~
-	public void setMnemonic(String mnemonic) {
~
-		this.mnemonic = mnemonic;
~
-	}
~
-	public String getRelation() {
~
-		return relations.size() > 0 ? StringUtils.join(relations, ".") : "";
~
-	}
~
-	
~
-	public Set<String> getRelations() {
~
-		return Collections.unmodifiableSet(relations);
~
-	}
~
-	
~
-	public void addRelation(String relation) {
~
-		if (StringUtils.isNotBlank(relation)) {
~
-			this.relations.add(relation);
~
-		}
~
-	}
~
-
~
-	public void setRelations(Collection<String> relations) {
~
-		this.relations.clear();
~
-		this.relations.addAll(relations);
~
-	}
~
-	
~
-	public String getExpansion() {
~
-		return expansion;
~
-	}
~
-
~
-	
~
-	public void setExpansion(String expansion) {
~
-		this.expansion = expansion;
~
-	}
~
-
~
-	public boolean isExact() {
~
-		boolean res =  relations.contains("exact");
~
-		if(!res && strategyBuilder != null) {
~
-			MStarFieldStrategy strategy = strategyBuilder.buildTermStrategy(qualifier);
~
-			if(strategy != null)
~
-				res = strategy.treatInputAsPhrase();
~
-		}
~
-		return res;
~
-	}
~
-
~
-	public void setQualifier(MnemonicExpressionHandler handler) {
~
-		if(strategyBuilder != null && handler != null)
~
-			qualifier = handler.getMnemonicExpansion(this, null);
~
-	}
~
-}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MnemonicExpressionHandler.java
deleted file mode 100644
index 8e0e230..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MnemonicExpressionHandler.java
+++ /dev/null
@@ -1,10 +0,0 @@
-package com.caucus.apps.corelib.search.impl.fastesp.translation;
~
-
~
-import java.io.IOException;
~
-
~
-public interface MnemonicExpressionHandler {
~
-
~
-	public String handleMnemonicSubExpression(Mnemonic mnemonic, String mnemonicSubKey, String mnemonicExpression) throws IOException;
~
-	public String getMnemonicExpansion(Mnemonic mnemonic, String mnemonicSubKey);
~
-
~
-}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandler.java
index 35b0663..889892f 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandler.java
index 7e66a83..00c7190 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesNoMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesNoMnemonicExpressionHandler.java
index 3642234..cf7f90d 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesNoMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesNoMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 import com.caucus.apps.corelib.search.impl.search.FieldMnemonicException;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesOnlyMnemonicExpressionHandler.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesOnlyMnemonicExpressionHandler.java
index c1a17ce..563ebf7 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesOnlyMnemonicExpressionHandler.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/YesOnlyMnemonicExpressionHandler.java
@@ -5,6 +5,8 @@ import java.io.StreamTokenizer;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.Mnemonic;
~
+import com.caucus.apps.corelib.search.MnemonicExpressionHandler;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 import com.caucus.apps.corelib.search.impl.search.FieldMnemonicException;
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/parser/MStarParserImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/parser/MStarParserImpl.java
index b34f170..125409f 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/parser/MStarParserImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/fastesp/translation/parser/MStarParserImpl.java
@@ -11,6 +11,7 @@ import java.util.StringTokenizer;
 import org.apache.commons.lang.StringUtils;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.TranslatorUtils;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.enums.BundleSuffix;
~
@@ -342,7 +343,7 @@ public class MStarParserImpl implements MStarParser {
 				parts[0] = fieldDef;
~
 				parts[1] = null;
~
 				parts[2] = value;
~
 				int lastRelationIndex = 
-fieldDef.lastIndexOf(FieldMnemonicTranslator.RELATION_OPERATOR);
+fieldDef.lastIndexOf(MnemonicsConfiguration.RELATION_OPERATOR);
 
~
 				if (lastRelationIndex >= 0) {
~
 					String relation = fieldDef.substring(lastRelationIndex + 1);
~
 					if (allowedModifiers.contains(relation)) {
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd.java
index 1c60a52..3e362a0 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd.java
@@ -17,8 +17,6 @@ import com.caucus.apps.corelib.search.Navigator;
 import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
 import com.caucus.apps.corelib.search.QuerySource;
~
 import com.caucus.apps.corelib.search.SearchFilter;
~
-import com.caucus.apps.corelib.search.SearchFilterOperator;
~
-import com.caucus.apps.corelib.search.SearchFilterOperator.SearchFilterOp;
~
 import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
 import com.caucus.apps.corelib.search.operators.QueryOperatorFactory;
~
 
~
@@ -85,9 +83,8 @@ class JSONToQueryDataStd extends JSONToQueryData {
 		if (params != null) {
~
 			for (Iterator<?> keys = params.keys(); keys.hasNext();) {
~
 				String key = (String) keys.next();
~
 				
-//				if (! key.equals(PRE_SOLR_ADDITIONAL_NAVIGATORS_PARM))
+if("instance".equals(key))
  { 
+continue; }
~
 				qd.addSearchParameter(key, params.getString(key));
-//				}
~
 			}
~
 		}
~
 	}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLogging.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLogging.java
index 945fc24..426eb24 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLogging.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLogging.java
@@ -6,7 +6,7 @@ import com.caucus.apps.core.services.usagelogging.Filters;
 import com.caucus.apps.core.services.usagelogging.LinkOut;
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.core.services.usagelogging.RetrieveItem;
~
 import 
-com.caucus.apps.corelib.access.User;
+com.caucus.apps.corelib.access.SimpleUser;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngineType;
~
@@ -46,7 +46,7 @@ public interface UsageLogging {
 
~
 	public String getAppId() ;
~
 	
~
 	public void logBeginSession(String appId, 
-User
+SimpleUser
  user, String breadCrumb, StringWithCode jSessionId) ;
~
 
~
 	public void logEndSession(String langCd) ;
~
 	
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLoggingImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLoggingImpl.java
index 1b8ee74..6fef0e4 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLoggingImpl.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/usage/UsageLoggingImpl.java
@@ -42,6 +42,7 @@ import com.caucus.apps.core.services.usagelogging.Search;
 import com.caucus.apps.core.services.usagelogging.SessionBegin;
~
 import com.caucus.apps.core.services.usagelogging.Translation;
~
 import com.caucus.apps.core.services.usagelogging.UserInfo;
~
+import com.caucus.apps.corelib.access.SimpleUser;
 
~
 import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
@@ -250,7 +251,7 @@ public class UsageLoggingImpl extends BaseOptimizedSessionPersistedObject
 	 * the initial logBeginSession.)
~
 	 */
~
 	@Override
~
 	public void logBeginSession(String appId, 
-User
+SimpleUser
  user, String breadCrumb, StringWithCode jSessionId) {
~
 		this.appId = appId;
~
 		SessionBegin sbegin = makeFilledInSessionBegin(breadCrumb, jSessionId);
~
 		String authBy = user.getAuthenticatedBy();
~
@@ -437,6 +438,8 @@ public class UsageLoggingImpl extends BaseOptimizedSessionPersistedObject
 			String langCd = (loc != null ? languageCodeConversion(loc.getISO3Language()) : "eng");
~
 			sbegin.setLanguageCode(langCd);
~
 		}
~
 		
+else 
~
+			sbegin.setLanguageCode("eng");
 
~
 		
~
 		sbegin.setJSessionId(jsessionId.getString());
~
 		
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java
deleted file mode 100644
index c102dd7..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java
+++ /dev/null
@@ -1,8 +0,0 @@
-package com.caucus.apps.corelib.util;
~
-
~
-import com.caucus.apps.corelib.search.ResultsItem;
~
-
~
-public class DummyFieldValueCacheService implements FieldValueCacheService {
~
-	@Override public String getFieldValue(ResultsItem item, String fieldName) { return item.getField(fieldName); }
~
-	@Override public void   flush        (ResultsItem item) { }
~
-}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLog.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLog.java
deleted file mode 100755
index ff064d7..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLog.java
+++ /dev/null
@@ -1,57 +0,0 @@
-package com.caucus.apps.corelib.util;
~
~
-import org.apache.commons.logging.Log;
~
-import org.junit.Ignore;
~
~
-/**
~
- * Very stupid dummy test double for Log class, just counts # of .info() calls.
~
- * Expand as needed!
~
- * 
~
- * @author Charles Roth
~
- */
~
~
-@Ignore
~
-public class DummyLog implements Log
~
-{
~
-	private int infoCount = 0;
~
-	
~
-	@Override 
~
-	public boolean isInfoEnabled() { return true; }
~
-	
~
-	@Override 
~
-	public void info(Object message) { 
~
-		++infoCount;
~
-	}
~
-	
~
-	@Override 
~
-	public void info(Object message, Throwable t) { 
~
-		++infoCount;
~
-	}
~
-	
~
-	public int getInfoCount() {
~
-		return infoCount;
~
-	}
~
-	
~
~
-	//@formatter:off
~
-	@Override public boolean isDebugEnabled() { return false; }
~
-	@Override public void debug(Object message) { }
~
-	@Override public void debug(Object message, Throwable t) { }
~
~
-	@Override public boolean isErrorEnabled() { return false; }
~
-	@Override public void error(Object message) { }
~
-	@Override public void error(Object message, Throwable t) { }
~
~
-	@Override public boolean isFatalEnabled() { return false; }
~
-	@Override public void fatal(Object message) { }
~
-	@Override public void fatal(Object message, Throwable t) { }
~
~
-	@Override public boolean isWarnEnabled() { return false; }
~
-	@Override public void warn(Object message) { }
~
-	@Override public void warn(Object message, Throwable t) { }
~
~
-	@Override public boolean isTraceEnabled() { return false; }
~
-	@Override public void trace(Object message) { }
~
-	@Override public void trace(Object message, Throwable t) { }
~
-	//@formatter:on
~
-}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLogger.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLogger.java
deleted file mode 100644
index f0e585d..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/DummyLogger.java
+++ /dev/null
@@ -1,353 +0,0 @@
-package com.caucus.apps.corelib.util;
~
-
~
-import java.util.ArrayList;
~
-import java.util.List;
~
-
~
-import org.apache.commons.lang.StringUtils;
~
-import org.slf4j.Logger;
~
-import org.slf4j.Marker;
~
-
~
-public class DummyLogger implements Logger {
~
-	int traceCount = 0;
~
-	int infoCount  = 0;
~
-	int warnCount  = 0;
~
-	List<String> errors = new ArrayList<String>();
~
-	List<String> debugs = new ArrayList<String>();
~
-	
~
-	boolean debugEnabled = false;
~
-	boolean traceEnabled = false;
~
-
~
-	@Override
~
-	public String getName() {
~
-		return null;
~
-	}
~
-
~
-	@Override
~
-	public boolean isTraceEnabled() {
~
-		return traceEnabled;
~
-	}
~
-
~
-	@Override
~
-	public void trace(String msg) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(String format, Object arg) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(String format, Object arg1, Object arg2) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(String format, Object[] argArray) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(String msg, Throwable t) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public boolean isTraceEnabled(Marker marker) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void trace(Marker marker, String msg) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(Marker marker, String format, Object arg) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(Marker marker, String format, Object arg1, Object arg2) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(Marker marker, String format, Object[] argArray) {
~
-		++traceCount;
~
-	}
~
-
~
-	@Override
~
-	public void trace(Marker marker, String msg, Throwable t) {
~
-		++traceCount;
~
-	}
~
-
~
-	public void setDebugEnabled (boolean enabled) {
~
-		debugEnabled = enabled;
~
-	}
~
-	
~
-	@Override
~
-	public boolean isDebugEnabled() {
~
-		return debugEnabled;
~
-	}
~
-
~
-	@Override
~
-	public void debug(String msg) {
~
-		debugs.add(msg);
~
-	}
~
-	
~
-	private String simpleFormatter (String format, Object ... args) {
~
-		String result = format;
~
-		for (Object arg: args) {
~
-			result = StringUtils.replaceOnce(result, "{}",  (arg != null ? arg.toString() : ""));
~
-		}
~
-		
~
-		return result;
~
-	}
~
-
~
-	@Override
~
-	public void debug(String format, Object arg) {
~
-		debugs.add(simpleFormatter(format, arg));
~
-	}
~
-
~
-	@Override
~
-	public void debug(String format, Object arg1, Object arg2) {
~
-		debugs.add(simpleFormatter (format, arg1, arg2));
~
-	}
~
-
~
-	@Override
~
-	public void debug(String format, Object[] argArray) {
~
-		debugs.add(simpleFormatter (format, argArray));
~
-	}
~
-
~
-	@Override
~
-	public void debug(String msg, Throwable t) {
~
-		debugs.add(msg + t.toString());
~
-	}
~
-
~
-	@Override
~
-	public boolean isDebugEnabled(Marker marker) {
~
-		return debugEnabled;
~
-	}
~
-
~
-	@Override
~
-	public void debug(Marker marker, String msg) {
~
-		debugs.add(marker.toString() + msg);
~
-	}
~
-
~
-	@Override
~
-	public void debug(Marker marker, String format, Object arg) {
~
-		debugs.add(marker.toString() + String.format(format, arg));
~
-	}
~
-
~
-	@Override
~
-	public void debug(Marker marker, String format, Object arg1, Object arg2) {
~
-		debugs.add(marker.toString() + String.format(format, arg1, arg2));
~
-	}
~
-
~
-	@Override
~
-	public void debug(Marker marker, String format, Object[] argArray) {
~
-		debugs.add(marker.toString() + String.format(format, argArray));
~
-	}
~
-
~
-	@Override
~
-	public void debug(Marker marker, String msg, Throwable t) {
~
-		debugs.add(marker.toString() + msg + t.toString());
~
-	}
~
-
~
-	@Override
~
-	public boolean isInfoEnabled() {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void info(String msg) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(String format, Object arg) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(String format, Object arg1, Object arg2) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(String format, Object[] argArray) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(String msg, Throwable t) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public boolean isInfoEnabled(Marker marker) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void info(Marker marker, String msg) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(Marker marker, String format, Object arg) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(Marker marker, String format, Object arg1, Object arg2) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(Marker marker, String format, Object[] argArray) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public void info(Marker marker, String msg, Throwable t) {
~
-		++infoCount;
~
-	}
~
-
~
-	@Override
~
-	public boolean isWarnEnabled() {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void warn(String msg) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(String format, Object arg) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(String format, Object[] argArray) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(String format, Object arg1, Object arg2) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(String msg, Throwable t) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public boolean isWarnEnabled(Marker marker) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void warn(Marker marker, String msg) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(Marker marker, String format, Object arg) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(Marker marker, String format, Object arg1, Object arg2) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(Marker marker, String format, Object[] argArray) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public void warn(Marker marker, String msg, Throwable t) {
~
-		++warnCount;
~
-	}
~
-
~
-	@Override
~
-	public boolean isErrorEnabled() {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void error(String msg) {
~
-		errors.add(msg);
~
-	}
~
-
~
-	@Override
~
-	public void error(String format, Object arg) {
~
-		errors.add(simpleFormatter(format, arg));
~
-	}
~
-
~
-	@Override
~
-	public void error(String format, Object arg1, Object arg2) {
~
-		errors.add(simpleFormatter(format, arg1, arg2));
~
-	}
~
-
~
-	@Override
~
-	public void error(String format, Object[] argArray) {
~
-		errors.add(simpleFormatter(format, argArray));
~
-	}
~
-
~
-	@Override
~
-	public void error(String msg, Throwable t) {
~
-		errors.add(msg + t.toString());
~
-	}
~
-
~
-	@Override
~
-	public boolean isErrorEnabled(Marker marker) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public void error(Marker marker, String msg) {
~
-		errors.add(marker.toString() + msg);
~
-	}
~
-
~
-	@Override
~
-	public void error(Marker marker, String format, Object arg) {
~
-		errors.add(marker.toString() + simpleFormatter(format, arg));
~
-	}
~
-
~
-	@Override
~
-	public void error(Marker marker, String format, Object arg1, Object arg2) {
~
-		errors.add(marker.toString() + simpleFormatter(format, arg1, arg2));
~
-	}
~
-
~
-	@Override
~
-	public void error(Marker marker, String format, Object[] argArray) {
~
-		errors.add(marker.toString() + simpleFormatter(format, argArray));
~
-	}
~
-
~
-	@Override
~
-	public void error(Marker marker, String msg, Throwable t) {
~
-		errors.add(marker.toString() + msg + t.toString());
~
-	}
~
-	
~
-	// CR Instrumented test dummy!
~
-	public int getTraceCount() { return traceCount; }
~
-	public int getInfoCount()  { return infoCount; }
~
-	public int getWarnCount()  { return warnCount; }
~
-	public int getErrorCount() { return errors.size(); }
~
-	public int getDebugCount() { return debugs.size(); }
~
-	
~
-	public List<String> getErrors() {
~
-		return errors;
~
-	}
~
-	
~
-	public List<String> getDebugs() {
~
-		return debugs;
~
-	}
~
-
~
-}
~
diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/LogTimingsDummyImpl.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/LogTimingsDummyImpl.java
deleted file mode 100644
index 87c31d4..0000000
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/util/LogTimingsDummyImpl.java
+++ /dev/null
@@ -1,79 +0,0 @@
-package com.caucus.apps.corelib.util;
~
-
~
-import org.slf4j.Logger;
~
-
~
-
~
-public class LogTimingsDummyImpl implements LogTimings {
~
-	
~
-	private Logger timings = new DummyLogger();
~
-	
~
-	@Override
~
-	public boolean catchRedirect(String redirectKey, String details) {
~
-		return true;
~
-	}
~
-
~
-	@Override
~
-	public void endInteraction() {
~
-	}
~
-
~
-	@Override
~
-	public String endOperation(String name) {
~
-		return null;
~
-	}
~
-
~
-	@Override
~
-	public void endOperation(String name, String details) {
~
-	}
~
-
~
-	@Override
~
-	public void endSubsystem(String name) {
~
-	}
~
-
~
-	@Override
~
-	public void endSubsystem(String name, String details) {
~
-	}
~
-
~
-	@Override
~
-	public Logger getLogger() {
~
-		return timings;
~
-	}
~
-
~
-	@Override
~
-	public void prepareForRedirect(String redirectKey) {
~
-	}
~
-
~
-	@Override
~
-	public void startInteraction(String name) {
~
-	}
~
-
~
-	@Override
~
-	public String startOperation(String name) {
~
-		return null;
~
-	}
~
-
~
-	@Override
~
-	public void startOperation(String name, String details) {
~
-	}
~
-
~
-	@Override
~
-	public boolean startSubsystem(String name) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public boolean startSubsystem(String name, String details) {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public String addOpCheckpoint(String name, String details) {
~
-		return null;
~
-	}
~
-
~
-	@Override
~
-	public void endOperation(String name, String details, int minTime) {	}
~
-
~
-	@Override
~
-	public void endSubsystem(String name, String details, int minTime) {	}
~
-
~
-}
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/base/ContentItemTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/base/ContentItemTest.java
index 1dc7360..e8b43bf 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/base/ContentItemTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/base/ContentItemTest.java
@@ -25,9 +25,10 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.DummyMediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
-import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.media.RightsMapImpl;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -36,17 +37,13 @@ import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryService;
 import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryServiceImpl;
~
 import com.caucus.apps.corelib.search.impl.fastesp.FastESPFieldFormatter;
~
 import com.caucus.apps.corelib.util.FieldValueCacheService;
~
-import com.caucus.apps.corelib.util.ISOLanguageService;
~
 import com.caucus.apps.corelib.xpath.VTDFieldService;
~
 import com.caucus.apps.corelib.xpath.VTDFieldServiceImpl;
~
+import com.caucus.test.util.InstrumentedTestCase;
 
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
-
~
-
~
 //TODO CR There are a bunch of what appear to be tests, that were never annotated with @Test
~
 // (and which would fail if run now), at the bottom of this class.
~
 
~
-import com.caucus.test.util.InstrumentedTestCase;
~
-
~
 public class ContentItemTest extends InstrumentedTestCase 
~
 {
~
 	private static final String TEST_TITLE = "Test Title";
~
@@ -377,8 +374,8 @@ public class ContentItemTest extends InstrumentedTestCase
 
~
 	@Test
~
 	public void testGetMediaAttachments01() {
~
 		
-MediaIndex.SubRole
+SubRole
  role = null;
~
 		
-MediaIndex.Role
+Role
  mediaType = null;
~
 
~
 		UniqueItemID itemId = new UniqueItemID("id");
~
 		ResultsItem item = new DummyResultsItem(itemId.getItemId());
~
@@ -423,8 +420,8 @@ public class ContentItemTest extends InstrumentedTestCase
 		final String attachName =
~
 				"Amer_Society_Microbiol/00002/ASM_V_71_I_4_P_1941_00992240/obj/ASM_V_71_I_4_P_1941_Table_T1_00992240.html";
~
 		final String mindexId = "/media/csa/objects-set-c/" + attachName + "/img.jpg";
~
 		final 
-MediaIndex.SubRole
+SubRole
  role = 
-MediaIndex.SubRole.INL;
+SubRole.INL;
 
~
 		final 
-MediaIndex.Role
+Role
  mediaType = 
-MediaIndex.Role.ILI;
+Role.ILI;
 
~
 		final String name = "testName";
~
 		final int order = 1;
~
 
~
@@ -484,8 +481,8 @@ public class ContentItemTest extends InstrumentedTestCase
 		final String attachName =
~
 				"Amer_Society_Microbiol/00002/ASM_V_71_I_4_P_1941_00992240/obj/ASM_V_71_I_4_P_1941_Table_T1_00992240.html";
~
 		final String mindexId = "/media/csa/objects-set-c/" + attachName + "/img.jpg";
~
 		final 
-MediaIndex.SubRole
+SubRole
  role = 
-MediaIndex.SubRole.INL;
+SubRole.INL;
 
~
 		final 
-MediaIndex.Role
+Role
  mediaType = 
-MediaIndex.Role.ILI;
+Role.ILI;
 
~
 		final String name = "testName";
~
 		final int order = 123;
~
 
~
@@ -555,8 +552,8 @@ public class ContentItemTest extends InstrumentedTestCase
 		final String mindexId1 = "/media/csa/objects-set-c/" + attachName1 + "/img.jpg";
~
 		final String attachName2 = "002attach";
~
 		final String mindexId2 = "/media/csa/objects-set-c/" + attachName2 + "/img.jpg";
~
 		final 
-MediaIndex.SubRole
+SubRole
  role = 
-MediaIndex.SubRole.INL;
+SubRole.INL;
 
~
 		final 
-MediaIndex.Role
+Role
  mediaType = 
-MediaIndex.Role.ILI;
+Role.ILI;
 
~
 
~
 		final String mindex =
~
 				"<mindex>" + "<comp type=\"" + mediaType + "\">" + "<mstar_lm_media_id>1001</mstar_lm_media_id>" +
~
@@ -633,8 +630,8 @@ public class ContentItemTest extends InstrumentedTestCase
 		final String attachName =
~
 			"Amer_Society_Microbiol/00002/ASM_V_71_I_4_P_1941_00992240/obj/ASM_V_71_I_4_P_1941_Table_T1_00992240.html";
~
 		final String mindexId = "/media/csa/objects-set-c/" + attachName + "/img.jpg";
~
 		final 
-MediaIndex.SubRole
+SubRole
  role = 
-MediaIndex.SubRole.THUM;
+SubRole.THUM;
 
~
 		final 
-MediaIndex.Role
+Role
  mediaType = 
-MediaIndex.Role.ILI;
+Role.ILI;
 
~
 		final String name = "testName";
~
 		final int order = 1;
~
 	
~
@@ -686,8 +683,8 @@ public class ContentItemTest extends InstrumentedTestCase
 		final String attachName =
~
 				"Amer_Society_Microbiol/00002/ASM_V_71_I_4_P_1941_00992240/obj/ASM_V_71_I_4_P_1941_Table_T1_00992240.html";
~
 		final String mindexId = "/media/csa/objects-set-c/" + attachName + "/img.jpg";
~
 		final 
-MediaIndex.SubRole
+SubRole
  role = 
-MediaIndex.SubRole.INL;
+SubRole.INL;
 
~
 		final 
-MediaIndex.Role
+Role
  mediaType = 
-MediaIndex.Role.ILI;
+Role.ILI;
 
~
 		final String name = "testName";
~
 		final int order = 1;
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/ProductConfigTestUtil.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/ProductConfigTestUtil.java
index 64709dd..15450db 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/ProductConfigTestUtil.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/ProductConfigTestUtil.java
@@ -4,6 +4,7 @@ import static org.easymock.EasyMock.expect;
 
~
 import java.io.File;
~
 
~
+import org.apache.commons.lang.StringUtils;
~
 import org.apache.tapestry5.services.Context;
~
 import org.easymock.EasyMock;
~
 import org.junit.Ignore;
~
@@ -30,6 +31,9 @@ public class ProductConfigTestUtil
 		File temp = new File(configRoot);
~
 		String absoluteRoot = temp.getAbsolutePath();
~
 		String appRoot = absoluteRoot.substring(0, absoluteRoot.length() - configRoot.length());
~
 		
+if (StringUtils.containsIgnoreCase(appRoot, "CoreLibrary")) {
~
+			appRoot = StringUtils.replace(appRoot, "CoreLibrary", "WebApp");
~
+		}
~
 
~
 		Context context   = new DummyContext(appRoot);
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/DummyMnemonicsConfiguration.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/DummyMnemonicsConfiguration.java
index 589a6eb..924f8b9 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/DummyMnemonicsConfiguration.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/DummyMnemonicsConfiguration.java
@@ -6,7 +6,7 @@ import java.util.Set;
 
~
 import org.junit.Ignore;
~
 
~
 import 
-com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
+com.caucus.apps.corelib.search.Mnemonic;
~
 
~
 @Ignore
~
 public class DummyMnemonicsConfiguration implements MnemonicsConfiguration {
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationMockFactory.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationMockFactory.java
index 8c62b6b..3f2d663 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationMockFactory.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/config/mstar/MnemonicsConfigurationMockFactory.java
@@ -14,8 +14,8 @@ import org.easymock.IMocksControl;
 import org.junit.Ignore;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilderImpl;
~
 
~
 /**
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParentTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParentTest.java
index 55ced22..7e885c0 100755
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParentTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/documents/indexfields/model/data/ExperianParentTest.java
@@ -2,22 +2,9 @@ package com.caucus.apps.corelib.documents.indexfields.model.data;
 
~
 import static org.junit.Assert.assertEquals;
~
 
~
-import org.easymock.EasyMock;
~
-import org.easymock.IMocksControl;
~
-import static org.easymock.EasyMock.expect;
~
~
 import org.junit.Before;
~
 import org.junit.Test;
~
 
~
-import com.caucus.apps.gossamer.relatedids.RelatedidsGoidIdtypeIdResource;
~
-import com.caucus.gossamer.exceptions.ClientTimeoutException;
~
-import com.caucus.gossamer.exceptions.CommunicationsException;
~
-import com.caucus.gossamer.exceptions.EncodingDecodingException;
~
-import com.caucus.gossamer.exceptions.MethodFault;
~
~
-import com.caucus.apps.core.services.relatedids.RelatedId;
~
-import com.caucus.apps.core.services.relatedids.RelatedIds;
~
~
 
~
 public class ExperianParentTest
~
 {
~
@@ -25,12 +12,10 @@ public class ExperianParentTest
 	private static final String CAUCUS = "Caucus";
~
 	
~
 	private ExperianParent experianParent;
~
-	private IMocksControl ctrl;
~
 	
~
 	@Before
~
 	public void setUp() {
~
 		experianParent = new ExperianParent (CAUCUS, EXPERIAN_ID);
~
-		ctrl = EasyMock.createControl();
~
 	}
~
 	
~
 	@Test
~
@@ -43,72 +28,5 @@ public class ExperianParentTest
 	public void shouldMakeStringForm() {
~
 		assertEquals (CAUCUS + ":" + EXPERIAN_ID, experianParent.toString());
~
 	}
~
-	
~
-	@Test
~
-	public void shouldGetGoidFromExperianId() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
-		RelatedidsGoidIdtypeIdResource mockRelatedIdResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
-		
~
-		RelatedIds relatedIds = makeRelatedIdsFrom("myGoid");
~
-		expect(mockRelatedIdResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
-		
~
-		ctrl.replay();
~
-		assertEquals ("myGoid", experianParent.getGoid(mockRelatedIdResource));
~
-		ctrl.verify();
~
-	}
~
-	
~
-	@Test
~
-	public void shouldGetNoGoid_whenRelatedIdServiceHasNoInfo() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
-		RelatedidsGoidIdtypeIdResource mockRelatedIdResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
-		
~
-		RelatedIds relatedIds = makeRelatedIdsFrom("");
~
-		expect(mockRelatedIdResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
-		
~
-		ctrl.replay();
~
-		assertEquals ("", experianParent.getGoid(mockRelatedIdResource));
~
-		ctrl.verify();
~
-	}
~
-	
~
-	@Test
~
-	public void shouldGetNoGoid_whenRelatedIdServiceReturnsEmptyArray() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
-		RelatedidsGoidIdtypeIdResource mockRelatedIdResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
-		
~
-		RelatedIds relatedIds = new RelatedIds();
~
-		relatedIds.setRelatedId(new RelatedId [0]);
~
-		expect(mockRelatedIdResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
-		
~
-		ctrl.replay();
~
-		assertEquals ("", experianParent.getGoid(mockRelatedIdResource));
~
-		ctrl.verify();
~
-	}
~
-		
~
-	@Test
~
-	public void shouldGetNoGoid_whenRelatedIdServiceReturnsNull() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
-		RelatedidsGoidIdtypeIdResource mockRelatedIdResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
-		expect(mockRelatedIdResource.get("MstarXID", EXPERIAN_ID)).andReturn(null);
~
-			
~
-		ctrl.replay();
~
-		assertEquals ("", experianParent.getGoid(mockRelatedIdResource));
~
-		ctrl.verify();
~
-	}
~
-	
~
-	@Test
~
-	public void shouldGetNoGoid_whenRelatedIdServiceThrowsException() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
-		RelatedidsGoidIdtypeIdResource mockRelatedIdResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
-		expect(mockRelatedIdResource.get("MstarXID", EXPERIAN_ID)).andThrow (new MethodFault(0));
~
-			
~
-		ctrl.replay();
~
-		assertEquals ("", experianParent.getGoid(mockRelatedIdResource));
~
-		ctrl.verify();
~
-	}
~
-	
~
-	public static RelatedIds makeRelatedIdsFrom (String goid) {
~
-		RelatedId relatedId = new RelatedId();
~
-		relatedId.setContent(goid);
~
-		RelatedId [] goids = new RelatedId [] { relatedId };
~
-		
~
-		RelatedIds relatedIds = new RelatedIds();
~
-		relatedIds.setRelatedId(goids);
~
-		return relatedIds;
~
-	}
~
 
~
 }
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaAttachmentOrderComparatorTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaAttachmentOrderComparatorTest.java
index 4fd15ef..38fdde7 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaAttachmentOrderComparatorTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaAttachmentOrderComparatorTest.java
@@ -79,8 +79,8 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		final String name = "testName";
~
 
~
 		final String mindex =
~
 				"<mindex><media><id>" + mindexId + "</id><inlineNum>1001</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  +
~
 						"</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  + "</subrole><mimetype>image/jpeg</mimetype><name>" + name +
~
 						"</name><order>" + ORDER + "</order></media></mindex>";
~
 		final String metadata =
~
 				"<root><global><DerivedData><ObjectChildren><Child>"
~
@@ -98,7 +98,7 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(citation, "contentItemWrapperFactory", contentItemWrapperFactory);
~
 		
~
 		ctrl.replay();
~
 		List<MediaAttachment> mediaAttachments = 
-citation.getMediaIndex().getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.INL);
+citation.getMediaIndex().getMediaAttachments(Role.ILI, SubRole.INL);
 
~
 		MediaAttachment o2 = mediaAttachments.get(0);
~
 		assertEquals(-1, mediaAttachmentOrderComparator.compare(null, o2));
~
 		ctrl.verify();
~
@@ -112,8 +112,8 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		final String name = "testName";
~
 
~
 		final String mindex =
~
 				"<mindex><media><id>" + mindexId + "</id><inlineNum>1001</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  +
~
 						"</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  + "</subrole><mimetype>image/jpeg</mimetype><name>" + name +
~
 						"</name><order>" + ORDER + "</order></media></mindex>";
~
 		final String metadata =
~
 				"<root><global><DerivedData><ObjectChildren><Child>"
~
@@ -133,7 +133,7 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(citation, "contentItemWrapperFactory", contentItemWrapperFactory);
~
 		
~
 		ctrl.replay();
~
 		List<MediaAttachment> mediaAttachments = 
-citation.getMediaIndex().getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.INL);
+citation.getMediaIndex().getMediaAttachments(Role.ILI, SubRole.INL);
 
~
 		MediaAttachment o1 = mediaAttachments.get(0);
~
 		assertEquals(1, mediaAttachmentOrderComparator.compare(o1, null));
~
 		ctrl.verify();
~
@@ -147,9 +147,9 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		final String mindexId2 = "/media/csa/objects-set-c/" + attachName2 + "/img.jpg";
~
 
~
 		final String mindex =
~
 				"<mindex><media><id>" + mindexId1 + "</id><inlineNum>1001</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  +
~
 						"</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  + "</subrole><mimetype>image/jpeg</mimetype></media><media><id>" +
~
 						mindexId2 + "</id><inlineNum>2002</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  + "</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  +
~
 						"</subrole><mimetype>image/jpeg</mimetype></media></mindex>";
~
 		final String metadata =
~
 				"<root><global><DerivedData><ObjectChildren><Child>" +
~
@@ -180,7 +180,7 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(citation, "contentItemWrapperFactory", contentItemWrapperFactory);
~
 		
~
 		ctrl.replay();
~
 		List<MediaAttachment> mediaAttachments = 
-citation.getMediaIndex().getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.INL);
+citation.getMediaIndex().getMediaAttachments(Role.ILI, SubRole.INL);
 
~
 		MediaAttachment o1 = mediaAttachments.get(0);
~
 		MediaAttachment o2 = mediaAttachments.get(1);
~
 
~
@@ -198,9 +198,9 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		final String mindexId2 = "/media/csa/objects-set-c/" + attachName2 + "/img.jpg";
~
 
~
 		final String mindex =
~
 				"<mindex><media><id>" + mindexId1 + "</id><inlineNum>1001</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  +
~
 						"</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  + "</subrole><mimetype>image/jpeg</mimetype></media><media><id>" +
~
 						mindexId2 + "</id><inlineNum>2002</inlineNum><role>" + 
-MediaIndex.Role.ILI
+Role.ILI
  + "</role><subrole>" + 
-MediaIndex.SubRole.INL
+SubRole.INL
  +
~
 						"</subrole><mimetype>image/jpeg</mimetype></media></mindex>";
~
 		final String metadata =
~
 				"<root><global><DerivedData><ObjectChildren><Child>" +
~
@@ -230,7 +230,7 @@ public class MediaAttachmentOrderComparatorTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(citation, "contentItemWrapperFactory", contentItemWrapperFactory);
~
 		
~
 		ctrl.replay();
~
 		List<MediaAttachment> mediaAttachments = 
-citation.getMediaIndex().getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.INL);
+citation.getMediaIndex().getMediaAttachments(Role.ILI, SubRole.INL);
 
~
 		MediaAttachment o1 = mediaAttachments.get(0);
~
 		MediaAttachment o2 = mediaAttachments.get(1);
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaIndexTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaIndexTest.java
index 0076c11..2c6d953 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaIndexTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/media/MediaIndexTest.java
@@ -20,8 +20,8 @@ import org.junit.Before;
 import org.junit.Test;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.xpath.VTDFieldService;
~
 import com.caucus.apps.corelib.xpath.VTDFieldServiceImpl;
~
@@ -178,11 +178,11 @@ public class MediaIndexTest  extends InstrumentedTestCase {
 		ctrl.replay();
~
 		MediaIndex mediaIndex = new MediaIndex(item, config, testMindex3, rightsMap, "", null, null, vtdFieldService);
~
 		Media media =
~
 				
-mediaIndex.getMediaByInlineNumber(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+mediaIndex.getMediaByInlineNumber(Role.IXI, SubRole.THUM,
  "OB-301-0004274950");
~
 		assertNotNull(media);
~
 		assertEquals("Table", media.getOrderCategory());
~
 		assertEquals(11, media.getOrder());
~
 		
-assertNull(mediaIndex.getMediaByInlineNumber(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+assertNull(mediaIndex.getMediaByInlineNumber(Role.IXI, SubRole.THUM,
  "testinlinenum"));
~
 		ctrl.verify();
~
 	}
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java
new file mode 100755
index 0000000..c890248
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/DummyFieldFormatter.java
@@ -0,0 +1,27 @@
+package com.caucus.apps.corelib.search;
~
~
+import java.util.Set;
~
~
+import org.junit.Ignore;
~
~
+/*
~
+ * Dummy version of FieldFormatter, that does nothing -- mostly passes its arguments
~
+ * through unchanged. containsHit() does check for {@code [[mkup]].
~
+ * 
~
+ * Charles Roth, May 2012
~
+ */
~
~
+@Ignore
~
+public class DummyFieldFormatter implements FieldFormatter {
~
+	
~
+	@Override public String formatHitHighlighting(String content, boolean removeHighlights) { return content; }
~
+	@Override public String removeHitHighlighting(String content)                           { return content; }
~
+	@Override public String removeHitHighlightingHTML(String content)                       { return content; }
~
+	@Override public String forceHighlightAll(String content)                               { return content; }
~
+	@Override public String removeCDataMarkup(String content)                               { return content; }
~
+	@Override public Set<String> getMarkupValues(String content)                            { return null; }
~
+	@Override public String markupContent(String content, Set<String> valuesToHighlight)    { return null; }
~
+	@Override public boolean containsHit(String content)                                    { return content.contains(SearchEngine.HIT_HIGHLIGHT_TEXT); } 
~
~
+}
~
 		
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineImplTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineImplTest.java
index 77e85c6..d51c4da 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineImplTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineImplTest.java
@@ -215,11 +215,10 @@ public class SearchEngineImplTest {
 		assertEquals(SearchEngineType.CONTENT_SERVICE,searchEngineType);
~
 	}
~
 
~
-	@Test(expected=UnsupportedOperationException.class)
~
 	public void testGetFieldNameDuplicateID() {
~
 		String fieldNameDuplicateID = null;
~
 		fieldNameDuplicateID = searchEngineImpl.getFieldNameDuplicateID();
~
 		
-assertNull(fieldNameDuplicateID);
+assertNotNull(fieldNameDuplicateID);
~
 	}
~
 	
~
 }
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineSwitchTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineSwitchTest.java
index 46e7220..e452033 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineSwitchTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/SearchEngineSwitchTest.java
@@ -2,7 +2,6 @@ package com.caucus.apps.corelib.search.impl;
 
~
 import static org.easymock.EasyMock.anyObject;
~
 import static org.easymock.EasyMock.expect;
~
-import static org.easymock.EasyMock.expectLastCall;
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertNull;
~
 import static org.junit.Assert.fail;
~
@@ -143,7 +142,6 @@ public class SearchEngineSwitchTest {
 
~
 		expect(fastESPQueryBuilder.buildBaseFastQuery(anyObject(QueryData.class))).andReturn("sessionId");
~
 	    ((SearchEngineImpl)searchEngine).setEspQueryString("sessionId");
~
-	    expectLastCall();
~
 	    
~
 	    QueryDataStd queryData = new QueryDataStd();
~
 	    
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/DefaultFastESPQueryTranslatorTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/DefaultFastESPQueryTranslatorTest.java
index 5a313bc..ca07d9a 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/DefaultFastESPQueryTranslatorTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/DefaultFastESPQueryTranslatorTest.java
@@ -30,6 +30,7 @@ import com.caucus.apps.corelib.config.MinimalProductConfig;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.search.FDBAnalysis.FdbUsage;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
 import com.caucus.apps.corelib.search.SearchEngine;
~
@@ -39,7 +40,6 @@ import com.caucus.apps.corelib.search.impl.QueryDataStd;
 import com.caucus.apps.corelib.search.impl.QueryDataTree;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.MStarToFqlTranslator;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.OperatorTranslator;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.ftany.FTAnyVisitor;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.DatabaseId;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastESPResultsItemTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastESPResultsItemTest.java
index e55b97b..cc6ce8d 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastESPResultsItemTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastESPResultsItemTest.java
@@ -60,7 +60,7 @@ import com.caucus.apps.corelib.search.SearchEngine;
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.search.operators.NotValueOperator;
~
 import com.caucus.apps.corelib.util.LogTimings;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 import com.caucus.test.util.config.SimpleMapProductConfig;
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
@@ -354,7 +354,7 @@ public class FastESPResultsItemTest extends InstrumentedTestCase
 		FastESPSearchEngine fastSE = ctrl.createMock(FastESPSearchEngine.class);
~
 		expect(searchEngine.getImplementation()).andReturn(fastSE);
~
 		expect(fastSE.getSearchView(instanceView)).andReturn(searchView);
~
 		LogTimings logTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
 
~
 		expect(fastSE.getLogTimings()).andReturn(logTimings);
~
 //		Logger log = createNiceMock(Logger.class);
~
 //		expect(logTimings.getLogger()).andReturn(log).anyTimes();
~
@@ -421,7 +421,7 @@ public class FastESPResultsItemTest extends InstrumentedTestCase
 		FastESPSearchEngine fastSE = ctrl.createMock(FastESPSearchEngine.class);
~
 		expect(se.getImplementation()).andReturn(fastSE);
~
 		expect(fastSE.getSearchView(instanceView)).andReturn(searchView);
~
 		LogTimings logTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
 
~
 		expect(fastSE.getLogTimings()).andReturn(logTimings);
~
 //		Logger log = new DummyLogger();
~
 //		expect(logTimings.getLogger()).andReturn(log).anyTimes();
~
@@ -487,7 +487,7 @@ public class FastESPResultsItemTest extends InstrumentedTestCase
 		FastESPSearchEngine fastSE = ctrl.createMock(FastESPSearchEngine.class);
~
 		expect(fastSE.getSearchView(instanceView)).andReturn(searchView);
~
 		expect(se.getImplementation()).andReturn(fastSE);
~
 		LogTimings logTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
 
~
 		expect(fastSE.getLogTimings()).andReturn(logTimings);
~
 //		Logger log = createNiceMock(Logger.class);
~
 //		expect(logTimings.getLogger()).andReturn(log).anyTimes();
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverterTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverterTest.java
new file mode 100644
index 0000000..0eb909f
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/FastFigTableSearchConverterTest.java
@@ -0,0 +1,75 @@
+package com.caucus.apps.corelib.search.impl.fastesp;
~
+
~
+import org.junit.Assert;
~
+import org.junit.Before;
~
+import org.junit.Test;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.config.mstar.MStarConfigurationAcademicImpl;
~
+import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.QueryData;
~
+import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
+import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
+import com.caucus.test.util.InstrumentedTestCase;
~
+
~
+public class FastFigTableSearchConverterTest  extends InstrumentedTestCase {
~
+
~
+	private ProductConfig productConfig;
~
+	private MnemonicsConfiguration mnemonicsConfig;
~
+
~
+	@Before
~
+	public void setUp() {
~
+
~
+		productConfig = com.caucus.apps.corelib.config.ProductConfigTestUtil.getProductConfigWithMocks();
~
+		mnemonicsConfig = new MStarConfigurationAcademicImpl(productConfig);
~
+	}
~
+
~
+	@Test
~
+	public void testNormalTerm() {
~
+		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
+		QueryData query=new QueryDataStd();
~
+		SearchTerm in=new SearchTerm("citationBody","test");
~
+		SearchTerm out=f.getFigTableTerm(in, query);
~
+		Assert.assertEquals(in,out);
~
+	}
~
+	
~
+	@Test
~
+	public void testGetFigTableTerm_withParenthesis() {
~
+		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
+		QueryData query=new QueryDataStd();
~
+		SearchTerm in=new SearchTerm("citationBody","milk w/2 (food or corn)");
~
+		SearchTerm out=f.getFigTableTerm(in, query);
~
+		Assert.assertEquals(in,out);
~
+	}
~
+	
~
+	@Test
~
+	public void testGetFigTableTerm_ReplaceMnemonicsWithParenthesis() {
~
+		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
+		QueryData query=new QueryDataStd();
~
+		SearchTerm in=new SearchTerm("citationBody","(au(frank or john) or ti(milk)) w/2 (food or corn)");
~
+		SearchTerm out=f.getFigTableTerm(in, query);
~
+		SearchTerm expected=new SearchTerm("citationBody","(any(frank or john) or any(milk)) w/2 (food or corn)");
~
+		Assert.assertEquals(expected,out);
~
+	}
~
+	
~
+	@Test
~
+	public void testGetFigTableTerm_ReplaceMnemonicsWithParenthesis_AndTranslatedMnemonic() {
~
+		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
+		QueryData query=new QueryDataStd();
~
+		SearchTerm in=new SearchTerm("citationBody","(loc(frank or john) or ti(milk)) w/2 (food or corn)");
~
+		SearchTerm out=f.getFigTableTerm(in, query);
~
+		SearchTerm expected=new SearchTerm("citationBody","(su(frank or john) or any(milk)) w/2 (food or corn)");
~
+		Assert.assertEquals(expected,out);
~
+	}
~
+	
~
+	@Test
~
+	public void testGetFigTableTerm_ReplaceMnemonicsWithParenthesis_AndTranslatedMnemonicWithRelation() {
~
+		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
+		QueryData query=new QueryDataStd();
~
+		SearchTerm in=new SearchTerm("citationBody","(loc.exact(frank or john) or ti(milk)) w/2 (food or corn)");
~
+		SearchTerm out=f.getFigTableTerm(in, query);
~
+		SearchTerm expected=new SearchTerm("citationBody","(su.exact(frank or john) or any(milk)) w/2 (food or corn)");
~
+		Assert.assertEquals(expected,out);
~
+	}
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandlerTest.java
index ef83c98..9ca1da4 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/AuthorMnemonicExpressionHandlerTest.java
@@ -21,6 +21,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationDefaultImpl;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandlerTest.java
index 42ab2ff..a40d561 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DatabaseCodeExpressionHandlerTest.java
@@ -16,6 +16,7 @@ import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
 
~
 
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandlerTest.java
index ca94c20..f7ddf91 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/DefaultMnemonicExpressionHandlerTest.java
@@ -21,6 +21,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationDefaultImpl;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandlerTest.java
index 82f3183..addab05 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/ExactQuotesMnemonicExpressionHandlerTest.java
@@ -9,6 +9,7 @@ import org.junit.Assert;
 import org.junit.Test;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FastSearchTermTranslatorTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FastSearchTermTranslatorTest.java
index fa8d49e..db0c251 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FastSearchTermTranslatorTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FastSearchTermTranslatorTest.java
@@ -25,6 +25,7 @@ import org.junit.Test;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLNode;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLProximityNode;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.MStarParser;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslatorTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslatorTest.java
index 8039570..a8370f5 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslatorTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/FieldMnemonicTranslatorTest.java
@@ -376,7 +376,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExact01() {
~
 		String testExpr = "AU.exact(fred)";
~
 		String expected = "(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:fred)";
~
 
~
 	
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -403,7 +403,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExact02() {
~
 		String testExpr = "exact(fred)";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -431,8 +431,8 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	public void testExact03() {
~
 		String testExpr = "AU.exact(smith or jones)";
~
 		String expected =
~
 				"(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:smith or author" +
~
 						
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:jones)";
~
 
~
 
~
 		Map<String, String> fieldMap = new HashMap<String, String>();
~
@@ -462,8 +462,8 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	public void testExact04() {
~
 		String testExpr = "exact(smith or jones)";
~
 		String expected =
~
 				"(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:smith or t1" +
~
 						
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:jones)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -489,7 +489,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExact05() {
~
 		String testExpr = "exact(\"fred flintstone\")";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:\"fred flintstone\")";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -516,7 +516,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExact06() {
~
 		String testExpr = "exact(fred flintstone)";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "exact:\"fred flintstone\")";
~
 
~
 
~
 		Map<String, String> fieldMap = new HashMap<String, String>();
~
@@ -549,7 +549,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExplode01() {
~
 		String testExpr = "MESH.explode(fred)";
~
 		String expected = "(meshField" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -610,7 +610,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExplode03() {
~
 		String testExpr = "explode(fred)";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode:fred)";
~
 
~
 
~
 		
~
@@ -639,8 +639,8 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	public void testExplode04() {
~
 		String testExpr = "AU.explode(smith or jones)";
~
 		String expected =
~
 				"(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode:smith or author" +
~
 						
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode:jones)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -666,7 +666,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExplode05() {
~
 		String testExpr = "MESH.explode(fred)";
~
 		String expected = "(meshField" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl,true);
~
@@ -722,7 +722,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExactExplode01() {
~
 		String testExpr = "AU.exact.explode(fred)";
~
 		String expected = "(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -749,7 +749,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExactExplode02() {
~
 		String testExpr = "AU.explode.exact(fred)";
~
 		String expected = "(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -776,7 +776,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExactExplode03() {
~
 		String testExpr = "exact.explode(fred)";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:fred)";
~
 
~
 
~
 		ProductConfig config=MnemonicsConfigurationMockFactory.createMatchingProductConfig(ctrl, true);
~
@@ -803,7 +803,7 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	@Test
~
 	public void testExactExplode04() {
~
 		String testExpr = "explode.exact(fred)";
~
 		String expected = "(t1" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:fred)";
~
 
~
 
~
 
~
@@ -831,8 +831,8 @@ public class FieldMnemonicTranslatorTest extends InstrumentedTestCase
 	public void testExactExplode05() {
~
 		String testExpr = "AU.exact.explode(smith or jones)";
~
 		String expected =
~
 				"(author" + 
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:smith or author" +
~
 						
-FieldMnemonicTranslator.RELATION_OPERATOR
+MnemonicsConfiguration.RELATION_OPERATOR
  + "explode.exact:jones)";
~
 
~
 
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandlerTest.java
index 4a59fca..0ee4e00 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/LnkMnemonicExpressionHandlerTest.java
@@ -22,6 +22,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationDefaultImpl;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandlerTest.java
index 95fda16..cfc99b6 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/MeshMnemonicExpressionHandlerTest.java
@@ -13,6 +13,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationDefaultImpl;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandlerTest.java
index 11eeec0..776658c 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/RangeMnemonicExpressionHandlerTest.java
@@ -17,6 +17,7 @@ import org.junit.Test;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandlerTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandlerTest.java
index ddb1337..4638004 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandlerTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/fastesp/translation/SignedRangeMnemonicExpressionHandlerTest.java
@@ -17,6 +17,7 @@ import org.junit.Test;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationMockFactory;
~
+import com.caucus.apps.corelib.search.Mnemonic;
 
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
 import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/gis/GISSearchImplTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/gis/GISSearchImplTest.java
index 9f342cc..53753ec 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/gis/GISSearchImplTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/gis/GISSearchImplTest.java
@@ -47,7 +47,7 @@ import com.caucus.apps.corelib.search.impl.DummyResultsList;
 import com.caucus.apps.corelib.search.impl.gis.GISSearchImpl.GISSearchTimeoutException;
~
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import com.caucus.apps.corelib.util.LogTimings;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 import com.caucus.test.util.config.SimpleMapProductConfig;
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
@@ -69,7 +69,7 @@ public class GISSearchImplTest extends InstrumentedTestCase implements GISSearch
 	
~
 	private Account account;
~
 	private User user;
~
 	private 
-LogTimingsDummyImpl
+DummyLogTimings
  dummyLogTimings;
~
 	private DummyLogger dummyLogger;
~
 	
~
 	private static final ProductConfig	productConfig = new SimpleMapProductConfig(
~
@@ -97,7 +97,7 @@ public class GISSearchImplTest extends InstrumentedTestCase implements GISSearch
 		gisSearch = new GISSearch_withDummiedHttpClient();
~
 		account = new Account();
~
 		user = new User();
~
 		dummyLogTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
~
 		dummyLogger = new DummyLogger();
~
 	}
~
 	
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStdTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStdTest.java
index 6a08123..5a7b94f 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStdTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStdTest.java
@@ -1,11 +1,10 @@
 package com.caucus.apps.corelib.search.impl.persist.deserialization.json.converter;
~
 
~
+import static org.junit.Assert.assertTrue;
~
~
 import org.junit.Before;
~
-import org.junit.Assert;
~
 import org.junit.Ignore;
~
 
~
-import static org.junit.Assert.assertTrue;
~
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.SearchFilter;
~
 import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd_1_2Test.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd_1_2Test.java
index 5c5d65e..ecc0b07 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd_1_2Test.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/search/impl/persist/deserialization/json/converter/JSONToQueryDataStd_1_2Test.java
@@ -2,6 +2,7 @@ package com.caucus.apps.corelib.search.impl.persist.deserialization.json.conve
 
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertNotNull;
~
+import static org.junit.Assert.assertNull;
~
 import static org.junit.Assert.assertTrue;
~
 
~
 import java.text.ParseException;
~
@@ -154,10 +155,14 @@ public class JSONToQueryDataStd_1_2Test {
 		qd.addSearchParameter("instance", "preprod.academic");
~
 		qd.addSearchParameter("ftblock", "740842 1 660848 670831 194001 670829 194000 194121 660843 660840 121");
~
 		qd.addSearchParameter("removeDuplicates", "true");
~
 		
+qd.addSearchParameter("instance", "prod.caucus.testything.com");
~
 		JSONObject jsonQuery = new JSONQueryDataStdSerializer().toJSON(qd, false, SerializationType.SERIALIZER_STD_1_2);
~
 		
~
 		QueryData queryDataDeserialized = JSONToQueryDataStd.getQueryData(jsonQuery);
~
 		SearchFilter retrievedSearchFilter = queryDataDeserialized.getSearchFilter();
~
 		
+assertNull(queryDataDeserialized.getSearchParameter("instance"));
~
+		assertNotNull(queryDataDeserialized.getSearchParameter("bundles"));
~
+		assertNotNull(queryDataDeserialized.getSearchParameter("removeDuplicates"));
~
 		assertNotNull(retrievedSearchFilter);
~
 		assertEquals(searchFilter, retrievedSearchFilter);
~
 	}
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingDummy.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingDummy.java
index 534a421..f9208e0 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingDummy.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingDummy.java
@@ -13,7 +13,7 @@ import com.caucus.apps.core.services.usagelogging.Options;
 import com.caucus.apps.core.services.usagelogging.PublicationDate;
~
 import com.caucus.apps.core.services.usagelogging.Retrieve;
~
 import com.caucus.apps.core.services.usagelogging.RetrieveItem;
~
 import 
-com.caucus.apps.corelib.access.User;
+com.caucus.apps.corelib.access.SimpleUser;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngineType;
~
@@ -95,7 +95,7 @@ public class UsageLoggingDummy implements UsageLogging {
 	@Override public void setUsageGroupId(String usageGroupId) { }
~
 
~
 	@Override public void setUserAgent(String userAgent) { }
~
 	@Override public void logBeginSession(String appId, 
-User
+SimpleUser
  user, String breadCrumb, StringWithCode jSessionId) { }
~
 	
~
 	
~
 	@Override public void logPauseSession() { }
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingImplTest.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingImplTest.java
index d0fae01..b443a4f 100644
--- a/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingImplTest.java
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/usage/UsageLoggingImplTest.java
@@ -205,6 +205,7 @@ public class UsageLoggingImplTest  extends InstrumentedTestCase {
 		
~
 		SessionBegin sessionBegin = dummyBegin.getSessionBegin();
~
 		assertEquals (jSessionId.getString(), sessionBegin.getJSessionId());
~
 		
+assertEquals ("eng", sessionBegin.getLanguageCode());
 
~
 		
~
 		assertEquals (sessId, sessIdAfterLogBegin);
~
 		
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java
new file mode 100755
index 0000000..2c33279
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyFieldValueCacheService.java
@@ -0,0 +1,11 @@
+package com.caucus.apps.corelib.util;
~
+
~
+import org.junit.Ignore;
~
+
~
+import com.caucus.apps.corelib.search.ResultsItem;
~
+
~
+@Ignore
~
+public class DummyFieldValueCacheService implements FieldValueCacheService {
~
+	@Override public String getFieldValue(ResultsItem item, String fieldName) { return item.getField(fieldName); }
~
+	@Override public void   flush        (ResultsItem item) { }
~
+}
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLog.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLog.java
new file mode 100755
index 0000000..ff064d7
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLog.java
@@ -0,0 +1,57 @@
+package com.caucus.apps.corelib.util;
~
~
+import org.apache.commons.logging.Log;
~
+import org.junit.Ignore;
~
~
+/**
~
+ * Very stupid dummy test double for Log class, just counts # of .info() calls.
~
+ * Expand as needed!
~
+ * 
~
+ * @author Charles Roth
~
+ */
~
~
+@Ignore
~
+public class DummyLog implements Log
~
+{
~
+	private int infoCount = 0;
~
+	
~
+	@Override 
~
+	public boolean isInfoEnabled() { return true; }
~
+	
~
+	@Override 
~
+	public void info(Object message) { 
~
+		++infoCount;
~
+	}
~
+	
~
+	@Override 
~
+	public void info(Object message, Throwable t) { 
~
+		++infoCount;
~
+	}
~
+	
~
+	public int getInfoCount() {
~
+		return infoCount;
~
+	}
~
+	
~
~
+	//@formatter:off
~
+	@Override public boolean isDebugEnabled() { return false; }
~
+	@Override public void debug(Object message) { }
~
+	@Override public void debug(Object message, Throwable t) { }
~
~
+	@Override public boolean isErrorEnabled() { return false; }
~
+	@Override public void error(Object message) { }
~
+	@Override public void error(Object message, Throwable t) { }
~
~
+	@Override public boolean isFatalEnabled() { return false; }
~
+	@Override public void fatal(Object message) { }
~
+	@Override public void fatal(Object message, Throwable t) { }
~
~
+	@Override public boolean isWarnEnabled() { return false; }
~
+	@Override public void warn(Object message) { }
~
+	@Override public void warn(Object message, Throwable t) { }
~
~
+	@Override public boolean isTraceEnabled() { return false; }
~
+	@Override public void trace(Object message) { }
~
+	@Override public void trace(Object message, Throwable t) { }
~
+	//@formatter:on
~
+}
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogTimings.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogTimings.java
new file mode 100755
index 0000000..3ab6e48
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogTimings.java
@@ -0,0 +1,81 @@
+package com.caucus.apps.corelib.util;
~
+
~
+import org.junit.Ignore;
~
+import org.slf4j.Logger;
~
+
~
+
~
+@Ignore
~
+public class DummyLogTimings implements LogTimings {
~
+	
~
+	private Logger timings = new DummyLogger();
~
+	
~
+	@Override
~
+	public boolean catchRedirect(String redirectKey, String details) {
~
+		return true;
~
+	}
~
+
~
+	@Override
~
+	public void endInteraction() {
~
+	}
~
+
~
+	@Override
~
+	public String endOperation(String name) {
~
+		return null;
~
+	}
~
+
~
+	@Override
~
+	public void endOperation(String name, String details) {
~
+	}
~
+
~
+	@Override
~
+	public void endSubsystem(String name) {
~
+	}
~
+
~
+	@Override
~
+	public void endSubsystem(String name, String details) {
~
+	}
~
+
~
+	@Override
~
+	public Logger getLogger() {
~
+		return timings;
~
+	}
~
+
~
+	@Override
~
+	public void prepareForRedirect(String redirectKey) {
~
+	}
~
+
~
+	@Override
~
+	public void startInteraction(String name) {
~
+	}
~
+
~
+	@Override
~
+	public String startOperation(String name) {
~
+		return null;
~
+	}
~
+
~
+	@Override
~
+	public void startOperation(String name, String details) {
~
+	}
~
+
~
+	@Override
~
+	public boolean startSubsystem(String name) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public boolean startSubsystem(String name, String details) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public String addOpCheckpoint(String name, String details) {
~
+		return null;
~
+	}
~
+
~
+	@Override
~
+	public void endOperation(String name, String details, int minTime) {	}
~
+
~
+	@Override
~
+	public void endSubsystem(String name, String details, int minTime) {	}
~
+
~
+}
 
~
diff --git a/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogger.java b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogger.java
new file mode 100755
index 0000000..23435b3
--- /dev/null
+++ b/CoreLibrary/src/test/java/com/caucus/apps/corelib/util/DummyLogger.java
@@ -0,0 +1,355 @@
+package com.caucus.apps.corelib.util;
~
+
~
+import java.util.ArrayList;
~
+import java.util.List;
~
+
~
+import org.apache.commons.lang.StringUtils;
~
+import org.junit.Ignore;
~
+import org.slf4j.Logger;
~
+import org.slf4j.Marker;
~
+
~
+@Ignore
~
+public class DummyLogger implements Logger {
~
+	int traceCount = 0;
~
+	int infoCount  = 0;
~
+	int warnCount  = 0;
~
+	List<String> errors = new ArrayList<String>();
~
+	List<String> debugs = new ArrayList<String>();
~
+	
~
+	boolean debugEnabled = false;
~
+	boolean traceEnabled = false;
~
+
~
+	@Override
~
+	public String getName() {
~
+		return null;
~
+	}
~
+
~
+	@Override
~
+	public boolean isTraceEnabled() {
~
+		return traceEnabled;
~
+	}
~
+
~
+	@Override
~
+	public void trace(String msg) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(String format, Object arg) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(String format, Object arg1, Object arg2) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(String format, Object[] argArray) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(String msg, Throwable t) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public boolean isTraceEnabled(Marker marker) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void trace(Marker marker, String msg) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(Marker marker, String format, Object arg) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(Marker marker, String format, Object arg1, Object arg2) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(Marker marker, String format, Object[] argArray) {
~
+		++traceCount;
~
+	}
~
+
~
+	@Override
~
+	public void trace(Marker marker, String msg, Throwable t) {
~
+		++traceCount;
~
+	}
~
+
~
+	public void setDebugEnabled (boolean enabled) {
~
+		debugEnabled = enabled;
~
+	}
~
+	
~
+	@Override
~
+	public boolean isDebugEnabled() {
~
+		return debugEnabled;
~
+	}
~
+
~
+	@Override
~
+	public void debug(String msg) {
~
+		debugs.add(msg);
~
+	}
~
+	
~
+	private String simpleFormatter (String format, Object ... args) {
~
+		String result = format;
~
+		for (Object arg: args) {
~
+			result = StringUtils.replaceOnce(result, "{}",  (arg != null ? arg.toString() : ""));
~
+		}
~
+		
~
+		return result;
~
+	}
~
+
~
+	@Override
~
+	public void debug(String format, Object arg) {
~
+		debugs.add(simpleFormatter(format, arg));
~
+	}
~
+
~
+	@Override
~
+	public void debug(String format, Object arg1, Object arg2) {
~
+		debugs.add(simpleFormatter (format, arg1, arg2));
~
+	}
~
+
~
+	@Override
~
+	public void debug(String format, Object[] argArray) {
~
+		debugs.add(simpleFormatter (format, argArray));
~
+	}
~
+
~
+	@Override
~
+	public void debug(String msg, Throwable t) {
~
+		debugs.add(msg + t.toString());
~
+	}
~
+
~
+	@Override
~
+	public boolean isDebugEnabled(Marker marker) {
~
+		return debugEnabled;
~
+	}
~
+
~
+	@Override
~
+	public void debug(Marker marker, String msg) {
~
+		debugs.add(marker.toString() + msg);
~
+	}
~
+
~
+	@Override
~
+	public void debug(Marker marker, String format, Object arg) {
~
+		debugs.add(marker.toString() + String.format(format, arg));
~
+	}
~
+
~
+	@Override
~
+	public void debug(Marker marker, String format, Object arg1, Object arg2) {
~
+		debugs.add(marker.toString() + String.format(format, arg1, arg2));
~
+	}
~
+
~
+	@Override
~
+	public void debug(Marker marker, String format, Object[] argArray) {
~
+		debugs.add(marker.toString() + String.format(format, argArray));
~
+	}
~
+
~
+	@Override
~
+	public void debug(Marker marker, String msg, Throwable t) {
~
+		debugs.add(marker.toString() + msg + t.toString());
~
+	}
~
+
~
+	@Override
~
+	public boolean isInfoEnabled() {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void info(String msg) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(String format, Object arg) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(String format, Object arg1, Object arg2) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(String format, Object[] argArray) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(String msg, Throwable t) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public boolean isInfoEnabled(Marker marker) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void info(Marker marker, String msg) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(Marker marker, String format, Object arg) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(Marker marker, String format, Object arg1, Object arg2) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(Marker marker, String format, Object[] argArray) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public void info(Marker marker, String msg, Throwable t) {
~
+		++infoCount;
~
+	}
~
+
~
+	@Override
~
+	public boolean isWarnEnabled() {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void warn(String msg) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(String format, Object arg) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(String format, Object[] argArray) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(String format, Object arg1, Object arg2) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(String msg, Throwable t) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public boolean isWarnEnabled(Marker marker) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void warn(Marker marker, String msg) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(Marker marker, String format, Object arg) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(Marker marker, String format, Object arg1, Object arg2) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(Marker marker, String format, Object[] argArray) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public void warn(Marker marker, String msg, Throwable t) {
~
+		++warnCount;
~
+	}
~
+
~
+	@Override
~
+	public boolean isErrorEnabled() {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void error(String msg) {
~
+		errors.add(msg);
~
+	}
~
+
~
+	@Override
~
+	public void error(String format, Object arg) {
~
+		errors.add(simpleFormatter(format, arg));
~
+	}
~
+
~
+	@Override
~
+	public void error(String format, Object arg1, Object arg2) {
~
+		errors.add(simpleFormatter(format, arg1, arg2));
~
+	}
~
+
~
+	@Override
~
+	public void error(String format, Object[] argArray) {
~
+		errors.add(simpleFormatter(format, argArray));
~
+	}
~
+
~
+	@Override
~
+	public void error(String msg, Throwable t) {
~
+		errors.add(msg + t.toString());
~
+	}
~
+
~
+	@Override
~
+	public boolean isErrorEnabled(Marker marker) {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public void error(Marker marker, String msg) {
~
+		errors.add(marker.toString() + msg);
~
+	}
~
+
~
+	@Override
~
+	public void error(Marker marker, String format, Object arg) {
~
+		errors.add(marker.toString() + simpleFormatter(format, arg));
~
+	}
~
+
~
+	@Override
~
+	public void error(Marker marker, String format, Object arg1, Object arg2) {
~
+		errors.add(marker.toString() + simpleFormatter(format, arg1, arg2));
~
+	}
~
+
~
+	@Override
~
+	public void error(Marker marker, String format, Object[] argArray) {
~
+		errors.add(marker.toString() + simpleFormatter(format, argArray));
~
+	}
~
+
~
+	@Override
~
+	public void error(Marker marker, String msg, Throwable t) {
~
+		errors.add(marker.toString() + msg + t.toString());
~
+	}
~
+	
~
+	// CR Instrumented test dummy!
~
+	public int getTraceCount() { return traceCount; }
~
+	public int getInfoCount()  { return infoCount; }
~
+	public int getWarnCount()  { return warnCount; }
~
+	public int getErrorCount() { return errors.size(); }
~
+	public int getDebugCount() { return debugs.size(); }
~
+	
~
+	public List<String> getErrors() {
~
+		return errors;
~
+	}
~
+	
~
+	public List<String> getDebugs() {
~
+		return debugs;
~
+	}
~
+
~
+}
 
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/components/FigTablesSearchResult.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/components/FigTablesSearchResult.java
index d606587..586d43b 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/components/FigTablesSearchResult.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/components/FigTablesSearchResult.java
@@ -20,7 +20,7 @@ public class FigTablesSearchResult extends PqafBaseUI {
     public static final String LOC_LNK_ADDNOTES = "a.icon_addnotes";
~
     @Optional public static final String LOC_FROM_TITLE = "div.results_list_copy a.resultTitle";
~
     @Optional public static final String LOC_TYPE = "div.float_left small";
~
     @Optional public static final String LOC_LNK_FULL_SIZE_IMAGE = 
-"p a.icon_fullsize";
+"a.icon_fullsize"; // "a.icon_fullsize"; //"p a.icon_fullsize
~
     @Optional public static final String LOC_LNK_FILTER_TABLE = "li.filter_item a[href*='Table']";
~
     @Optional public static final String LOC_LNK_FILTER_FIGURE = "li.filter_item a[href*='Figure']";
~
     @Optional public static final String LOC_LNK_FILTER_TABLE_REMOVE = "a[title='Clear Table']";
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/DocViewPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/DocViewPage.java
index df52061..8c7da1f 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/DocViewPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/DocViewPage.java
@@ -27,615 +27,628 @@ import com.caucus.apps.onesearch.pqaf.Utils;
  *
~
  */
~
 public class DocViewPage extends PqafBasePage {
~
~
 	@Optional private static final String DOCVIEW_PAGE_PROP               = "Docview.properties";
~
~
 	/* ************************/
~
 	/* C-Style format strings */
~
 	/* ************************/
~
 	@Optional private static final String CSS_FORMAT_LNK_SIMILAR_DOC      = "#similarRecs ol[start='%d']>li>a";
~
 	@Optional private static final String CSS_FORMAT_LNK_OTHER_FORMAT     = "dd.float_left_Ie7>ul li a[title^='%s']";
~
~
~
 	/* ************************/
~
 	/* Top section */
~
 	/* ************************/
~
 	@Optional public static final String LOC_LBL_DISPLAYED_FORMAT       = "div.header_border_bottom h1";
~
 	@Optional public static final String LOC_LBL_RECORD_NUMBER          = "li.record strong";
~
 	@Optional public static final String LOC_IMG_PUBLOGO                = "img#pubLogo";
~
 	@Optional public static final String LOC_LBL_DOCUMENT_TITLE         = "h2.ltr";
~
 	@Optional public static final String LOC_TXT_CITATION_INFO          = "div.abstract_Text";
~
 	@Optional public static final String LOC_LNK_NEXT                   = "a[class^='next'][href*='docview']";
~
 	@Optional public static final String LOC_LNK_PREVIOUS               = "a[class^='prev'][href*='docview']";
~
 	@Optional public static final String LOC_LNK_BACK_TO_RESULTS        = "a.bullets_base_sprite.chevron_double_left[href*='/results/']";
~
 	@Optional public static final String LOC_LNK_BACK_TO_MYRESEARCH     = "a.bullets_base_sprite.chevron_double_left[href*='/myresearch']";
~
 	@Optional public static final String LOC_LNK_BACK_TO_SELECTEDITEMS  = "a.bullets_base_sprite.chevron_double_left[href*='/selecteditems']";
~
 	@Optional public static final String LOC_LNK_BACK_TO_SHAREDLIST     = "a.bullets_base_sprite.chevron_double_left[href*='/myresearch']";
~
 	@Optional public static final String LOC_LNK_TOGGLE_HIGHLIGHTING    = "a#toggleHits";
~
 	@Optional public static final String LOC_LNK_SHOW_DUPLICATE_ITEMS   = "a#displayDuplicateCitations";
~
 	@Optional public static final String LOC_BASE_DUPLICATES            = "div.duplicateCitationsWrapper";
~
 	@Optional public static final String LOC_BASE_ABSTRACT				= "#abstractZone";
~
 	@Optional public static final String LOC_BASE_FULLTEXT				= "#fullTextZoneId";
~
 	@Optional public static final String LOC_LNK_DUPLICATE_TITLE        = "a.resultTitle";
~
 	@Optional public static final String LOC_LNK_OPEN_IN_PDF_READER     = "a[data-wt*='OpenInPDFReader']";
~
 	@Optional public static final String LOC_LNK_SHOWMOREDETAIL         = "a#showMore";
~
 	@Optional public static final String LOC_LNK_SHOWLESSDETAIL         = "a#showLess";
~
 	@Optional public static final String LOC_LNK_ORDERACOPY             = "a[title='Order a copy']";
~
 	@Optional public static final String LOC_LNK_LOGINTOCAUCUS        = "a#loginLink";
~
 	@Optional public static final String LOC_LNK_ALLTABLESPREADSHEET    = "a[title='Download zip file of all table spreadsheets']";
~
 	@Optional public static final String LOC_TXT_IMAGE_SEQUENCE         = "span#imgSequence";
~
 	@Optional public static final String LOC_LNK_PINKYNAIL_FIGURE		= "div.pinkyNailWrapper img[id^='figure_']";
~
 	@Optional public static final String LOC_LNK_PINKYNAIL_TABLE		= "div.pinkyNailWrapper img[id^='table_']";
~
 	@Optional public static final String LOC_TXT_FIGURE_TABLE_LABEL		= "div.prototip center strong";
~
 	@Optional public static final String LOC_LNK_LATERAL_SEARCH			= "div.prototip a#lateralSearch";
~
 	@Optional public static final String LOC_TXT_CAPTION_SEQUENCE       = "div#graphicIntro h4";
~
 	@Optional public static final String LOC_LNK_SPREADSHEET         	= "a.formats_base_sprite.format_excel";
~
 	@Optional public static final String LOC_BASE_NAVIGATIONOPTIONS    	= "div.panel_base.pagingBoxResult";
~
 	@Optional public static final String LOC_CHK_MARKED_LIST			= "input[class=marked_list_checkbox]";
~
~
 	@Optional public static final String LOC_LNK_LINKTOFULLTEXT         = "div[class='alternativeLink']";
~
~
 	@FindBy(css = LOC_LBL_DISPLAYED_FORMAT) 					public WebElement displayedFormat;
~
 	@FindBy(css = LOC_LBL_RECORD_NUMBER)						public WebElement recordNumber;
~
 	@FindBy(css = LOC_LBL_DOCUMENT_TITLE)						public WebElement documentTitle;
~
 	@FindBy(css = LOC_TXT_CITATION_INFO)						public WebElement citationInfo;
~
 	@FindBy(css = LOC_LNK_NEXT)									public WebElement linkNextDocument;
~
 	@FindBy(css = LOC_LNK_PREVIOUS)								public WebElement linkPreviousDocument;
~
 	@FindBy(css = LOC_LNK_BACK_TO_RESULTS)						public WebElement linkBackToResults;
~
 	@FindBy(css = LOC_LNK_BACK_TO_SELECTEDITEMS)				public WebElement linkBackToSelectedItems;
~
 	@FindBy(css = LOC_LNK_BACK_TO_MYRESEARCH)					public WebElement linkBackToMyResearch;
~
 	@FindBy(css = LOC_LNK_BACK_TO_SHAREDLIST)					public WebElement linkBackToSharedList;
~
 	@FindBy(css = LOC_LNK_TOGGLE_HIGHLIGHTING)					public WebElement linkToggleHighlighting;
~
 	@FindBy(css = LOC_LNK_SHOW_DUPLICATE_ITEMS)					public WebElement linkShowDuplicateItems;
~
 	@FindBy(css = LOC_BASE_DUPLICATES)							public WebElement baseDuplicates;
~
 	@FindBy(css = LOC_BASE_ABSTRACT)							public WebElement baseAbstract;
~
 	@FindBy(css = LOC_BASE_FULLTEXT)							public WebElement baseFullText;
~
 	@FindBy(css = LOC_LNK_SHOW_DUPLICATE_ITEMS)					public WebElement linkDuplicateTitle;
~
 	@FindBy(css = LOC_LNK_OPEN_IN_PDF_READER)					public WebElement linkOpenInPdfReader;
~
 	@FindBy(css = LOC_LNK_SHOWMOREDETAIL)                       public WebElement lnkShowMoreDetail;
~
 	@FindBy(css = LOC_LNK_SHOWLESSDETAIL)                       public WebElement lnkShowLessDetail;
~
 	@FindBy(css=LOC_LNK_ORDERACOPY)                             public WebElement lnkOrderACopy;
~
 	@FindBy(css=LOC_LNK_LOGINTOCAUCUS)                        public WebElement lnkLoginToCaucus;
~
 	@FindBy(css=LOC_CHK_MARKED_LIST)							public WebElement markedListCheckBox;
~
~
 	/* ************************/
~
 	/* Main Content section */
~
 	/* ************************/
~
 	@Optional public static final String LOC_LNK_ABSTRACT_TRANSLATE         = "a[id^='abstract_translate_link']";
~
 	@Optional public static final String LOC_LNK_FULLTEXT_TRANSLATE         = "a[id^='fulltext_translate_link']";
~
~
 	@FindBy(css = LOC_LNK_ABSTRACT_TRANSLATE)                    public WebElement linkAbstractTranslate;
~
 	@FindBy(css = LOC_LNK_FULLTEXT_TRANSLATE)                    public WebElement linkFulltextTranslate;
~
~
 	
+@Optional public static final String LOC_LNK_BROWSETHISISSUE         = "a[id^='addFlashPageParametericon_browseissue']";
~
+	@FindBy(css = LOC_LNK_BROWSETHISISSUE)                    public WebElement linkBrowseThisIssue;
~
~
+	@Optional public static final String LOC_LNK_EXTENDED_PAGE_RANGE_NEXT        = "li a.arrows_base_sprite.arrow_next";
~
+	@FindBy(css = LOC_LNK_EXTENDED_PAGE_RANGE_NEXT)                    public WebElement linkExtendedPageRangeNext;
~
+	
~
+	@Optional public static final String LOC_TXT_PAGEHEADER        = "div.header_border_bottom div.float_left h1";
~
+	@FindBy(css = LOC_TXT_PAGEHEADER)                    public WebElement txtPageHeader;
~
+	
~
+	@Optional public static final String LOC_TXT_PAGEZONE        = "div#pageMapZone img#pageMap";
~
+	@FindBy(css = LOC_TXT_PAGEZONE)                    public WebElement txtPageZone;
~
 	
~
 	
~
~
 	/* ************************/
~
 	/* Indexing(Details) */
~
 	/* ************************/
~
 	public static final String LOC_LNK_CITE_THIS                = "a[id^='citethisLink']";
~
 	@Optional public static final String LOC_TR_ALL_INDEXING_ROWS = "div[id^='indexingSectionDiv'] div.display_record_indexing_row";
~
 	@Optional public static final String LOC_TXT_ALL_INDEXING_FIELDS        = "div.display_record_indexing_fieldname, div[class='browser_term_label _GROUP indented_indexing_single_container']";
~
 	@Optional public static final String LOC_TXT_ALL_INDEXING_VALUES        = "div.display_record_indexing_data";
~
 	@Optional public static final String LOC_TXT_ALL_INDEXING_SUBFIELDS    = ".biosGroupLine .display_record_indexing_fieldname";
~
 	@Optional public static final String LOC_LNK_ALL_LATERAL_SEARCHES        = "a#lateralSearch";
~
~
 	@FindBy(css = LOC_TR_ALL_INDEXING_ROWS)                        public List<WebElement> indexingRows;
~
 	@FindBy(css = LOC_TXT_ALL_INDEXING_FIELDS)                     public List<WebElement> indexingFields;
~
 	@FindBy(css = LOC_TXT_ALL_INDEXING_VALUES)                     public List<WebElement> indexingValues;
~
 	@FindBy(css = LOC_LNK_ALL_LATERAL_SEARCHES)                    public List<WebElement> lateralSearches;
~
~
~
 	/* ************************/
~
 	/* Other formats */
~
 	/* ************************/
~
 	@Optional public static final String LOC_LNK_ALL_OTHER_FORMATS                  = "dd.float_left_Ie7>ul li a";
~
 	@Optional public static final String LOC_LNK_CITATION_ABSTRACT					= "a[title^='Citation/Abstract']";
~
 	@Optional public static final String LOC_LNK_CITATION							= "a[title^='Citation']";
~
 	@Optional public static final String LOC_LBL_OTHER_FORMATS_CITATION_VIEW        = "div#side_panel dt>span>strong";
~
 	@Optional public static final String LOC_LBL_OTHER_FORMATS_NON_CITATION_VIEW    = "div#mainContentLeft dt>span>strong";
~
~
~
 	@FindBy(css = LOC_LNK_ALL_OTHER_FORMATS)                            public List<WebElement> otherFormats;
~
 	@FindBy(css = LOC_LNK_CITATION_ABSTRACT)                            public List<WebElement> lnkCitationAbstract;
~
 	@FindBy(css = LOC_LNK_CITATION)			                            public List<WebElement> lnkCitation;
~
 	@FindBy(css = LOC_LBL_OTHER_FORMATS_CITATION_VIEW)                  public WebElement otherFormatsCitationView;
~
 	@FindBy(css = LOC_LBL_OTHER_FORMATS_NON_CITATION_VIEW)              public WebElement otherFormatNonCitationView;
~
~
 	/* ************************/
~
 	/* Find a copy */
~
 	/* ************************/
~
~
 	@Optional public static final String LOC_IMG_360_LINK_TO_FULL_TEXT = "div#side_panel div.display_record_formats > dd img[title='360 Link to Full Text']";
~
~
 	@FindBy(css = LOC_IMG_360_LINK_TO_FULL_TEXT) public WebElement img360LinkToFullText;
~
~
 	/* ************************/
~
 	/* Side panel */
~
 	/* ************************/
~
~
 	@Optional public static final String LOC_LNK_SEE_SIMILAR_DOCS             	= "div.search_links a[id^='showMore']";
~
 	@Optional public static final String LOC_LNK_SEARCH_WITH_INDEXING_TERMS    	= "a#indexSearchTermsLink";
~
 	@Optional public static final String LOC_HEADING_INDEXING_SEARCH_TERMS        	= "#frmIndexFieldSearch strong";
~
 	@Optional public static final String LOC_LBL_INDEXING_SEARCH_TERMS        	= "#frmIndexFieldSearch label";
~
 	@Optional public static final String LOC_BTN_SUBMIT_SEARCH_WITH_INDEXING    = "#frmIndexFieldSearch a[id^='submit']";
~
 	@Optional public static final String LOC_LNK_EXPAND_PANEL                	= "#columnArrow";
~
~
 	@FindBy(css = LOC_LNK_SEE_SIMILAR_DOCS)                            	public WebElement linkSeeSimilarDocs;
~
 	@FindBy(css = LOC_LNK_SEARCH_WITH_INDEXING_TERMS)                	public WebElement linkSearchWithIndexingTerms;
~
 	@FindBy(css = LOC_LBL_INDEXING_SEARCH_TERMS)                    	public List<WebElement> indexingSearchTerms;
~
 	@FindBy(css = LOC_HEADING_INDEXING_SEARCH_TERMS)                    public List<WebElement> indexingSearchTermHeadings;
~
~
 	/* ************************/
~
 	/* Tags */
~
 	/* ************************/
~
 	@Optional public static final String LOC_LNK_ABOUT_TAGS = "a.popUpHelp[href*='MR_Tags']";
~
 	@Optional public static final String LOC_LNK_GOTO_MYTAGS = "a[href*='tagging/mytags']";
~
 	@Optional public static final String LOC_LNK_ADD_TAGS = "a#add_tags_link";
~
~
 	@FindBy(css=LOC_LNK_ABOUT_TAGS)  public WebElement lnkAboutTags;
~
 	@FindBy(css=LOC_LNK_GOTO_MYTAGS) public WebElement lnkGotoMyTags;
~
 	@FindBy(css=LOC_LNK_ADD_TAGS)    public WebElement lnkAddTags;
~
~
 	@Optional public static final String LOC_CHK_SHAREMYTAGS = "input#tagVisibility";
~
 	@Optional public static final String LOC_TXT_TAGNAME = "input#addTagField";
~
 	@Optional public static final String LOC_BTN_ADDTAG = "a#addTagFormSubmit";
~
~
 	@FindBy(css=LOC_CHK_SHAREMYTAGS) public WebElement chkShareMyTags;
~
 	@FindBy(css=LOC_TXT_TAGNAME)     public WebElement txtTagName;
~
 	@FindBy(css=LOC_BTN_ADDTAG)      public WebElement btnAddTag;
~
~
 	public DocViewPage(BaseSeleniumTest bst) {
~
 		super(bst);
~
 	}
~
~
 	/**
~
 	 * Gets the document title.
~
 	 * 
~
 	 * @return The title of the document.
~
 	 */
~
 	public String getDocumentTitle() {
~
 		return getText(By.cssSelector(LOC_LBL_DOCUMENT_TITLE));
~
 	}
~
~
 	/**
~
 	 * @return The document format that is displayed
~
 	 */
~
 	public String getDisplayedFormat() {
~
 		return getText(By.cssSelector(LOC_LBL_DISPLAYED_FORMAT));
~
 	}
~
~
 	/**
~
 	 * @return The citation info displayed below the title of the document
~
 	 */
~
 	public String getCitationInfo() {
~
 		return getText(By.cssSelector(LOC_TXT_CITATION_INFO));
~
 	}
~
~
 	/**
~
 	 * Gets the fields displayed in the Indexing(details) section
~
 	 * <p>
~
 	 * When subfields are present, the count of the fields returned by this may not be equal to the count of values returned by getIndexingValues()
~
 	 * @return The list of the fields displayed
~
 	 */
~
 	public String[] getIndexingFields() {
~
 		List<String> fields = new ArrayList<String>();
~
 		for (WebElement indexingField : indexingFields) {
~
 			fields.add(indexingField.getText());
~
 		} 
~
 		return fields.toArray(new String[0]);
~
 	}
~
~
 	/**
~
 	 * Gets the values displayed for the Indexing fields in the Indexing(details) section
~
 	 * <p>
~
 	 * When subfields are present, the count of the values returned by this may not be equal to the count of fields returned by getIndexingFields()
~
 	 * @return The list of the values displayed
~
 	 */
~
 	public String[] getIndexingValues() {
~
 		List<String> values = new ArrayList<String>();
~
 		for (WebElement indexingValue : indexingValues) {
~
 			values.add(indexingValue.getText());
~
 		}
~
 		return values.toArray(new String[0]);
~
 	}
~
~
 	/**
~
 	 * Gets the value of a field displayed in the Indexing(details) section
~
 	 * <p>
~
 	 * In case subfields are present like for field 'Company / organization', it returns a concatenated string: <code>subfield1:vlaue1|subfield2:value2;|subfield3:value3</code>
~
 	 * @param indexingField
~
 	 *                 The name of the Indexing fields
~
 	 * @return The value of the field, null if the field does not exists.
~
 	 */
~
 	public String getValueForField(String indexingField) {
~
 		for (WebElement indexingRow : indexingRows){
~
 			WebElement field = indexingRow.findElement(By.cssSelector(LOC_TXT_ALL_INDEXING_FIELDS));
~
 			if (field.getText().equals(indexingField)){
~
 				List<WebElement> dataValues = indexingRow.findElements(By.cssSelector(LOC_TXT_ALL_INDEXING_VALUES));
~
 				if(dataValues.size() == 1){
~
 					return dataValues.get(0).getText();
~
 				}
~
 				else if (dataValues.size() > 1){
~
 					// Subfields are present
~
 					List<WebElement> subFields = indexingRow.findElements(By.cssSelector(LOC_TXT_ALL_INDEXING_SUBFIELDS));
~
 					StringBuilder fieldAndValuePairs = new StringBuilder();
~
 					int count = Math.min(subFields.size(), dataValues.size());
~
 					for(int i=0; i<count; i++){
~
 						fieldAndValuePairs.append(subFields.get(i).getText());
~
 						if (!fieldAndValuePairs.toString().endsWith(":")){
~
 							fieldAndValuePairs.append(":");
~
 						}
~
 						fieldAndValuePairs.append(dataValues.get(i).getText() + "|");
~
 					}
~
 					return StringUtils.removeEnd(fieldAndValuePairs.toString(), "|");
~
 				}
~
 			}
~
 		}
~
 		return null;
~
 	}
~
~
 	/**
~
 	 * Gets the formats of the document displayed in the 'Other formats' section
~
 	 * 
~
 	 * @return The list of other formats
~
 	 */
~
 	public String[] getOtherFormats() {
~
 		List<String> formats = new ArrayList<String>();
~
 		for (WebElement otherFormat : otherFormats){
~
 			formats.add(otherFormat.getText());
~
 		}
~
 		return formats.toArray(new String[0]);
~
 	}
~
~
 	/**
~
 	 * Gets the list of search terms displayed in the side panel under the section 'Search with indexing terms'.
~
 	 * 
~
 	 * @return The list of search terms
~
 	 */
~
 	public String[] getIndexingSearchTerms() {
~
 		assertTrue("Section 'Search with Indexing terms' is not expanded", isSearchWithIndexingTermsExpanded());
~
 		List<String> indexingTerms = new ArrayList<String>();
~
 		for (WebElement indexingSearchTerm : indexingSearchTerms){
~
 			indexingTerms.add(indexingSearchTerm.getText());
~
 		}
~
 		return indexingTerms.toArray(new String[0]);
~
 	}
~
~
 	/**
~
 	 * Gets the list of search term headings displayed in the side panel under the section 'Search with indexing terms'.
~
 	 * 
~
 	 * @return The list of search terms
~
 	 */
~
 	public String[] getIndexingSearchTermsHeadings() {
~
 		assertTrue("Section 'Search with Indexing terms' is not expanded", isSearchWithIndexingTermsExpanded());
~
 		List<String> indexingTermHeadings = new ArrayList<String>();
~
 		for (WebElement indexingSearchTermHeading : indexingSearchTermHeadings){
~
 			indexingTermHeadings.add(indexingSearchTermHeading.getText());
~
 		}
~
 		return indexingTermHeadings.toArray(new String[0]);
~
 	}
~
~
 	/**
~
 	 * Clicks on a lateral search in the Indexing(details) section.
~
 	 * 
~
 	 * @param indexingField
~
 	 *                 The indexing field which has lateral search links
~
 	 * @param linkNumber
~
 	 *                 The link number to click. For example, if two author links are present pass 1 to click the first author link.
~
 	 * @param c
~
 	 *                 the Class to return. (Useful for chaining)
~
 	 * @return support for chaining/fluent 
~
 	 */
~
 	public <T extends PqafBaseUI> T clickLateralSearchInField(String indexingField, int linkNumber, Class<T> c) {
~
 		T obj = getPageByClass(c);
~
 		for (WebElement indexingRow : indexingRows){
~
 			WebElement field = indexingRow.findElement(By.cssSelector(LOC_TXT_ALL_INDEXING_FIELDS));
~
 			if (field.getText().equals(indexingField)){
~
 				List<WebElement> lateralSearches = indexingRow.findElements(By.cssSelector(LOC_LNK_ALL_LATERAL_SEARCHES));
~
 				if (linkNumber > 0 && lateralSearches.size() >= linkNumber){
~
 					lateralSearches.get(linkNumber - 1).click();
~
 					obj.validate();
~
 					return obj;
~
 				}
~
 			}
~
 		}
~
 		fail("Lateral search link not present for field:" + indexingField + " and link number:" + linkNumber);
~
 		return obj;
~
 	}
~
~
 	/**
~
 	 * Expands 'See similar documents' section from the side panel
~
 	 * 
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage expandSeeSimilarDocuments() {
~
 		if (!isSeeSimilarDocumentsExapnded()){
~
 			List<WebElement> expandLinks = getDriver().findElements(By.cssSelector(LOC_LNK_SEE_SIMILAR_DOCS));
~
 			if (expandLinks.get(0).isDisplayed()){
~
 				expandLinks.get(0).click();
~
 			}
~
 			else{
~
 				expandLinks.get(1).click();
~
 			}
~
 			waitForCondition(new ExpectedCondition<Boolean>() {
~
 				public Boolean apply(WebDriver driver) {
~
 					return isSeeSimilarDocumentsExapnded();
~
 				}
~
 			}, PqafBaseUI.DEFAULT_TIMEOUT);
~
 		}
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Collapses 'See similar documents' section from the side panel
~
 	 * 
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage collapseSeeSimilarDocuments() {
~
 		if (isSeeSimilarDocumentsExapnded()){
~
 			click(By.cssSelector(LOC_LNK_SEE_SIMILAR_DOCS), getClass());
~
 			waitForCondition(new ExpectedCondition<Boolean>() {
~
 				public Boolean apply(WebDriver driver) {
~
 					return !isSeeSimilarDocumentsExapnded();
~
 				}
~
 			}, PqafBaseUI.DEFAULT_TIMEOUT);
~
 		}
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Clicks a document from the 'See similar documents' section from the side panel
~
 	 * @param documentNumber
~
 	 *                     The number of the document from the top of the list. Pass '1' for the first document.
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage clickSimilarDocument(int documentNumber) {
~
 		expandSeeSimilarDocuments();
~
 		String docLinkCss = String.format(CSS_FORMAT_LNK_SIMILAR_DOC, documentNumber);
~
 		return click(By.cssSelector(docLinkCss), DocViewPage.class);
~
 	}
~
~
 	/**
~
 	 * Expands 'Search with indexing terms' section from the side panel
~
 	 * 
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage expandSearchWithIndexingTerms() {
~
 		if (!isSearchWithIndexingTermsExpanded()){
~
 			click(By.cssSelector(LOC_LNK_SEARCH_WITH_INDEXING_TERMS), getClass());
~
 			waitForCondition(new ExpectedCondition<Boolean>() {
~
 				public Boolean apply(WebDriver driver) {
~
 					return isSearchWithIndexingTermsExpanded();
~
 				}
~
 			}, PqafBaseUI.DEFAULT_TIMEOUT);
~
 		}
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Collapses 'Search with indexing terms' section from the side panel
~
 	 * 
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage collapseSearchWithIndexingTerms() {
~
 		if (isSearchWithIndexingTermsExpanded()){
~
 			click(By.cssSelector(LOC_LNK_SEARCH_WITH_INDEXING_TERMS), getClass());
~
 			waitForCondition(new ExpectedCondition<Boolean>() {
~
 				public Boolean apply(WebDriver driver) {
~
 					return !isSearchWithIndexingTermsExpanded();
~
 				}
~
 			}, PqafBaseUI.DEFAULT_TIMEOUT);
~
 		}
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Checks the checkbox for an indexing search term from the side panel
~
 	 * 
~
 	 * @param indexingSearchTerm
~
 	 *                     The name of the indexing search term to be checked
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage checkIndexingTerm(String indexingSearchTerm){
~
 		List<WebElement> indexingTerms = getDriver().findElements(By.cssSelector("#frmIndexFieldSearch > ul > li"));
~
 		for (WebElement indexingTerm : indexingTerms){
~
 			if(indexingTerm.findElements(By.tagName("label")) != null && !indexingTerm.findElements(By.tagName("label")).isEmpty()){
~
 				WebElement indexingTermLabel = indexingTerm.findElement(By.tagName("label"));
~
 				if (indexingTermLabel.getText().equals(indexingSearchTerm)){
~
 					WebElement checkbox = indexingTerm.findElement(By.cssSelector("input[id^='idxFieldCheckBox']"));
~
 					if(!checkbox.isSelected()){
~
 						checkbox.click();
~
 						return this;
~
 					}
~
 				}
~
 			}
~
 		}
~
 		fail("Indexing search term: " + indexingSearchTerm + " not found.");
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Checks if the 'See similar documents' section is expanded in the side panel.
~
 	 * 
~
 	 * @return true if the section is expanded
~
 	 */
~
 	public boolean isSeeSimilarDocumentsExapnded() {
~
 		List<WebElement> expandLinks = getDriver().findElements(By.cssSelector(LOC_LNK_SEE_SIMILAR_DOCS));
~
 		if (expandLinks.get(0).isDisplayed()){
~
 			return expandLinks.get(0).getAttribute("class").contains("indicator_menu_down_left");
~
 		}
~
 		else {
~
 			return expandLinks.get(1).getAttribute("class").contains("indicator_menu_down_left");
~
 		}
~
~
 	}
~
~
~
 	/**
~
 	 * Checks if the 'Search with indexing terms' section is expanded in the side panel.
~
 	 * 
~
 	 * @return true if the section is expanded
~
 	 */
~
 	public boolean isSearchWithIndexingTermsExpanded() {
~
 		return linkSearchWithIndexingTerms.getAttribute("class").contains("indicator_menu_down_left");
~
 	}
~
~
 	/**
~
 	 * Checks if lateral search links are present for an indexing field in the Indexing(details) section
~
 	 * 
~
 	 * @param indexingField
~
 	 *                 the indexing field for which lateral search links will be checked
~
 	 * @return true if at least one lateral search link is present
~
 	 */
~
 	public boolean islateralSearchPresentInField(String indexingField) {
~
 		for (WebElement indexingRow : indexingRows){
~
 			WebElement field = indexingRow.findElement(By.cssSelector(LOC_TXT_ALL_INDEXING_FIELDS));
~
 			if (field.getText().equals(indexingField)){
~
 				List<WebElement> lateralSearches = indexingRow.findElements(By.cssSelector(LOC_LNK_ALL_LATERAL_SEARCHES));
~
 				return (lateralSearches.size() > 0)?true:false;
~
 			}
~
 		}
~
 		return false;
~
 	}
~
~
 	/**
~
 	 * Returns allowed display formats on the docview page for a given site
~
 	 * 
~
 	 * @param siteName
~
 	 *                 the name of the site
~
 	 * @return the list of displayed formats
~
 	 */
~
 	public String[] getAllowedDisplayFormats(String siteName) {
~
 		Map<String, String> displayFormatMap = Utils.getGroupLevelMap(siteName, "DF", DOCVIEW_PAGE_PROP);
~
 		List<String> allowedFormats = new ArrayList<String>();
~
 		for (String key : displayFormatMap.keySet()) {
~
 			allowedFormats.add(displayFormatMap.get(key));
~
 		}
~
 		return allowedFormats.toArray(new String[0]);
~
 	}
~
~
 	public void navigateToInBoundLink(String url) {
~
 		baseSeleniumTest.driver.navigate().to(getBaseUrl() + url);
~
 	}
~
~
 	/**
~
 	 * Clicks on a format link in the 'Other format' section
~
 	 * 
~
 	 * @param format
~
 	 *             the format to click
~
 	 * @return support for chaining/fluent
~
 	 */
~
 	public DocViewPage clickOtherFormat(String format) {
~
 		String formatCss = String.format(CSS_FORMAT_LNK_OTHER_FORMAT, format);
~
 		validatePresent(By.cssSelector(formatCss), "No link present for the format: " + format);
~
 		return click(By.cssSelector(formatCss), getClass());
~
 	}
~
~
 	public DocViewPage expandAndclickDuplicateDocument(int documentNumber) {
~
 		click(By.cssSelector(DocViewPage.LOC_LNK_SHOW_DUPLICATE_ITEMS), DocViewPage.class);
~
 		return click(baseSeleniumTest.getNthSubElement(documentNumber+2, DocViewPage.LOC_BASE_DUPLICATES, DocViewPage.LOC_LNK_DUPLICATE_TITLE) , DocViewPage.class);
~
~
 	}
~
~
 	/**
~
 	 * Fetches the value of the specified indexing detail.
~
 	 * @param indexDetail The detail to fetch
~
 	 * @return
~
 	 */
~
 	public String getIndexingDetail(String indexDetail) {
~
 		List<String> indexingDetails = Arrays.asList(getIndexingFields());
~
 		List<String> values = Arrays.asList(getIndexingValues());
~
~
 		// first make sure it exists.
~
 		validateIndexingDetail(indexDetail);
~
~
 		for (int i = 0; i < indexingDetails.size(); i++)
~
 			if (indexingDetails.get(i).equals(indexDetail)) {
~
 				return values.get(i);
~
 			}
~
~
 		return null;
~
 	}
~
~
 	/* ******* Validation Functions ********* */
~
 	/**
~
 	 * Validate that an index detail exists.
~
 	 * @param indexDetail
~
 	 * @return
~
 	 */
~
 	public DocViewPage validateIndexingDetail(String indexDetail) {
~
 		List<String> indexingDetails = Arrays.asList(getIndexingFields());
~
~
 		for (String detail : indexingDetails)
~
 			if (detail.equals(indexDetail)) {
~
 				return this;
~
 			}
~
~
 		fail("Could not find an indexing detail [" + indexDetail + "].");
~
 		return this;
~
 	}
~
~
 	public DocViewPage validateIndexingDetailNotFound (String label) {
~
 		for (String detail : getIndexingFields()) {
~
 			if (detail.equals(label)) {
~
 				fail ("Should not find (but did) indexing label [" + label + "].");
~
 			}
~
 		}
~
~
 		return this;
~
 	}
~
~
 	@Deprecated //CR Sloppy -- just verifies that indexDetail and value are in the same set of index rows, 
~
 	// not that they are on the SAME row!  See the 'strict' version.
~
 	public DocViewPage validateIndexingDetail(String indexDetail, String value) {
~
 		List<String> indexingDetails = Arrays.asList(getIndexingFields());
~
 		List<String> values = Arrays.asList(getIndexingValues());
~
~
 		// first make sure it exists.
~
 		validateIndexingDetail(indexDetail);
~
~
 		for (int i = 0; i < indexingDetails.size(); i++)
~
 			if (indexingDetails.get(i).equals(indexDetail)) {
~
 				// validate the value...
~
 				for(String indexFieldVal: values)
~
 				{
~
 					if(indexFieldVal.toLowerCase().equals(value.toLowerCase()))
~
 					{
~
 						assertTrue(indexFieldVal.toLowerCase().equals(value.toLowerCase()));
~
 						return this;
~
 					}             
~
~
 				}               
~
 			}
~
~
 		fail(String.format("The indexing detail [%s] exists, but does not have value [%s]", indexDetail, value));
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Validate that 'label' and 'value' are on the SAME indexing detail row!
~
 	 * @param expectedLabel
~
 	 * @param expectedValue
~
 	 * @return this DocViewPage instance, for use in chaining validators.
~
 	 */
~
 	public DocViewPage validateIndexingDetailStrict(String expectedLabel, String expectedValue) {
~
 		for (WebElement row : indexingRows) {
~
 			String actualLabel = row.findElement(By.cssSelector(LOC_TXT_ALL_INDEXING_FIELDS)).getText().trim();
~
 			String actualValue = row.findElement(By.cssSelector(LOC_TXT_ALL_INDEXING_VALUES)).getText().trim();
~
 			if (StringUtils.equals(expectedLabel, actualLabel)  &&  StringUtils.equals(expectedValue, actualValue))
~
 				return this;
~
 		}
~
 
~
 		fail(String.format("The indexing detail [%s] exists, but does not have value [%s]", expectedLabel, expectedValue));
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Validate that 'label' and 'value' are on the SAME indexing detail row,
~
 	 * and that part of the actual value is hit-highlighted, and that part contains expectedValue as a substring.
~
 	 * @param expectedLabel
~
 	 * @param expectedValue
~
 	 * @return this DocViewPage instance, for use in chaining validators.
~
 	 */
~
 	//TODO CR May need to handle case where multiple substrings are hit-highlighted (in the future).  Charles Roth 7/30/2014
~
 	public DocViewPage validateIndexingDetailContainsHighlightedValue (String expectedLabel, String expectedValue) {
~
 		for (WebElement row : indexingRows) {
~
@@ -655,7 +668,7 @@ public class DocViewPage extends PqafBasePage {
 		fail(String.format("The indexing detail [%s] exists, but does not have highlighted value [%s]", expectedLabel, expectedValue));
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Validate that titles <code>{a}</code> through <code>{b}</code> match what is specified.
~
 	 * @param start the index of the starting result
~
@@ -667,40 +680,40 @@ public class DocViewPage extends PqafBasePage {
 		baseSeleniumTest.waitForAjax();
~
 		if (end < start) fail(String.format("the end index [%s] is less than the start! [%s]", end, start));
~
 		while ( start <= end ) {
~
 			String docLinkCss = String.format(CSS_FORMAT_LNK_SIMILAR_DOC, start);
~
 			validateText(By.cssSelector(docLinkCss), baseSeleniumTest.regexSafe(titles[start-1]));
~
 			start++;
~
 		}
~
 		return this;
~
 	}
~
~
 	@Deprecated //CR Sloppy -- just verifies that indexDetail and value are in the same set of index rows, 
~
 	// not that they are on the SAME row!  May need a 'strict' version, see the related method(s).
~
 	public DocViewPage validateIndexingDetailContains(String indexDetail, String value) {
~
 		List<String> indexingDetails = Arrays.asList(getIndexingFields());
~
 		List<String> values = Arrays.asList(getIndexingValues());
~
~
 		// first make sure it exists.
~
 		validateIndexingDetail(indexDetail);
~
~
 		for (int i = 0; i < indexingDetails.size(); i++)
~
 			if (indexingDetails.get(i).contains(indexDetail)) {
~
 				// validate the value...
~
 				for(String indexFieldVal: values)
~
 				{
~
 					if(indexFieldVal.toLowerCase().contains(value.toLowerCase()))
~
 					{
~
 						assertTrue(indexFieldVal.toLowerCase().contains(value.toLowerCase()));
~
 						return this;
~
 					}             
~
~
 				}               
~
 			}
~
~
 		fail(String.format("The indexing detail [%s] exists, but does not have value [%s]", indexDetail, value));
~
 		return this;
~
 	}
~
~
 	/**
~
 	 * Validate that titles <code>{a}</code> through <code>{b}</code> match what is specified.
~
 	 * @param start the index of the starting result
~
@@ -718,15 +731,15 @@ public class DocViewPage extends PqafBasePage {
 		}
~
 		return this;
~
 	}
~
~
 	@Override
~
 	protected void navigate() {
~
 		String url = getBaseUrl() + "/docview";
~
 		baseSeleniumTest.driver.navigate().to(url); 
~
 	}
~
~
 	@Override
~
 	public void validate() {
~
 		validateAllRequiredElementsPresent();
~
 	}
~
 }
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/PublicationInformationPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/PublicationInformationPage.java
new file mode 100644
index 0000000..207323f
--- /dev/null
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/PublicationInformationPage.java
@@ -0,0 +1,52 @@
+package com.caucus.apps.onesearch.pqaf.pqis.pages;
~
~
+import static org.junit.Assert.fail;
~
~
+import org.openqa.selenium.By;
~
+import org.openqa.selenium.WebElement;
~
+import org.openqa.selenium.support.FindBy;
~
~
+import com.caucus.apps.onesearch.pqaf.BaseSeleniumTest;
~
+import com.caucus.apps.onesearch.pqaf.CannotNavigateException;
~
+import com.caucus.apps.onesearch.pqaf.Optional;
~
+import com.caucus.apps.onesearch.pqaf.PqafBasePage;
~
~
+public class PublicationInformationPage extends PqafBasePage{
~
~
+	
~
+	@Optional public static final String LOC_LNK_BACKTOPUBLICATIONSEARCH =	"div.resultLinks.backToPubLink li a.bullets_base_sprite";
~
+	@Optional public static final String LOC_LNK_VIEWMOSTRECENTISSUE = "div.pub_Wrap ul.horizontal.float_left.viewPubContents li a.preview_icon_hapi.bullets_base_sprite";
~
+	 public static final String LOC_TXT_SEARCHWITHIN = "input[id^='publicationQuery']";
~
+	 public static final String LOC_BTN_SEARCH_WITHIN = "a[id^='submit_4]";
~
~
+	@FindBy(css = LOC_LNK_VIEWMOSTRECENTISSUE) 						public WebElement lnkViewMostRecentIssue;
~
+	@FindBy(css = LOC_LNK_BACKTOPUBLICATIONSEARCH) 					public WebElement lnkBackToPubSearch;
~
+	@FindBy(css = LOC_TXT_SEARCHWITHIN) 						    public WebElement txtSearchWithinTerm;
~
+	@FindBy(css = LOC_BTN_SEARCH_WITHIN) 						    public WebElement btnSearchWithinTerm;
~
~
+	public PublicationInformationPage(BaseSeleniumTest bst) {
~
+		super(bst);
~
+	}
~
~
+	/**
~
+	 * Search within publication information
~
+	 * 
~
+	 * @param searchTerm
~
+	 * 				the search term
~
+	 * @return support for chaining/fluent
~
+	 */
~
+	public SearchResultPage searchWithin(String searchTerm) {
~
+		txtSearchWithinTerm.sendKeys(searchTerm);
~
+		return click(By.cssSelector(LOC_BTN_SEARCH_WITHIN), SearchResultPage.class);
~
+	}
~
~
+	@Override
~
+	protected void navigate() {
~
+		fail(new CannotNavigateException().toString());
~
+	}
~
~
+	@Override
~
+	public void validate() {
~
+		validateAllRequiredElementsPresent();
~
+	}
~
+}
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/SearchResultPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/SearchResultPage.java
index 90e3120..0df8eac 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/SearchResultPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/pqis/pages/SearchResultPage.java
@@ -33,7 +33,7 @@ import com.caucus.apps.onesearch.pqaf.pqis.components.SearchResult;
 public class SearchResultPage extends PqafBasePage {
~
     
~
     public static final String LOC_CHK_SELECTALLRESULTS = "input#mlcbAll";
~
     public static final String LOC_LNK_SAVE_SEARCH		= 
-"a#eventlink";
+"a[title^='Save search']";
~
     public static final String LOC_LNK_CREATEALERT      = "a#createAlertLink";
~
     public static final String LOC_LNK_CREATERSSFEED    = "a#createRSSLink";
~
     public static final String LOC_LBL_NUMBEROFRESULTS  = ".header_border_bottom .float_left";
~
@@ -248,4 +248,5 @@ public class SearchResultPage extends PqafBasePage {
 		}
~
 		return this;
~
 	}
~
 	
~
 }
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/AdvancedSearchPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/AdvancedSearchPage.java
index d8b8421..c1b424e 100755
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/AdvancedSearchPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/AdvancedSearchPage.java
@@ -1,6 +1,8 @@
 
~
 package com.caucus.apps.onesearch.pqaf.s1.pages;
~
 
~
+import static org.junit.Assert.assertTrue;
~
~
 import java.util.Arrays;
~
 import java.util.Enumeration;
~
 import java.util.HashMap;
~
@@ -8,8 +10,6 @@ import java.util.List;
 import java.util.Map;
~
 import java.util.Properties;
~
 
~
-import static org.junit.Assert.assertTrue;
~
~
 import org.apache.commons.lang.StringUtils;
~
 
~
 import com.caucus.apps.onesearch.pqaf.BaseSeleniumTest;
~
@@ -297,10 +297,9 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link="+dbLinkName);
~
 		go();
~
 		
~
 		String biFieldName = 
-siteName+".BI.field";
~
-		HashMap<String,
+siteName.toUpperCase()+".BI.field";
~
+		Map<String,
  String> biMap    = 
-getSiteSpecificMap(siteName);
+getSiteSpecificMap(biFieldName);
~
 		int biCount = 
-Integer.parseInt(biMap.get(siteName+".BI.fields.count"));
+Integer.parseInt(biMap.get(siteName.toUpperCase()+".BI.fields.count"));
~
 		for(int i=1;i<=biCount;i++){
~
 			String value = biMap.get(biFieldName+i);
~
 			String fieldId = value.substring(0, value.indexOf("%"));
~
@@ -338,9 +337,9 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link=" + dbLinkName);
~
 		go();
~
 		
~
 		String esfFieldName = 
-siteName+".ESF.field";
~
-		HashMap<String,
+siteName.toUpperCase()+".ESF.field";
~
+		Map<String,
  String> esfMap    = 
-getSiteSpecificMap(siteName);
+getSiteSpecificMap(esfFieldName);
~
 		int esfCount = 
-Integer.parseInt(esfMap.get(siteName+".ESF.fields.count"));
+Integer.parseInt(esfMap.get(siteName.toUpperCase()+".ESF.fields.count"));
~
 		boolean testResult = true;
~
 		String oldInputField = "";
~
 		
~
@@ -407,10 +406,10 @@ public class AdvancedSearchPage extends BaseUI {
 		return true;
~
 	}
~
 	public boolean hasDateRangeOptions(String siteName, String dbLinkName) {
~
 		String pdFieldName = 
-siteName+".PD.field";
+siteName.toUpperCase()+".PD.field";
~
 		String dateRangeFormName = 
-siteName
+siteName.toUpperCase()
  +".PD.dateRangeForm";
~
 		Map<String, String> dateRangeFieldMap = getSiteSpecificMap(pdFieldName);
~
 		Map<String, String> dateRangeGeneralMap = 
-getSiteSpecificMap(siteName);
+getSiteSpecificMap(siteName.toUpperCase());
~
 		goToDBSpecificPage("link="+dbLinkName);
~
 		go();
~
 		String[] options = selenium.getSelectOptions("select_" + getDateRangeDropDownId(dateRangeGeneralMap.get(dateRangeFormName)));
~
@@ -455,10 +454,9 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link="+dbLinkName);
~
 		go();
~
 		
~
 		String esfFieldName = 
-siteName+".ESF.field";
+siteName.toUpperCase()+".ESF.field";
~
 		Map<String, String> esfMap = getSiteSpecificMap(esfFieldName);
~
-//
 		int esfCount = 
-Integer.parseInt(esfMap.get(siteName+".ESF.fields.count"));
~
-		int esfCount = esfMap.size();
+Integer.parseInt(esfMap.get(siteName.toUpperCase()+".ESF.fields.count"));
~
 		
~
 		for(int i=1;i<=esfCount;i++){
~
 			String value = esfMap.get(esfFieldName+i);
~
@@ -485,17 +483,18 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link=" + dbLinkName);
~
 		go();
~
 		
~
 		String esfFieldName = 
-siteName
+siteName.toUpperCase()
  + ".ESF.field";
~
 		Map<String, String>
-esfFieldMap    = getSiteSpecificMap(esfFieldName);
~
-		Map<String, String>
  esfTermMap     = 
-getSiteSpecificMap(siteName
+getSiteSpecificMap(siteName.toUpperCase()
  + ".ESF.searchTerm.field");
~
 		
+//HashMap<String, String> esfMap = getSiteSpecificMap(siteName);
~
 		Map<String, String> 
-esfMnemonicMap
+esfMap
  = 
-getSiteSpecificMap(siteName + ".ESF.mnemonic.field");
+getSiteSpecificMap(esfFieldName);
~
+		int esfCount = Integer.parseInt(esfMap.get(siteName.toUpperCase()+".ESF.fields.count"));
~
 		String oldInputField = "";
~
 	
~
 			for(int 
-count=1;
+count = 1;
  count <= 
-esfFieldMap.size();
+esfCount;
  count ++){
~
 				String value = 
-esfFieldMap.get(esfFieldName
+esfMap.get(esfFieldName
  + count);
~
 				String inputFieldId = value.substring(value.indexOf("%") + 
-1 ,value.lastIndexOf("%"));
+1, value.lastIndexOf("%"));
~
 				String searchTerm   = 
-esfTermMap.get(siteName
+esfTermMap.get(siteName.toUpperCase()
  + ".ESF.searchTerm.field" + count);
~
 				String mnemonic = 
-esfMnemonicMap.get(siteName
+esfMap.get(esfFieldName
  + 
-".ESF.mnemonic.field"
+count
  + 
-count);
+"." + "mnemonic");
~
 			go();
~
 			baseSeleniumTest.waitForElement(SUBMIT_BUTTON_LOCATOR); 
~
 			if (selenium.isElementPresent("id=" + oldInputField)){
~
@@ -540,9 +539,9 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link="+dbLinkName);
~
 		go();
~
 		
~
 		String clFieldName = 
-siteName+".CL.field";
+siteName.toUpperCase()+".CL.field";
~
 		Map<String, String> clFieldMap    = getSiteSpecificMap(clFieldName);
~
 		int clCount = 
-clFieldMap.size();
+Integer.parseInt(clFieldMap.get(siteName.toUpperCase()+".CL.fields.count"));
~
 		
~
 		for (int i = 1; i <= clCount; i++) {
~
 			String value = clFieldMap.get(clFieldName + i);
~
@@ -562,9 +561,11 @@ public class AdvancedSearchPage extends BaseUI {
 		goToDBSpecificPage("link=" + dbLinkName);
~
 		go();
~
 		
~
 		String clFieldName = 
-siteName
+siteName.toUpperCase()
  + ".CL.field";
~
 		
-HashMap<String,
+//HashMap<String,
  String> clMap = getSiteSpecificMap(siteName);
~
 		
~
 		
+Map<String, String> clMap    = getSiteSpecificMap(clFieldName);
~
 		int clCount = 
-Integer.parseInt(clMap.get(siteName
+Integer.parseInt(clMap.get(siteName.toUpperCase()
  + ".CL.fields.count"));
~
 		boolean testResult = true;
~
 		String oldInputField = "";
~
 		for(int count = 1; count <= clCount; count ++){
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DataAndReportsPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DataAndReportsPage.java
index 74f2c9e..fe34f6d 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DataAndReportsPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DataAndReportsPage.java
@@ -27,7 +27,10 @@ public class DataAndReportsPage extends BaseUI
 	
~
 	public void search(String searchTerm) {
~
 		selenium.type("css=#queryTermField", searchTerm);
~
 		
-baseSeleniumTest.clickOnAndWaitForPageLoad("css=#searchToResultPage");
+selenium.click("css=#searchToResultPage");
~
+		selenium.chooseOkOnNextConfirmation();
~
+		baseSeleniumTest.waitForPageToLoad();
~
+		//baseSeleniumTest.clickOnAndWaitForPageLoad("css=#searchToResultPage");
~
 	}
~
 
~
 	/**
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocView.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocView.java
index 1796896..d9f1450 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocView.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocView.java
@@ -667,6 +667,7 @@ public class DocView extends BaseUI
 		String browse_this_issue_text_locator = "//div[@id='content-wrapper']//h1[text()='Browse this issue']";
~
 		String browse_this_issue_img_locator = "//div[@id='pageMapZone']//img[@id='pageMap']";
~
 		assertFalse("Error in Browse This Issue", selenium.isTextPresent("We seem to have encountered a problem."));
~
 		
~
 		assertTrue(selenium.isElementPresent(browse_this_issue_text_locator));
~
 		assertTrue(selenium.isElementPresent(browse_this_issue_img_locator));	
~
 	}
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocViewIndexFields.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocViewIndexFields.java
index 7de9495..2ad49f7 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocViewIndexFields.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/DocViewIndexFields.java
@@ -75,10 +75,10 @@ public class DocViewIndexFields extends BaseUI {
 	 */
~
 	public void verifyIndexFields(String siteName, String dbLink) {
~
 		String groupName = "IF";
~
 		String prefix = 
-siteName
+siteName.toUpperCase()
  + "." + groupName;
~
 		String fieldName = prefix +".field";
~
 		String fieldCount = prefix + ".fields.count";
~
 		HashMap<String, String> indexFieldMapByDB = 
-Utils.getGroupLevelMap(siteName,
+Utils.getGroupLevelMap(siteName.toUpperCase(),
  groupName, DocView.DOCVIEW_PROP);
~
 		String  advsearchDbLink = "link=" + dbLink;		
~
 
~
 		int indexCount = Integer.parseInt(indexFieldMapByDB.get(fieldCount));
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/ResultsPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/ResultsPage.java
index a615e29..7af9c16 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/ResultsPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/ResultsPage.java
@@ -744,10 +744,10 @@ public class ResultsPage extends BaseUI {
 	 * @return whether the filter exists
~
 	 */
~
 	public boolean isDBFiltersExists(String siteName, String groupName) {
~
 		String prefix = 
-siteName+"."+groupName;
+siteName.toUpperCase()+"."+groupName;
~
 		String fieldName = prefix +".field";
~
 		String fieldCount = prefix+".fields.count";
~
 		HashMap<String, String> resultsFilterMap = 
-Utils.getGroupLevelMap(siteName,
+Utils.getGroupLevelMap(siteName.toUpperCase(),
  groupName, RESULTS_PAGE_PROP);
~
 		List<String> resultFiltersFromSearch = Arrays.asList(getResultsFilters());
~
 		int filtersCount = Integer.parseInt(resultsFilterMap.get(fieldCount));
~
 		for(int i=1; i<=filtersCount; i++) {
~
@@ -768,10 +768,10 @@ public class ResultsPage extends BaseUI {
 	 * @return whether the filter exists
~
 	 */
~
 	public boolean isDBFiltersNotExists(String siteName, String groupName) {
~
 		String prefix = 
-siteName+"."+groupName;
+siteName.toUpperCase()+"."+groupName;
~
 		String fieldName = prefix +".field";
~
 		String fieldCount = prefix+".fields.count";
~
 		HashMap<String, String> resultsFilterMap = 
-Utils.getGroupLevelMap(siteName,
+Utils.getGroupLevelMap(siteName.toUpperCase(),
  groupName, RESULTS_PAGE_PROP);
~
 		List<String> resultFiltersFromSearch = Arrays.asList(getResultsFilters());
~
 		int filtersCount = Integer.parseInt(resultsFilterMap.get(fieldCount));
~
 		for(int i=1; i<=filtersCount; i++) {
~
diff --git a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/SelectedItemsPage.java b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/SelectedItemsPage.java
index 698e1ba..3d71bea 100644
--- a/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/SelectedItemsPage.java
+++ b/PQAFHelpers/pqis/src/main/java/com/caucus/apps/onesearch/pqaf/s1/pages/SelectedItemsPage.java
@@ -314,7 +314,7 @@ public class SelectedItemsPage extends BaseUI {
 	}
~
 	
~
 	public void openResultByTitleLink(int index) {
~
 		String key = "//*[@id=\"mldcopy" + index + 
-"\"]/a";
+"\"]/h3/a";
~
 		selenium.click(key);
~
 		selenium.waitForPageToLoad("60000");
~
 	}
~
diff --git a/Regression/build.xml b/Regression/build.xml
index e36999f..60da834 100644
--- a/Regression/build.xml
+++ b/Regression/build.xml
@@ -222,4 +222,25 @@
         </java>
~
     </target>
~
 
~
     
+<target name="execute-selenium-tests-with-url-32bit" depends="copy-resources, compile-selenium">
~
+        <java dir="${basedir}" fork="true" maxmemory="1500m" classpathref="compile.path.id" classname="com.caucus.testing.Main">
~
+            <jvmarg value="-XX:MaxPermSize=100m" />
~
+            <jvmarg value="-Doverrides=${overrides}" />
~
+            <jvmarg value="-D__environment=${target.environment}" />
~
+            <jvmarg value="-Dtest.packages=${test.packages}" />
~
+            <jvmarg value="-Dtest.types=${test.types}" />
~
+            <jvmarg value="-Dpersist=${persist}" />
~
+            <jvmarg value="-DaddToQaLogs=${addToQaLogs}" />
~
+            <jvmarg value="-Dbatch.name=${batch.name}" />
~
+            <jvmarg value="-DuseTestStatusFromSvc=true" />
~
+            <jvmarg value="-Dqa_svc.url=http://pqqa101v:8080/dashboard/qa_svc.php" />
~
+            <jvmarg value="-Dbatch_run_id=${batch_run_id}" />
~
+            <jvmarg value="-Donesearch.url=${onesearch.url}" />
~
+            <!-- TestRail settings -->
~
+            <jvmarg value="-Dtestrail.project=${testrail.project}" />
~
+            <jvmarg value="-Dtestrail.suite=${testrail.suite}" />
~
+            <jvmarg value="-Dtestrail.planid=${testrail.planid}" />
~
+        </java>
~
+    </target>
 
~
 
~
 </project>
~
diff --git a/Regression/linuxScripts/runRegressionTests b/Regression/linuxScripts/runRegressionTests
index 1521f86..0ad7430 100755
--- a/Regression/linuxScripts/runRegressionTests
+++ b/Regression/linuxScripts/runRegressionTests
@@ -20,7 +20,7 @@
 #  Charles Roth, 6/28/2013
~
 #------------------------------------------------------------------------------
~
 
~
-environment="_PREPROD"
+environment="_2014R5"
~
 
~
 url="$1"
~
 if test "x$url" = "x"; then
~
@@ -52,12 +52,14 @@ rm -f test/reports/*
 #---Regardless of where we run this command from, start firefox on the main console!
~
 export DISPLAY=":0"
~
 
~
+set -x
~
 ant -file build.xml  \
~
    -Denv.M2_HOME=/usr/share/maven \
~
    -Dlocal.ivy.settings.file="../../ivy/settings/aa1/ivysettings-desktop.xml" \
~
    -Donesearch.url="$url" \
~
    -Dtest.packages="$package" \
~
    -Doverrides=true \
~
    
+-Dtest.types=smoke,acceptance,workflow,fastr \
~
    -Dtarget.environment=$environment \
~
     total-clean 
-execute-selenium-tests-with-url
+execute-selenium-tests-with-url-32bit
~
 
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication.java
index 841d333..0486f2d 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication.java
@@ -76,7 +76,8 @@ public class Publication extends AcademicBaseSeleniumTest
 	// But for now, where that doesn't exist, I've settled for people.  So if a test breaks, at least
~
 	// we'll have a clue as to whom to talk to.
~
 
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
 
~
 	@Testing// Chris Pall.
~
 	public void testPublicationIssuePage() throws Exception {
~
 		loginAndGoToPublicationBrowse();
~
 		selenium.type("id=pubSearchTerm", "Diabetes Care");
~
@@ -707,18 +708,20 @@ public class Publication extends AcademicBaseSeleniumTest
 		assertTrue("Unable to verify that figures and tables is displaying edition in the publication information.", selenium.isTextPresent("Earth Talk, English ed."));		
~
 	}
~
 
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
 
~
 	@Testing(stories={"PQ-7882"}, testDescription="Verify that publication edition information is displayed properly in data and reports.")	
~
 	public void verifyPublicationEditionInformationOnDataAndReportsPage() {
~
 		loginPage.login("sprinttest", "welcome|88769", null);					
~
 		
+selenium.windowMaximize();
 
~
 		dataAndReportsPage.go();
~
 		dataAndReportsPage.search("pubid(11561)");	
~
 		
~
 		assertTrue("Unable to verify that data and reports is displaying edition in the publication information.", selenium.isTextPresent("New York Times, Late Edition (East Coast)"));		
~
 	}
~
 
~
 	@Test @Testing(stories={"PQ-6729"},testDescription="Log search type for British Periodicals")
~
 	public void shouldLogSearchType_WhenSearchBP_WithEmptySearchString() {
~
 		loginPage.login();	
~
 
~
 		databaseSelection.selectDatabaseByMoniker(DB_BRITISH_PERIODICALS, this);
~
 		publicationBrowse.open();
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication2.java
index a2f66c7..79e5d11 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/browse/Publication2.java
@@ -9,58 +9,92 @@ import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
 import com.caucus.apps.onesearch.pqaf.Testing;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.SearchResult;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.BasicSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DataAndReportsPage;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationBrowsePage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationInformationPage;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationIssuePage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.SelectedItemsPage;
~
 
~
 @SeleniumConfig(version = "Two", settings = {"default.userpw=seleniumtest|welcome"})
~
 @Testing(componentNames={"publication"})
~
 public class Publication2 extends AcademicBaseSeleniumTest {
~
 	@AddPageToTest LoginPage loginPage;
~
 	
-@Test @Testing
~
-    public void testPublicationBrowseIssues() {
~
-        loginPage.login()
~
-        .click(By.linkText("Publications"), null)
~
-        .selectOptionByText(By.id("itemsPerPage"), "100")
~
-        .click(By.id("submit_6"), null)
~
-        .click(By.linkText("ABNF Journal"), null)
~
-        .click(By.linkText("2009"), null)
~
-        .click(By.linkText("Fall 2009; Vol. 20 (4)"), null)
~
-        .validateTextPresent("Browse Issue", "The text, Browse Issue isn't there!")
~
-        .validateTextPresent("0 Recent searches", "The text, 0 Recent searches isn't there!");
~
-    }
+@AddPageToTest DataAndReportsPage dataandReportsPage;
~
+	@AddPageToTest PublicationInformationPage pubInformationPage;
 
~
 
~
 	@Test 
+@Testing
~
+	public void testPublicationBrowseIssues() {
~
+		loginPage.login()
~
+		.click(By.linkText("Publications"), null)
~
+		.selectOptionByText(By.id("itemsPerPage"), "100")
~
+		.click(By.id("submit_6"), null)
~
+		.click(By.linkText("ABNF Journal"), null)
~
+		.click(By.linkText("2009"), null)
~
+		.click(By.linkText("Fall 2009; Vol. 20 (4)"), null)
~
+		.validateTextPresent("Browse Issue", "The text, Browse Issue isn't there!")
~
+		.validateTextPresent("0 Recent searches", "The text, 0 Recent searches isn't there!");
~
+	}
~
+
~
+	@Test
  @Testing(stories={"PQ-7882"}, testDescription="Verify that publication edition information is displayed properly in selected items test.")
~
 	public void testForSelectedItems() {
~
 		loginPage.login()
~
 		.navigateTo(BasicSearchPage.class)
~
 		.search("an(2491458)")
~
 		.check(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_CHK_BOX))
~
 		.navigateTo(SelectedItemsPage.class)
~
 		.validateTextPresent("Wall Street Journal")
~
 		.validateTextPresent(", Eastern edition")
~
 		;
~
 	}
~
 
~
 	@SeleniumConfig(version = "Two", settings = { "default.userpw=ebrarytest|welcome" })
~
 	@Test@Testing(stories = { "PQ-22223" }, testDescription = "search within should use pub id", ignoredStatus = "")
~
 	public void shouldFindResultsUsingSearchWithin_OnPublicationWithEdition() {
~
 		loginPage.login("nationalnewspremier")
~
 		.navigateTo(PublicationBrowsePage.class)
~
 		.search("Wall Street Journal")
~
 		.click(css("a[href^='/publication/10482']"), PublicationPage.class)
~
 		.click(By.linkText("2009"), null)
~
 		.click(By.linkText("November"), null)
~
 		.click(By.linkText("Nov 11, 2009"), PublicationIssuePage.class)
~
 		.validateTextPresent("Wall Street Journal")
~
 		.validateTextPresent(", Eastern edition")
~
 		.setText(css("#searchTerm"), "amplifications")
~
 		.click(css(PublicationIssuePage.LOC_BTN_SEARCH_WITHIN), SearchResult.class)
~
 		.validatePresent(css("a[title='Corrections & Amplifications']"))
~
 		;
~
 	}
~
 
~
 	
+@SeleniumConfig(version = "Two", settings = { "default.userpw=sprinttest|welcome|88769" })
~
+	@Test @Testing(stories={"PQ-7882"}, testDescription="Verify that publication edition information is displayed properly in data and reports.")	
~
+	public void verifyPublicationEditionInformationOnDataAndReportsPage() {
~
+
~
+		loginPage
~
+		.login()
~
+		.navigateTo(DataAndReportsPage.class)
~
+		.search("pubid(11561)")
~
+		.validateTextNotContains(css("#mlditem1"), "New York Times, Late Edition (East Coast)");
~
+	}
~
+
~
+
~
+	@Test @Testing
~
+	public void testPublicationIssuePage(){
~
+		loginPage
~
+		.login()
~
+		.navigateTo(PublicationBrowsePage.class)
~
+		.search("Diabetes Care")
~
+		.click(css("span.hit"), null)
~
+
~
+
~
+		.click(css(PublicationInformationPage.LOC_LNK_VIEWMOSTRECENTISSUE),SearchResultPage.class)
~
+		.click(css(PublicationIssuePage.LOC_TXT_SEARCH_WITHIN), null)
~
+		.click(css(PublicationIssuePage.LOC_BTN_SEARCH_WITHIN), null);
~
+		
~
+		//searchEngineVerification.assertSearchEngineCalls(0, this.getClass().getName()+"."+getTestClassRule().getMethodName());
~
+	}
 
~
 
~
 
~
 }
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/ebrary/EbraryDocViewWidget.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/ebrary/EbraryDocViewWidget.java
index 4c7ccce..c9cf5a5 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/ebrary/EbraryDocViewWidget.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/ebrary/EbraryDocViewWidget.java
@@ -286,8 +286,8 @@ public class EbraryDocViewWidget extends AcademicBaseSeleniumTest {
 		loginPage
~
 		.login()
~
 		.navigateTo(FigTablesSearchPage.class)
~
 		
-.search("Fig. 2. A schematic representation of a typical model for a beam with edge delamination.")
+.search("an(6784009)")
~
 		.click(getNthSubElement(1, FigTablesSearchResult.LOC_BASE, 
-FigTablesSearchResult.LOC_TTL),
+SearchResult.LOC_TTL),
  DocViewPage.class)
~
 		.click(By.linkText("Citation"), DocViewPage.class);
~
 		validateEbraryResults();
~
 	}
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/fastr/ReplaceSearchParamFilterTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/fastr/ReplaceSearchParamFilterTest.java
index 6af39c0..a41fa1b 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/fastr/ReplaceSearchParamFilterTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/fastr/ReplaceSearchParamFilterTest.java
@@ -292,7 +292,7 @@ public class ReplaceSearchParamFilterTest extends AcademicBaseSeleniumTest
 	@Testing(stories = { "PQ-24397" }, 
~
 	testDescription = "Searching in COS Papers Invited Advanced Search page using the event date box continues to work.")
~
 	public void validatePapersInvitedSearchWorksWhenEventDateChecked(){
~
 		goToAdvancedPageAndSearch("papersinvited", 
-"stress")
+"paper")
~
 			.uncheck(css(AdvancedSearchPage.LOC_CHK_CONFERENCES))
~
 			.uncheck(css(AdvancedSearchPage.LOC_CHK_SPECIAL_ISSUES))
~
 			.uncheck(css(AdvancedSearchPage.LOC_CHK_INCLUDE_UNDEFINED_ISSUES_1))
~
@@ -397,6 +397,22 @@ public class ReplaceSearchParamFilterTest extends AcademicBaseSeleniumTest
 	}
~
 	
~
 	@Test @FASTR
~
 	
+@Testing(stories = { "PQ-23919" }, testDescription = "Running a combined search from the saved searches tab - using upper combined option, 2 searches.")
~
+	public void shouldVerifyRunningCombinedSavedSearchFromTwoSearchTermsWorksUpper() {
~
+		doSearch("vacation");
~
+		doSearch("Hawaii");
~
+		basicSearchPage
~
+		.navigateTo(MyResearchSearchesTab.class)
~
+		.check(css(MyResearchSearchesTab.LOC_CHK_SELECTALL))
~
+		.click(css(MyResearchSearchesTab.LOC_BTN_SEARCH_TOP), SearchResultPage.class);
~
+		storeExpectedTitlesAndResultCount(5);
~
+		saveSearch()
~
+		.navigateTo(MyResearchSearchesTab.class)
~
+		.click(css(MyResearchSavedSearch.LOC_LNK_SEARCHEDFOR), SearchResultPage.class);
~
+		validateResults(5);
~
+	}
~
+	
~
+	@Test @FASTR
~
 	@Testing(stories = { "PQ-23919" }, testDescription = "Running a combined search from the saved searches tab - using lower combined option, 2 searches.")
~
 	public void shouldVerifyRunningCombinedSavedSearchFromTwoSearchTermsWorksLower() {
~
 		doSearch("vacation");
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch.java
index 22b6508..ccf32fe 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch.java
@@ -6,6 +6,7 @@ import static org.junit.Assert.fail;
 
~
 import java.util.List;
~
 
~
+import org.junit.Ignore;
~
 import org.junit.Test;
~
 
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
@@ -106,7 +107,7 @@ public class FederatedSearch extends AcademicBaseSeleniumTest {
 		assertFalse(selenium.isElementPresent(EBRARYTAB));
~
 	}
~
 	
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
~
 	@Testing(stories = {"PQ-11294}"}, testDescription="AC - Test that ebrary is not searched within Data & Reports")
~
 	public void shouldSearchInDataAndReports_andNotCreateEbraryTab_onResultsPage(){
~
 		selenium.windowMaximize();
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch2.java
new file mode 100644
index 0000000..034008a
--- /dev/null
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/federatedsearch/FederatedSearch2.java
@@ -0,0 +1,35 @@
+package com.caucus.apps.onesearch.selenium.academic.federatedsearch;
~
~
+import org.junit.Test;
~
~
+import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
+import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
+import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
+import com.caucus.apps.onesearch.pqaf.Testing;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DataAndReportsPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
~
~
+/**
~
+ * @author asengupt
~
+ * @since 14 Nov 2014
~
+ */
~
+@SeleniumConfig(version="Two",settings="default.userpw=ebrarytest|welcome")
~
+public class FederatedSearch2 extends AcademicBaseSeleniumTest{
~
+	
~
+	@AddPageToTest LoginPage loginPage;
~
+	
~
+	private static final String EBRARYTAB = "div#displayNumExtendedResults"; 
~
~
+	@Test
~
+	@Testing(stories = {"PQ-11294}"}, testDescription="AC - Test that ebrary is not searched within Data & Reports")
~
+	public void shouldSearchInDataAndReports_andNotCreateEbraryTab_onResultsPage(){
~
+		loginPage
~
+		.login()
~
+		.navigateTo(DataAndReportsPage.class)
~
+		.search("Google")
~
+		.validateNotPresent(css(EBRARYTAB));
~
+	}
~
+	
~
~
+}
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/LinkToFullTextTests.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/LinkToFullTextTests.java
index cfa8aa8..1734c9e 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/LinkToFullTextTests.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/LinkToFullTextTests.java
@@ -1,5 +1,7 @@
 package com.caucus.apps.onesearch.selenium.academic.linking;
~
 
~
+import org.junit.Test;
~
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
 import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
@@ -7,13 +9,13 @@ import com.caucus.apps.onesearch.pqaf.Testing;
 import com.caucus.apps.onesearch.pqaf.pqis.components.SearchResult;
~
 import com.caucus.apps.onesearch.pqaf.pqis.layers.PreviewLayer;
~
 import com.caucus.apps.onesearch.pqaf.pqis.overlays.SaveToMyResearchOverlay;
~
 import 
-com.caucus.apps.onesearch.pqaf.pqis.pages.*;
+com.caucus.apps.onesearch.pqaf.pqis.pages.BasicSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DocViewPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.BlueBar;
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.SidePanel;
~
 import com.caucus.apps.onesearch.pqaf.pqis.tabs.MyResearchDocumentsTab;
~
 import com.caucus.apps.onesearch.pqaf.pqis.tabs.MyResearchSignInTab;
~
-import org.junit.Test;
~
-import org.openqa.selenium.By;
~
 
~
 /**
~
  * Created by snair1 on 9/30/2014.
~
@@ -65,18 +67,21 @@ public class LinkToFullTextTests extends AcademicBaseSeleniumTest {
         ;
~
     }
~
 
~
     
+@SeleniumConfig(version = "Two", settings = "default.userpw=seleniumtest|welcome")
~
     @Test
~
     @Testing(stories={"PQ-26311"}, testDescription="AC2, AC4, AC5")
~
     public void testPreviewLinkoutIconDisplaysAndWorks() {
~
     	
+driver.manage().window().maximize();
~
         loginPage
~
         .login()
~
         .navigateTo(BasicSearchPage.class)
~
         .search("AN(2030897 OR 2045230 OR 2190509 OR 2192160 OR 2015368 OR 21345047)")
~
         .hoverOver(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_LNK_PREVIEW), PreviewLayer.class)
~
         
+.hoverOver(css(PreviewLayer.LOC_LNK_CITATION_ABSTRACT), DocViewPage.class)
~
         .validateTextContains(css(PreviewLayer.LOC_PARENT), "Link to full text")
~
         .validatePresent(css(PreviewLayer.LOC_LNK_LINKTOFULLTEXT))
~
         .click(css(PreviewLayer.LOC_LNK_LINKTOFULLTEXT), null)
~
         
-.waitForWindow(".*eTheses Repository.*",
+.waitForWindow(".*Caucus.*",
  50)
~
         ;
~
     }
~
 
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/OutboundLinkDisclaimerTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/OutboundLinkDisclaimerTest.java
index 8e2cc3f..3ba09ba 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/OutboundLinkDisclaimerTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/linking/OutboundLinkDisclaimerTest.java
@@ -13,7 +13,7 @@ import org.junit.Before;
 import org.junit.Test;
~
 import org.openqa.selenium.By;
~
 
~
 @SeleniumConfig(version = "Two", settings = 
-{"default.userpw=4linkingbv|welcome"})
+{"default.userpw=cristina|welcome"})
~
 public class OutboundLinkDisclaimerTest extends AcademicBaseSeleniumTest {
~
 
~
     @AddPageToTest LoginPage loginPage;
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/MyResearch2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/MyResearch2.java
index ba94a7a..371aabe 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/MyResearch2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/MyResearch2.java
@@ -46,8 +46,10 @@ public class MyResearch2 extends AcademicBaseSeleniumTest {
         .navigateTo(BasicSearchPage.class)
~
         .search("an(17521335)")
~
         .checkAndWait(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_CHK_BOX))
~
         
+.waitForAjax()
~
         .click(css(BlueBar.LOC_LNK_SAVETOMYRESEARCH), SaveToMyResearchOverlay.class)
~
         .click(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), 
-null)
+SearchResultPage.class)
~
+        .waitForAjax()
~
         .navigateTo(MyResearchDocumentsTab.class)
~
         .waitForDocumentsToAppear(1)
~
         .click(css(BlueBar.LOC_LNK_PRINT), PrintOverlay.class)
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/SmokeTests.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/SmokeTests.java
index 4cdf8c2..23c9002 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/SmokeTests.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/myresearch/SmokeTests.java
@@ -1,10 +1,15 @@
 package com.caucus.apps.onesearch.selenium.academic.myresearch;
~
 
~
-import com.caucus.apps.onesearch.pqaf.*;
~
 import org.junit.Ignore;
~
 import org.junit.Test;
~
 import org.openqa.selenium.support.ui.ExpectedConditions;
~
 
~
+import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
+import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
+import com.caucus.apps.onesearch.pqaf.PqafBaseUI;
~
+import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
+import com.caucus.apps.onesearch.pqaf.Smoke;
~
+import com.caucus.apps.onesearch.pqaf.Testing;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.MyResearchAlert;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.MyResearchDocument;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.MyResearchRssFeed;
~
@@ -139,16 +144,16 @@ public class SmokeTests extends AcademicBaseSeleniumTest {
         .click(css(BlueBar.LOC_LNK_SAVETOMYRESEARCH), SaveToMyResearchOverlay.class)
~
         .click(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), SearchResultPage.class)
~
         .waitForElement(css("span.icon_savedtomyresearch"), true, 5, 1)
~
         
+.waitForAjax()
 
~
         // give the service some time to add the document.
~
         .navigateTo(BasicSearchPage.class)
~
         .search("test2")
~
         
+.waitForAjax()
 
~
         .navigateTo(MyResearchDocumentsTab.class)
~
         .check(getNthSubElement(1, MyResearchDocument.LOC_BASE, MyResearchDocument.LOC_CHK_BOX))
~
         .click(getNthSubElement(1, MyResearchDocument.LOC_BASE, MyResearchDocument.LOC_LNK_DELETE), DeleteSelectedDocumentsOverlay.class)
~
         .click(css(DeleteSelectedDocumentsOverlay.LOC_BTN_DELETESELECTED), MyResearchDocumentsTab.class)
~
         
+.waitForAjax()
 
~
         .validateTrue(getNumberOfElements(css(MyResearchDocument.LOC_BASE)).equals(0))
~
         ;
~
     }
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/navigation/SelectedItemsPageTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/navigation/SelectedItemsPageTest.java
index 898f226..e7dca7c 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/navigation/SelectedItemsPageTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/navigation/SelectedItemsPageTest.java
@@ -83,7 +83,7 @@ public class SelectedItemsPageTest extends AcademicBaseSeleniumTest {
 		waitForPageToLoad();
~
 		basicSearchPage.search("google search");
~
 		sleepInSeconds(2);
~
 		
-selenium.click("//*[@id=\"mldcopy1\"]/a");
+selenium.click("//*[@id=\"mldcopy1\"]/h3/a");
 
~
 		selenium.waitForPageToLoad("30000");
~
 		assertFalse(selenium.isTextPresent("Back to selected items"));
~
 		assertTrue(selenium.isTextPresent("Document 1 of"));
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/postprocessing/EmailTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/postprocessing/EmailTest.java
index 72b821e..b29258e 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/postprocessing/EmailTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/postprocessing/EmailTest.java
@@ -106,7 +106,7 @@ public class EmailTest extends AcademicBaseSeleniumTest
 	public void shouldSearch_SelectItem_browseIssue_sendEmail() {
~
 		pauseHereDuringDemo();
~
 		loginPage.login("hnpnewyorktimesindex");		
~
 		
-basicSearchPage.search("*");
+basicSearchPage.search("fulltext");
 
~
 		resultsPage.openResultByTitleLink(1);
~
 		waitForPageToLoadExtraTime();
~
 		selenium.click("//a[@id='addFlashPageParametericon_browseissue']");		
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/AAATest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/AAATest.java
index ab706a7..284a4e2 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/AAATest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/AAATest.java
@@ -197,13 +197,13 @@ public class AAATest extends EIMAAndAAATestBase {
 	
~
 	@Test @Testing(stories={"PQ-10186"})
~
 	public void testImageIndexingFieldsPresent_fullTextFlash() {
~
 		assertTrue(verifyImageIndexFieldsPresent_ForFormat(AAA_MONIKER, 
-"TI(MARG)",
+"TI(ITALIAN COASTS)",
  ResultFormats.FlashImage));
~
 
~
 	}
~
 	
~
 	@Test @Testing(stories={"PQ-10186"})
~
 	public void testImageIndexingFieldsPresent_citation() {
~
 		assertTrue(verifyImageIndexFieldsPresent_ForFormat(AAA_MONIKER, 
-"TI(MARG)",
+"TI(ITALIAN COASTS)",
  ResultFormats.Fulltext));
~
 
~
 	}
~
 	 
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/BritishPeriodicalsTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/BritishPeriodicalsTest.java
index 2035a19..8d86950 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/BritishPeriodicalsTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/BritishPeriodicalsTest.java
@@ -259,8 +259,8 @@ public class BritishPeriodicalsTest extends AcademicBaseSeleniumTest
 	//ac2.6
~
 	public void testPublicationSearchPage_Filters() { 
~
 		loginPage
~
 		
-.click(By.id("databaseOpenLayer"), DatabaseSelectionLayer.class)
~
-		.gotoProductPageByMoniker(BRITISHPERIODICALS_MONIKER, BasicSearchPage.class)
+.andReturn(ProductPage.class)
~
+        .navigateToProductByMoniker(BRITISHPERIODICALS_MONIKER)
~
 		.click(By.linkText("Publications"), PublicationBrowsePage.class)
~
 		.validatePresent(css("a#sourcetypenav-header"))
~
 		.validatePresent(css("a[title='Expand Publication subject']"))
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/EIUTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/EIUTest.java
index 6c75c36..787fe32 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/EIUTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/EIUTest.java
@@ -107,7 +107,7 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.validatePresent(css(FigTablesSearchResult.LOC_BASE + " " + FigTablesSearchResult.LOC_IMG + "[alt*='View record for ']"))
~
 		.validatePresent(css(FigTablesSearchResult.LOC_BASE + " " + FigTablesSearchResult.LOC_FROM_TITLE))
~
 		.validatePresent(css(FigTablesSearchResult.LOC_BASE + " " + FigTablesSearchResult.LOC_LNK_PREVIEW))
~
 		
-.validateNotPresent(css(FigTablesSearchResult.LOC_BASE
+//.validateNotPresent(css(FigTablesSearchResult.LOC_BASE
  + " " + FigTablesSearchResult.LOC_LNK_FULL_SIZE_IMAGE))
~
 		.hoverOver(getNthSubElement(1, FigTablesSearchResult.LOC_BASE, FigTablesSearchResult.LOC_LNK_PREVIEW), PreviewLayer.class)
~
 		.validatePresent(css(PreviewLayer.LOC_LNK_CITATION))
~
 		.validatePresent(css(PreviewLayer.LOC_TTL))
~
@@ -205,13 +205,13 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.validateTextContains(getNthSubElement(1, MyResearchDocument.LOC_BASE, MyResearchFiguresTablesTab.LOC_TXT_DESCRIPTION), "Figure")
~
 		.validateTextContains(getNthSubElement(2, MyResearchDocument.LOC_BASE, MyResearchFiguresTablesTab.LOC_TXT_DESCRIPTION), "Table")
~
 		.click(css(MyResearchDocument.LOC_BASE + " " + MyResearchFiguresTablesTab.LOC_LNK_TABLE_IMG),DocViewPage.class)
~
 		
-.validateTextPresent("Full Size Image")
+.validateTextPresent("Image")
~
 		;
~
 
~
 		myResearchFiguresTablesTab
~
 		.navigateToProductByMoniker(EIU_MONIKER)
~
 		.click(css(MyResearchDocument.LOC_BASE + " " + MyResearchDocument.LOC_TTL),DocViewPage.class)
~
 		
-.validateTextPresent("Full Size Image")
+.validateTextPresent("Image")
~
 		;
~
 	}
~
 
~
@@ -687,7 +687,7 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.selectOptionByValue(css(FigTablesSearchPage.LOC_SEL_KEYFIELDS), "issn")
~
 		.selectOptionByValue(css(FigTablesSearchPage.LOC_SEL_KEYFIELDS), "pub")
~
 		.validateTextNotPresent("Figure/table types to include:")
~
 		.validateNotPresent(css(FigTablesSearchPage.LOC_CHK_FULL_SIZE_IMAGES), "Full 
-size images
+Size Images
  checkbox displayed on figures and tables search page")
~
 		.validatePresent(css(FigTablesSearchPage.LOC_CHK_FIGURES_LIMIT))
~
 		.validatePresent(css(FigTablesSearchPage.LOC_CHK_TABLES_LIMIT))
~
 		.selectOptionByValue(css(FigTablesSearchPage.LOC_SEL_PUBLICATION_DATES), "ALL_DATES")
~
@@ -785,7 +785,7 @@ public class EIUTest extends AcademicBaseSeleniumTest
 	}
~
 	
~
 	@Test
~
 	@Testing(stories = {"PQ-25323"}, testDescription = "test 
-full size image
+Full Size Image
  page")
~
 	public void testFullSizeImagePage() {
~
 		HashMap<String, String> map = Utils.getGroupLevelMap("EIU", "CR", "Docview.properties");		
~
 		String fields[] = map.values().toArray(new String[0]);
~
@@ -793,7 +793,7 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.navigateToProductByMoniker(EIU_MONIKER)
~
 		.search("report")
~
 		.click(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_LNK_PINKYNAIL_FIGURE), DocViewPage.class)
~
 		
-.validateTextPresent("Full Size Image")
+.validateTextPresent("Image")
~
 		.validateTextContains(css(DocViewPage.LOC_TXT_IMAGE_SEQUENCE), "Figure")
~
 		.validateTextContains(css(DocViewPage.LOC_TXT_CAPTION_SEQUENCE), "Figure")
~
 		.validateNotPresent(css(DocViewPage.LOC_LNK_SPREADSHEET))
~
@@ -853,27 +853,28 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.validateTextPresent("Document includes*")
~
 		.validateTextContains(css("div.no_wrap"), "(?s)Figure \\d.+")
~
 		.click(css("img[alt^='View record for']"), DocViewPage.class)
~
 		
-.validateTextPresent("Full Size Image");
+.validateTextPresent("Image");
~
 
~
 		productPage
~
 		.navigateToProductByMoniker(EIU_MONIKER)
~
 		.search("table")
~
 		
-.click(getNthSubElement(1,
+.click(getNthSubElement(2,
  SearchResult.LOC_BASE, SearchResult.LOC_LNK_CITATION), DocViewPage.class)
~
 		//If the next step fails it is likely to be due to changes in data, changing the result opened to
~
 		//one which has a table as the first record should fix this issues
~
 		
-.validateText(css("div.no_wrap"), "(?s)Table
+.validateText(css("div.no_wrap"),"(?s)Table
  \\d.+")
~
 		.validatePresent(css("img[alt^='View record for']"))
~
 		.validatePresent(css("a[class$='fullsize']"))
~
 		.validatePresent(css("a[class$='excel']"))
~
 		.click(css("img[alt^='View record for']"), DocViewPage.class)
~
 		
-.validateTextPresent("Full Size Image");
+.validateTextPresent("Image");
~
 		productPage
~
 		.navigateToProductByMoniker(EIU_MONIKER)
~
 		.search("table")
~
 		.click(getNthSubElement(2, SearchResult.LOC_BASE, SearchResult.LOC_LNK_CITATION), DocViewPage.class)
~
 		.click(css("a[class$='fullsize']"), DocViewPage.class)
~
 		.validateTextPresent("Full Size Image")
~
         ;
~
~
 	}
~
 	
~
 	@Test
~
@@ -898,7 +899,7 @@ public class EIUTest extends AcademicBaseSeleniumTest
 		.navigateToProductByMoniker(EIU_MONIKER)
~
 		.search("report")
~
 		.validatePresent(css("span[class*='titleAuthorETC']"))
~
 		
-.click(getNthSubElement(2,
+.click(getNthSubElement(1,
  SearchResult.LOC_BASE, SearchResult.LOC_LNK_CITATION), DocViewPage.class)
~
 		.validateTrue(Arrays.asList(docViewPage.getIndexingFields()).containsAll(Arrays.asList(fields)));
~
 		
~
 		docViewPage
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOAndPIOTestBase.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOAndPIOTestBase.java
index 7fc9c5a..7d7c331 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOAndPIOTestBase.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOAndPIOTestBase.java
@@ -149,6 +149,7 @@ public abstract class PAOAndPIOTestBase extends AcademicBaseSeleniumTest {
 	}
~
 
~
 	public void checkForJournalTitleIssueVolume(String dbLinkName) throws InterruptedException {
~
 		
+selenium.windowMaximize();
~
 		selenium.click("//a[@id='listLink']");
~
 		selenium.click("link="+dbLinkName);	
~
 		selenium.waitForPageToLoad("30000");
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest.java
index ab4306d..d35bb99 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest.java
@@ -1,23 +1,32 @@
 package com.caucus.apps.onesearch.selenium.academic.products;
~
 
~
 
~
 import 
-com.caucus.apps.onesearch.pqaf.AddPageToTest;
+static org.junit.Assert.assertEquals;
~
 import 
-com.caucus.apps.onesearch.pqaf.SeleniumConfig;
+static org.junit.Assert.assertFalse;
~
 import 
-com.caucus.apps.onesearch.pqaf.Testing;
+static org.junit.Assert.assertNotNull;
~
 import 
-com.caucus.apps.onesearch.pqaf.Utils;
+static org.junit.Assert.assertNull;
~
 import 
-com.caucus.apps.onesearch.pqaf.s1.pages.*;
~
-import com.caucus.apps.onesearch.pqaf.s1.pages.ResultsPage.ResultFormats;
~
-import com.caucus.apps.onesearch.pqaf.utils.AlphanumComparator;
~
-import org.junit.Before;
~
-import org.junit.Ignore;
~
-import org.junit.Test;
+static org.junit.Assert.assertTrue;
~
 
~
 import java.util.ArrayList;
~
 import java.util.Collections;
~
 import java.util.HashMap;
~
 import java.util.List;
~
 
~
 import 
-static org.junit.Assert.*;
+org.junit.Before;
~
+import org.junit.Ignore;
~
+import org.junit.Test;
~
~
+import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
+import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
+import com.caucus.apps.onesearch.pqaf.Testing;
~
+import com.caucus.apps.onesearch.pqaf.Utils;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.AdvancedSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.DatabaseSelection;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.DocView;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.LoginPage;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.PublicationBrowsePage;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.ResultsPage.ResultFormats;
~
+import com.caucus.apps.onesearch.pqaf.utils.AlphanumComparator;
~
 
~
 @SeleniumConfig(settings = {"default.userpw=challprem|gocontent"})
~
 public class PAOTest extends PAOAndPIOTestBase {
~
@@ -392,7 +401,7 @@ public class PAOTest extends PAOAndPIOTestBase {
 	}
~
 	
~
 	
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
~
 	public void testJournalTitleIssueFromIndexFields() throws InterruptedException {
~
 		checkForJournalTitleIssueVolume(PAO_DB_LINK_NAME);
~
 	}
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest2.java
index 9e485c2..f1b0dc1 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PAOTest2.java
@@ -2,6 +2,7 @@ package com.caucus.apps.onesearch.selenium.academic.products;
 
~
 import org.junit.Before;
~
 import org.junit.Test;
~
+import org.openqa.selenium.By;
~
 
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
@@ -10,12 +11,15 @@ import com.caucus.apps.onesearch.pqaf.Testing;
 import com.caucus.apps.onesearch.pqaf.pqis.components.RecentSearch;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.Search;
~
 import com.caucus.apps.onesearch.pqaf.pqis.layers.AdvancedLinkLayer;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DocViewPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.LookupCitationPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationInformationPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.RecentSearchesPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.NavigationLinks;
~
+import com.caucus.apps.onesearch.pqaf.pqis.partial.SubjectArea;
~
 
~
 /**
~
  * Selenium 2 PQAF interpretation of {@link PAOTest}
~
@@ -26,7 +30,10 @@ import com.caucus.apps.onesearch.pqaf.pqis.partial.NavigationLinks;
 public class PAOTest2 extends AcademicBaseSeleniumTest {
~
     @AddPageToTest LoginPage loginPage;
~
     @AddPageToTest ProductPage productPage;
~
 	
+@AddPageToTest SubjectArea subjectArea;
~
+	@AddPageToTest SearchResultPage searchresultsPage;
~
+	@AddPageToTest DocViewPage docviewPage;
~
+	@AddPageToTest PublicationInformationPage publicationInformationPage;
~
     @Before
~
     public void before() {
~
         loginPage.login();
~
@@ -46,4 +53,52 @@ public class PAOTest2 extends AcademicBaseSeleniumTest {
         .validateText(getNthSubElement(1, RecentSearch.LOC_BASE, RecentSearch.LOC_LNK_SEARCH), "puball\\(New Leader\\)")
~
         ;
~
     }
~
     
~
     
+@Test	
~
+	public void testJournalTitleIssueFromIndexFields(){
~
+		loginPage
~
+		.login();
~
+		subjectArea.gotoListView()
~
+		.click(css("div.databaseDetails ul.bullet li a[href*='pao']"), null);
~
+		productPage
~
+		.search("ui(18492415)");
~
+		Integer resultsCount = searchresultsPage.getNumberOfResults();
~
+		searchresultsPage
~
+		.validateTrue(!resultsCount.equals(null));
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation")
~
+		.validateTextPresent("New Leader");
~
+		docviewPage
~
+		.clickLateralSearchInField("Publication title", 1, SearchResultPage.class);
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);
~
+		productPage
~
+		.navigateToProductByMoniker("pao");
~
+		productPage
~
+		.search("ui(18492415)");
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation");
~
+		docviewPage
~
+		.validateTextPresent("39")
~
+		
~
+		.click(By.linkText("39"), null);
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);
~
+		
~
+		productPage
~
+		.navigateToProductByMoniker("pao");
~
+		productPage
~
+		.search("ui(18492415)");
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation");
~
+		docviewPage
~
+		.validateTextPresent("51")
~
+		.click(By.linkText("51"), null);
~
+		
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);	
~
+	
~
~
+	}
~
~
 }
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest.java
index b76d425..9a10e3e 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest.java
@@ -1,16 +1,26 @@
 package com.caucus.apps.onesearch.selenium.academic.products;
~
 
~
+import static org.junit.Assert.assertEquals;
~
+import static org.junit.Assert.assertFalse;
~
+import static org.junit.Assert.assertNotNull;
~
+import static org.junit.Assert.assertNull;
~
+import static org.junit.Assert.assertTrue;
~
~
+import java.util.HashMap;
~
~
+import org.junit.Ignore;
~
+import org.junit.Test;
~
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
 import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
 import com.caucus.apps.onesearch.pqaf.Testing;
~
 import com.caucus.apps.onesearch.pqaf.Utils;
~
 import 
-com.caucus.apps.onesearch.pqaf.s1.pages.*;
+com.caucus.apps.onesearch.pqaf.s1.pages.AdvancedSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.DatabaseSelection;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.DocView;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.LoginPage;
~
+import com.caucus.apps.onesearch.pqaf.s1.pages.PublicationBrowsePage;
~
 import com.caucus.apps.onesearch.pqaf.s1.pages.ResultsPage.ResultFormats;
~
-import org.junit.Test;
~
~
-import java.util.HashMap;
~
~
-import static org.junit.Assert.*;
~
 
~
 /**
~
  * @author Murali Jampani
~
@@ -193,7 +203,7 @@ public class PIOTest extends PAOAndPIOTestBase {
 	}
~
 	
~
 
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
 	
~
 	public void testIndexFieldsforPIO() throws InterruptedException {
~
 		loginPage.login();
~
 		checkForJournalTitleIssueVolume(PIO_DB_LINK_NAME);
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest2.java
new file mode 100644
index 0000000..64e4c89
--- /dev/null
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PIOTest2.java
@@ -0,0 +1,80 @@
+package com.caucus.apps.onesearch.selenium.academic.products;
~
~
+import org.junit.Test;
~
+import org.openqa.selenium.By;
~
~
+import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
+import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
+import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DocViewPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.PublicationInformationPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.partial.SubjectArea;
~
~
+/**
~
+ * Selenium 2 PQAF interpretation of {@link PIOTest}
~
+ * @author asengupt
~
+ * @since 20 Nov 2014
~
+ */
~
+@SeleniumConfig(version="Two", settings="default.userpw=challprem|gocontent")
~
+public class PIOTest2 extends AcademicBaseSeleniumTest{
~
+	@AddPageToTest LoginPage loginPage;
~
+	@AddPageToTest SubjectArea subjectArea;
~
+	@AddPageToTest ProductPage productPage;
~
+	@AddPageToTest SearchResultPage searchresultsPage;
~
+	@AddPageToTest DocViewPage docviewPage;
~
+	@AddPageToTest PublicationInformationPage publicationInformationPage;
~
~
~
+	@Test	
~
+	public void testIndexFieldsforPIO(){
~
+		loginPage
~
+		.login();
~
+		subjectArea.gotoListView()
~
+		.click(css("div.databaseDetails ul.bullet li a[href*='pio']"), null);
~
+		productPage
~
+		.search("ui(18492415)");
~
+		Integer resultsCount = searchresultsPage.getNumberOfResults();
~
+		searchresultsPage
~
+		.validateTrue(!resultsCount.equals(null));
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation")
~
+		.validateTextPresent("New Leader");
~
+		docviewPage
~
+		.clickLateralSearchInField("Publication title", 1, SearchResultPage.class);
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);
~
+		productPage
~
+		.navigateToProductByMoniker("pio");
~
+		productPage
~
+		.search("ui(18492415)");
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation");
~
+		docviewPage
~
+		.validateTextPresent("39")
~
+		
~
+		.click(By.linkText("39"), null);
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);
~
+		
~
+		productPage
~
+		.navigateToProductByMoniker("pio");
~
+		productPage
~
+		.search("ui(18492415)");
~
+		searchresultsPage
~
+		.openNthDocumentOfType(1, "Citation");
~
+		docviewPage
~
+		.validateTextPresent("51")
~
+		.click(By.linkText("51"), null);
~
+		
~
+		publicationInformationPage
~
+		.andReturn(PublicationInformationPage.class);	
~
+	
~
~
+	}
~
~
~
+	
~
+}
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PsycExtraTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PsycExtraTest2.java
index 3b0ca04..1beb7fa 100755
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PsycExtraTest2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/PsycExtraTest2.java
@@ -1,5 +1,9 @@
 package com.caucus.apps.onesearch.selenium.academic.products;
~
 
~
+import org.junit.Before;
~
+import org.junit.Test;
~
+import org.openqa.selenium.By;
 
~
 
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
 import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
@@ -11,13 +15,17 @@ import com.caucus.apps.onesearch.pqaf.pqis.overlays.DeleteSelectedSearchesOver
 import com.caucus.apps.onesearch.pqaf.pqis.overlays.MyResearchCreateOverlay;
~
 import com.caucus.apps.onesearch.pqaf.pqis.overlays.SaveSearchOverlay;
~
 import com.caucus.apps.onesearch.pqaf.pqis.overlays.SearchSavedOverlay;
~
 import 
-com.caucus.apps.onesearch.pqaf.pqis.pages.*;
+com.caucus.apps.onesearch.pqaf.pqis.pages.AdvancedSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.CommandLineSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DocViewPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.FindSimilarPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LookupCitationPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.NavigationLinks;
~
 import com.caucus.apps.onesearch.pqaf.pqis.tabs.MyResearchSearchesTab;
~
 import com.caucus.apps.onesearch.pqaf.pqis.tabs.MyResearchSignInTab;
~
-import org.junit.Before;
~
-import org.junit.Test;
~
-import org.openqa.selenium.By;
~
 
~
 /**
~
  * @author ddavison
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMPreviewLayerTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMPreviewLayerTest2.java
index 816432e..11387bf 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMPreviewLayerTest2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMPreviewLayerTest2.java
@@ -7,6 +7,7 @@ import com.caucus.apps.onesearch.pqaf.Testing;
 import com.caucus.apps.onesearch.pqaf.pqis.components.Search;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.SearchResult;
~
 import com.caucus.apps.onesearch.pqaf.pqis.layers.PreviewLayer;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.AdvancedSearchPage;
 
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
 import com.caucus.apps.onesearch.selenium.academic.search.PreviewLayerBase;
~
@@ -29,9 +30,10 @@ public class RILMPreviewLayerTest2 extends AcademicBaseSeleniumTest {
         .navigateToProductByMoniker("rilm")
~
         .search("AN(20595218)")
~
         .hoverOver((getNthSubElement(1, SearchResult.LOC_BASE,SearchResult.LOC_LNK_PREVIEW)), PreviewLayer.class)
~
         .validateTextPresent("as RILM 
-1993-5871 and
+1993-5871and
  2003-8910.")
~
         .validateTextNotPresent("as RILM </break>1993-5871 </break>and 2003-8910</break>.")
~
         ;
~
 
~
     }
~
     @Test
~
     @Testing(stories={"PQ-20245"}, testDescription="RILM retro - abstract missing from Preview")
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMTest2.java
index 1ef2e9e..a8ed7ba 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMTest2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/RILMTest2.java
@@ -1,16 +1,23 @@
 package com.caucus.apps.onesearch.selenium.academic.products;
~
 
~
+import org.junit.Before;
~
+import org.junit.Test;
~
+import org.openqa.selenium.By;
~
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
 import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
 import com.caucus.apps.onesearch.pqaf.Testing;
~
 import com.caucus.apps.onesearch.pqaf.pqis.components.SearchResult;
~
 import com.caucus.apps.onesearch.pqaf.pqis.layers.AdvancedLinkLayer;
~
 import 
-com.caucus.apps.onesearch.pqaf.pqis.pages.*;
+com.caucus.apps.onesearch.pqaf.pqis.pages.AdvancedSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.CommandLineSearchPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.DocViewPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.LookupCitationPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
+import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.NavigationLinks;
~
-import org.junit.Before;
~
-import org.junit.Test;
~
-import org.openqa.selenium.By;
~
 
~
 
~
 /**
~
@@ -31,7 +38,7 @@ public class RILMTest2 extends AcademicBaseSeleniumTest
 	ProductPage productPage;
~
 		
~
 	private final String LOGO_HREF = "a[href='http://www.rilm.org/index.php']";
~
 	private final String RILM_TITLE = 
-"Rpertoire
+"Répertoire
  International de 
-Littrature Musicale - RILM";
+Littérature Musicale";
~
 	private final String DB_SELECT_ALL = "input#DBSGridsSelectAll";
~
 	private final String DB_SELECTION = "input#selectedDatabase_0";
~
 
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest.java
index d261522..8640b28 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest.java
@@ -369,8 +369,10 @@ public class TrenchJournalsTest extends GeneralProductTestBase {
 		String[] docFormats = docView.getDisplayFormats(siteName);	
~
 		docView.verifyBrowseThisIssueLinkPresent(docFormats[2], docFormats);
~
 	}
~
 	
~
 	
~
 	
-@Test
+@Test@Ignore(value = "Asengupta:Moved test to selenium2")
 
~
 	@Testing(stories={"PQ-17574"}, testDescription="verify 'browse this issue' works")
~
 	public void testBrowseThisIssue() {
~
 		moveToSiteNameSpecific_AdvancedSearchPage(TRENCH_JOURNALS_MONIKER);
~
 		advancedSearchPage.search("war");
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest2.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest2.java
index a524c82..3d3564a 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest2.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/products/TrenchJournalsTest2.java
@@ -1,5 +1,7 @@
 package com.caucus.apps.onesearch.selenium.academic.products;
~
 
~
+import org.junit.Test;
 
~
 
~
 import com.caucus.apps.onesearch.pqaf.AcademicBaseSeleniumTest;
~
 import com.caucus.apps.onesearch.pqaf.AddPageToTest;
~
 import com.caucus.apps.onesearch.pqaf.SeleniumConfig;
~
@@ -11,7 +13,6 @@ import com.caucus.apps.onesearch.pqaf.pqis.pages.LoginPage;
 import com.caucus.apps.onesearch.pqaf.pqis.pages.ProductPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.pages.SearchResultPage;
~
 import com.caucus.apps.onesearch.pqaf.pqis.partial.SidePanel;
~
-import org.junit.Test;
~
 
~
 /**
~
  * Created by snair on 9/2/2014.
~
@@ -19,6 +20,7 @@ import org.junit.Test;
 @SeleniumConfig(version="Two", settings={"default.userpw=sprinttest|welcome"})
~
 public class TrenchJournalsTest2 extends AcademicBaseSeleniumTest {
~
 @AddPageToTest LoginPage loginPage;
~
+@AddPageToTest DocViewPage docViewPage;
 
~
 
~
 @Test
~
 @Testing(stories="PQ-13602", testDescription="AC 8 Lateral Search Link for Issue", ignoredStatus = "snair: data not available in nightly")
~
@@ -110,6 +112,29 @@ public void testSearchWithIndexTermRunsSearchWithMnemonic_UN() {
 
~
     }
~
 
~
     
+@Test @Testing(stories={"PQ-17574"}, testDescription="verify 'browse this issue' works")
~
+	public void testBrowseThisIssue() {
~
+    	 loginPage
~
+         .login()
~
+         .andReturn(ProductPage.class)
~
+         .navigateToProductByMoniker("trenchjournals")
~
+         .search("war")
~
+         .click(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_TTL), DocViewPage.class)
~
+         .click(css(DocViewPage.LOC_LNK_BROWSETHISISSUE), null)
~
+         .validateTextNotPresent("Error in Browse This Issue", "We seem to have encountered a problem.")
~
+        .validatePresent(css(DocViewPage.LOC_TXT_PAGEHEADER))
~
+			 .validatePresent(css(DocViewPage.LOC_TXT_PAGEZONE));
~
+         
~
+         while(docViewPage.isPresent(css(DocViewPage.LOC_LNK_EXTENDED_PAGE_RANGE_NEXT)))
~
+         {	
~
+			docViewPage
~
+			.click(css(DocViewPage.LOC_LNK_EXTENDED_PAGE_RANGE_NEXT), DocViewPage.class)
~
+			 .validatePresent(css(DocViewPage.LOC_TXT_PAGEHEADER))
~
+			 .validatePresent(css(DocViewPage.LOC_TXT_PAGEZONE));
~
+         }
~
+         
~
+		
~
+	}
 
~
 }
~
 
~
 
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/BasicSavedSearch.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/BasicSavedSearch.java
index 7cb3934..856ab76 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/BasicSavedSearch.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/BasicSavedSearch.java
@@ -85,7 +85,7 @@ public class BasicSavedSearch extends AcademicBaseSeleniumTest {
 	public void basicSearchWithPeerReviewedScholarlyJournalsLimitersStillWorks() {
~
 		verifyBasicSearchPageLimitersWork(css(Search.LOC_CHK_SCHOLARLYJOURNALS), css(Search.LOC_CHK_PEERREVIEWED), 5, "Nokia");
~
 	}
~
 	
~
 	public BasicSearchPage createMyResearchAccount(){
~
 		return basicSearchPage
~
 				.navigateTo(MyResearchPage.class)
~
@@ -118,16 +118,20 @@ public class BasicSavedSearch extends AcademicBaseSeleniumTest {
 	}
~
 
~
 	public void saveAndRerunSearch() {
~
 		
-searchResultPage
~
-		.click(css(SearchResultPage.LOC_LNK_SAVE_SEARCH), SaveSearchOverlay.class)
~
-		.setText(css(SaveSearchOverlay.LOC_TXT_NAME), "Save Test")
~
-		.click(css(SaveSearchOverlay.LOC_BTN_SAVE),SearchSavedOverlay.class)
~
-		.click(css(SearchSavedOverlay.LOC_BTN_CLOSE), SearchResultPage.class)
+saveSearch()
~
 		.navigateTo(MyResearchSearchesTab.class)
~
 		.check(css(MyResearchSearchesTab.LOC_CHK_SELECTALL))
~
 		.waitForAjax()
~
 		.click(css(MyResearchSearchesTab.LOC_BTN_SEARCH_TOP), SearchResultPage.class);
~
 	}
~
 	
~
 	
+public SearchResultPage saveSearch() {
~
+		return searchResultPage
~
+		.click(css(SearchResultPage.LOC_LNK_SAVE_SEARCH), SaveSearchOverlay.class)
~
+		.setText(css(SaveSearchOverlay.LOC_TXT_NAME), "Save Test")
~
+		.click(css(SaveSearchOverlay.LOC_BTN_SAVE),SearchSavedOverlay.class)
~
+		.click(css(SearchSavedOverlay.LOC_BTN_CLOSE), SearchResultPage.class);
~
+	}
~
 
~
 	public SearchResultPage validateResults(int resultEnd) {
~
 		String resultArray[] = new String[numberResultsToValidate];
~
@@ -158,7 +162,7 @@ public class BasicSavedSearch extends AcademicBaseSeleniumTest {
 		validateResults(numResultsToValidate);
~
 		return searchResultPage;
~
 	}
~
 	
~
 	@After
~
 	public void deleteMR() {
~
 		searchResultPage.click(css(TopBar.LOC_LNK_MYRESEARCH), null);
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/FiguresTablesSavedSearch.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/FiguresTablesSavedSearch.java
index 70014a5..e24b814 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/FiguresTablesSavedSearch.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/savedsearch/FiguresTablesSavedSearch.java
@@ -89,7 +89,7 @@ public class FiguresTablesSavedSearch extends AcademicBaseSeleniumTest {
 	@Test @FASTR
~
 	@Testing(stories = { "PQ-23919" }, testDescription = "Running a search in Figures & Tables with only one table selected still works.")
~
 	public void shouldVerifyFiguresAndTablesOneTableSelectedSearchWorks() {
~
 		
-basicSearchPage
+createMyResearchAccount()
~
 		.navigateTo(FigTablesSearchPage.class)
~
 		.setText(css(FigTablesSearchPage.LOC_TXT_SEARCHTERM), "flower")
~
 		.uncheck(css(FigTablesSearchPage.LOC_CHK_FIGURES))
~
@@ -99,18 +99,6 @@ public class FiguresTablesSavedSearch extends AcademicBaseSeleniumTest {
 		saveRerunValidateResults(5);
~
 	}
~
 	
~
-	@Test @FASTR
~
-	@Testing(stories = { "PQ-23919" }, testDescription = "Running a combined search from the saved searches tab - using upper combined option, 2 searches.")
~
-	public void shouldVerifyRunningCombinedSavedSearchFromTwoSearchTermsWorksUpper() {
~
-		doSearch("vacation");
~
-		doSearch("Hawaii");
~
-		basicSearchPage
~
-		.navigateTo(MyResearchSearchesTab.class)
~
-		.check(css(MyResearchSearchesTab.LOC_CHK_SELECTALL))
~
-		.click(css(MyResearchSearchesTab.LOC_BTN_SEARCH_TOP), SearchResultPage.class);
~
-		saveRerunValidateResults(5);
~
-	}
~
-	
~
 	@Test@FASTR@Testing(stories = { "PQ-26907" }, 
~
 			testDescription = "Running a Figures & Tables saved search where the 'Caption' mnemonic was used continues to work.")
~
 	public void runningSavedSearchUsingfigTablesCaptionMnemonic() {
~
@@ -173,7 +161,7 @@ public class FiguresTablesSavedSearch extends AcademicBaseSeleniumTest {
 	@Testing(stories = { "PQ-23919" }, testDescription = "")
~
 	public void shouldVerifyFiguresAndTablesSavedSearchWorksCorrectly() {
~
 		driver.manage().window().maximize();
~
 		
-basicSearchPage
+createMyResearchAccount()
~
 		.navigateTo(FigTablesSearchPage.class)
~
 		.setText(css(FigTablesSearchPage.LOC_TXT_SEARCHTERM), "test")
~
 		.uncheck(css(FigTablesSearchPage.LOC_CHK_FIGURES))
~
@@ -222,7 +210,7 @@ public class FiguresTablesSavedSearch extends AcademicBaseSeleniumTest {
 	@Test @FASTR
~
 	@Testing(stories = { "PQ-24395" }, testDescription = "Doing a quick search in Figures & Tables continues to work.")
~
 	public void shouldVerifyFiguresTablesQuickSearchWorks(){
~
 		
-basicSearchPage
+createMyResearchAccount()
~
 		.navigateTo(FigTablesSearchPage.class)
~
 		.search("test")
~
 		.setText(css(SearchResultPage.LOC_TXT_SEARCH_TERM), "solar picture")
~
@@ -263,21 +251,6 @@ public class FiguresTablesSavedSearch extends AcademicBaseSeleniumTest {
 		return searchResultPage;
~
 	}
~
 	
~
-	private SearchResultPage doSearch(String searchTerm) {
~
-		doSearch(searchTerm, true);
~
-		return searchResultPage;
~
-	}
~
-	
~
-	private SearchResultPage doSearch(String searchTerm, boolean saveSearch) {
~
-		basicSearchPage
~
-		.setText(css(SearchResultPage.LOC_TXT_SEARCH_TERM), searchTerm)
~
-		.click(css(SearchResultPage.LOC_BTN_SEARCH), SearchResultPage.class);
~
-		if (saveSearch) {
~
-			saveSearch();
~
-		}
~
-		return searchResultPage;
~
-	}
~
~
 	public SearchResultPage saveAndRerunSearch() {
~
 		return
~
 		saveSearch()
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/search/SearchAndViewDoc.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/search/SearchAndViewDoc.java
index 491dd26..698ebc1 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/search/SearchAndViewDoc.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/search/SearchAndViewDoc.java
@@ -78,7 +78,7 @@ public class SearchAndViewDoc extends AcademicBaseSeleniumTest {
 	@Test @Testing(stories={"PQ-12219, PQ-13385"},testDescription="COS Funding Opportunities results should not show up in a PQDT only search")
~
 	public void FundingOpportunitiesDoesNotDisplayInADissertationOnlySearch() {
~
 		selenium.windowMaximize();
~
 		
-databaseSelection.selectDatabaseByMoniker("dissertations", "dissertations");
+databaseSelection.selectDatabaseByMoniker("pqdtft", "pqdtft");
 
~
 		advancedSearchPage.go();
~
 		selenium.type("queryTermField", "ab(nurs*) AND ('lateral violence' OR 'horizontal violence' OR 'vertical violence' OR bully* NEAR/3 nurs* OR mobbing OR hostil* NEAR/3 nurs* OR eating NEAR/3 young OR 'workplace bullying')");
~
 		selenium.click("ManuscriptType_doctoral_diss");
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/BookReportsUsageTest.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/BookReportsUsageTest.java
index 3134b46..bf76ab7 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/BookReportsUsageTest.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/BookReportsUsageTest.java
@@ -22,286 +22,283 @@ import java.util.Set;
 @SeleniumConfig(version = "Two", settings={"default.userpw=seleniumtest|welcome"}) //account ID:object_type|object_type
~
 public class BookReportsUsageTest extends AcademicBaseSeleniumTest {
~
 	
~
 	
+//@formatter:off
 
~
 	@AddPageToTest LoginPage loginPage;
~
 	@AddPageToTest DocViewPage docViewPage;
~
 	@AddPageToTest SearchResultPage searchResultPage;
~
 	
+//@formatter:on
 
~
 	
~
     private PqafBaseUI resultClick(String moniker, String searchTerm, By by) {
~
     	return loginPage
~
    			
-.login(moniker)
+.login(moniker + "/login")
 
~
    			.setText(css(SearchResultPage.LOC_TXT_SEARCH_TERM), searchTerm)
~
 	       	.click(css(SearchResultPage.LOC_BTN_SEARCH), SearchResultPage.class)
~
 	       	.click(by, DocViewPage.class);
~
     }
~
 	
~
     @Test
~
     @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void shouldLogBookAsObjectTypeWhenCitationAbstractClicked() {
~
 	    loginPage
~
 	    
-.login("/sciencejournals")
+.login("/sciencejournals/login")
 
~
 	    .setText(css("#searchTerm"), "ti(Chapter 06 - Concluding Remarks)")
~
 	    .click(css(".search_icon"), SearchResultPage.class)
~
 	    .click(By.linkText("Citation/Abstract"), DocViewPage.class)
~
 	    .validateUsageLogs(1,
~
 	    		"BreadCrumb:OS-DocViewBase-logDocView",
~
 	    		
-"ObjectType:Book",
+"ObjectType:Book|Book Chapter",
 
~
 	    		"ItmFrmt:Abstract");
~
 	}
~
     
~
     @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void shouldLogBookAsObjectTypeWhenFullTextClicked() {
~
 	    loginPage
~
 	    
-.login("/sciencejournals")
+.login("/sciencejournals/login")
 
~
 	    .setText(css("#searchTerm"), "ti(Chapter 06 - Concluding Remarks)")
~
 	    .click(css(".search_icon"), SearchResultPage.class)
~
 	    .click(css("#addFlashPageParameterformat_fulltext"), DocViewPage.class)	    
~
 	    .validateUsageLogs(1,
~
 	    		"BreadCrumb:OS-DocViewBase-logDocView",
~
 	    		
-"ObjectType:Book",
+"ObjectType:Book|Book Chapter",
 
~
 		    	"ItmFrmt:Text");
~
 	}
~
     
~
     
+@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
+	public void shouldLogBookAsObjectTypeWhenFullTextPDFClicked() {
~
+	    loginPage
~
+	    .login("/sciencejournals/login")
~
+	    .setText(css("#searchTerm"), "ti(Chapter 06 - Concluding Remarks)")
~
+	    .click(css(".search_icon"), SearchResultPage.class)
~
+	    .click(By.linkText("Full text - PDF"), null)
~
+	    .validateUsageLogs(1,
~
+	    		"BreadCrumb:OS:EMS-PdfDocViewBase-getMediaUrlForItem",
~
+	    		"ObjectType:Book|Book Chapter",
~
+	    		"ItmFrmt:DocumentImage");
~
+	}
 
~
 	    
~
 	@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void 
-shouldLogBookAsObjectTypeWhenFullTextPDFClicked()
+shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_RtfExport()
  {
~
 		
-loginPage
~
-		    .login("/sciencejournals")
~
-		    .setText(css("#searchTerm"), "ti(Chapter 06 - Concluding Remarks)")
~
-		    .click(css(".search_icon"),
+resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
+	    .click(css(BlueBar.LOC_LNK_EXPORTSAVE),
  SearchResultPage.class)
~
         
-.click(By.linkText("Full text - PDF"),
+.andReturn(ExportSaveOverlay.class)
~
+	    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_OUTPUTTO), "Rtf")
~
+	    .selectOptionByText(By.cssSelector(ExportSaveOverlay.LOC_SEL_CONTENT), "Citation, abstract, indexing")
~
+	    .waitForElement(css(ExportSaveOverlay.LOC_BTN_CONTINUE), true, 10, 2)
~
+	    .click(css(ExportSaveOverlay.LOC_BTN_CONTINUE),
  null)
~
 	    
-.validateUsageLogs(1,
~
-		    		"BreadCrumb:OS:EMS-PdfDocViewBase-getMediaUrlForItem",
~
-		    		"ObjectType:Book",
~
-		    		"ItmFrmt:DocumentImage");
+.validateUsageLogsNoReturn(1,
~
+	    	"BreadCrumb:OS-PostProcessingTransactionalLogger-logSaveAsUsage",
~
+	    	"ItmFrmt:Abstract",
~
+	    	"ObjectType:Book|Book Chapter")
~
+    	.validateUsageLogsNoReturn(1,
~
+			"BreadCrumb:OS-DocViewBase-logDocView",
~
+			"ObjectType:Book|Book Chapter",
~
+			"ItmFrmt:Abstract");
 
~
 	}
~
 	
~
 	@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void 
-shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_RtfExport()
+shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_Print()
  {
~
 		resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
 	    
-.click(css(BlueBar.LOC_LNK_EXPORTSAVE),
+.click(css(BlueBar.LOC_LNK_PRINT),
  SearchResultPage.class)
~
 	    
-.andReturn(ExportSaveOverlay.class)
~
-		    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_OUTPUTTO), "Rtf")
~
-		    .selectOptionByText(By.cssSelector(ExportSaveOverlay.LOC_SEL_CONTENT),
+.selectOptionByText(css(PrintOverlay.LOC_SEL_CONTENT),
  "Citation, abstract, indexing")
~
 	    
-.waitForElement(css(ExportSaveOverlay.LOC_BTN_CONTINUE), true, 10, 2)
~
-		    .click(css(ExportSaveOverlay.LOC_BTN_CONTINUE),
+.click(css(PrintOverlay.LOC_BTN_CONTINUE),
  null)
~
 	    .validateUsageLogsNoReturn(1,
~
 	    		
-"BreadCrumb:OS-PostProcessingTransactionalLogger-logSaveAsUsage",
+"BreadCrumb:OS-SaveAsPrint-logPrintViewUsage",
 
~
 		    	"ItmFrmt:Abstract",
~
-		    	"ObjectType:Book|Book Chapter")
~
-	    	.validateUsageLogsNoReturn(1,
~
-    			"BreadCrumb:OS-DocViewBase-logDocView",
~
-    			"ObjectType:Book|Book Chapter",
~
-    			"ItmFrmt:Abstract");
~
-		}
~
-		
~
-		@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
-		public void shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_Print() {
~
-			resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
-		    .click(css(BlueBar.LOC_LNK_PRINT), SearchResultPage.class)
~
-		    .selectOptionByText(css(PrintOverlay.LOC_SEL_CONTENT), "Citation, abstract, indexing")
~
-		    .click(css(PrintOverlay.LOC_BTN_CONTINUE), null)
~
-		    .validateUsageLogsNoReturn(1,
~
-		    		"BreadCrumb:OS-SaveAsPrint-logPrintViewUsage",
~
-			    	"ItmFrmt:Abstract",
~
-			    	"ObjectType:Book|Book Chapter");
~
-		}
~
-		
~
-		@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
-		public void shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_ExportXls() {
~
-			resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
-		    .click(css(BlueBar.LOC_LNK_EXPORTSAVE), SearchResultPage.class)
~
-            .andReturn(ExportSaveOverlay.class)
~
-		    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_OUTPUTTO), "Excel")
~
-		    .selectOptionByText(By.cssSelector(ExportSaveOverlay.LOC_SEL_CONTENT), "Citation, abstract, indexing")
~
-		    .waitForElement(css(ExportSaveOverlay.LOC_BTN_CONTINUE), true, 10, 2)
~
-		    .click(css(ExportSaveOverlay.LOC_BTN_CONTINUE), null)
~
-		    .validateUsageLogsNoReturn(1,
~
-		    		"BreadCrumb:OS-RefWorksDocExport-logExportUsage",
~
-			    	"ItmFrmt:Abstract",
~
-			    	"ObjectType:Book|Book Chapter");
~
-		}
~
-		    
~
-		@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
-		public void shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_Email() {
~
-			resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
-		    .click(css(BlueBar.LOC_LNK_EMAIL), SearchResultPage.class)
~
-		    .selectOptionByText(css(EmailOverlay.LOC_SEL_CONTENT), "Original file format (PDF, video, presentation, spreadsheet, image)")
~
-		    .setText(css(EmailOverlay.LOC_TXT_EMAILADDRESSES), "null@caucus.com")
~
-		    .setText(css(EmailOverlay.LOC_TXT_YOURNAME), "Automation Test")
~
-		    .click(css(EmailOverlay.LOC_BTN_CONTINUE), EmailConfirmationFromDocViewOverlay.class)
~
-		    .waitForElement(css(EmailConfirmationFromDocViewOverlay.LOC_LNK_CLOSE), true, 10, 2)
~
-            .click(css(EmailConfirmationFromDocViewOverlay.LOC_LNK_CLOSE), DocViewPage.class)
~
-		    .validateUsageLogsNoReturn(1,
~
-		    	"BreadCrumb:OS-PostProcessingTransactionalLogger-logEmailUsage",
~
-		    	"ItmFrmt:DocumentImage",
~
 		    	"ObjectType:Book|Book Chapter");
~
 	}
-//From Selected Items tab of Amanda's spreadsheet.
 
~
 	
~
 	@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void 
-shouldLogBookAsObjectTypeWhenFullTextClickedOnSelectedItemsPage()
+shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_ExportXls()
  {
~
 		
-loginPage
~
-		    .login()
~
-		    .navigateTo(DatabaseSelectionLayer.class)
~
-		    .uncheckAllDatabases()
~
-		    .checkDatabaseByMoniker("sciencejournals")
~
-		    .checkDatabaseByMoniker("psycbooks")
~
-			.click(css(DatabaseSelectionLayer.LOC_BTN_USE_SELECTED_DATABASES), BasicSearchPage.class)
~
-			.search("ti(Chapter 06 - Concluding Remarks) OR ti(The Measurement of Job Efficiencies.) OR ti(\"A brief text-book of logic
+resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women,
  and 
-mental philosophy.\") OR  ti(PART III - CLOSING THE WATER LOOP - 7: MANAGING USED WATER)")
~
-			.click(By.cssSelector("#mlcbAll"), SearchResult.class)
~
-			.navigateTo(SelectedItemsPage.class)
~
-			.click(getNthSubElement(4, SelectedItem.LOC_BASE, SelectedItem.LOC_LNK_FULLTEXT), DocViewPage.class)
+books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
+	    .click(css(BlueBar.LOC_LNK_EXPORTSAVE), SearchResultPage.class)
~
+        .andReturn(ExportSaveOverlay.class)
~
+	    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_OUTPUTTO), "Excel")
~
+	    .selectOptionByText(By.cssSelector(ExportSaveOverlay.LOC_SEL_CONTENT), "Citation, abstract, indexing")
~
+	    .waitForElement(css(ExportSaveOverlay.LOC_BTN_CONTINUE), true, 10, 2)
~
+	    .click(css(ExportSaveOverlay.LOC_BTN_CONTINUE), null)
 
~
 	    .validateUsageLogsNoReturn(1,
~
 	    		
-"BreadCrumb:OS-DocViewBase-logDocView",
~
-		    		"ObjectType:Book",
~
-		    		"ItmFrmt:Text");
+"BreadCrumb:OS-RefWorksDocExport-logExportUsage",
~
+		    	"ItmFrmt:Abstract",
~
+		    	"ObjectType:Book|Book Chapter");
 
~
 	}
~
 	    
~
 	@Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void 
-shouldLogBookBookChapterAsObjectTypeWhenFullTextPDFClickedOnSelectedItemsPageAbstractPreview()
+shouldLogBookBookChapterAsObjectTypeWhenPostProcessingOptionsClickedInDocViewPage_Email()
  {
~
 		
-loginPage
~
-		    .login()
~
-		    .navigateTo(DatabaseSelectionPage.class)
~
-			.uncheckAllDatabases()
~
-			.checkDatabaseByMoniker("sciencejournals")
~
-			.checkDatabaseByMoniker("psycbooks")
~
-			.click(css(DatabaseSelectionPage.LOC_BTN_USE_SELECTED_DATABASES_BOTTOM), BasicSearchPage.class)
~
-			.search("ti(Chapter 06 - Concluding Remarks)")
~
-			.check(css(SearchResultPage.LOC_CHK_SELECTALLRESULTS))
~
-			.navigateTo(SelectedItemsPage.class)
~
-			.hoverOver(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_LNK_PREVIEW), PreviewLayer.class)
~
-			.click(css(PreviewLayer.LOC_LNK_FTPDF_SCANNED_IMAGE),
+resultClick("psycbooks", "ti(Of three commerces, i.e. familiarities with men, women, and books.)", css(SearchResult.LOC_LNK_CITATIONABSTRACT))
~
+	    .click(css(BlueBar.LOC_LNK_EMAIL), SearchResultPage.class)
~
+	    .selectOptionByText(css(EmailOverlay.LOC_SEL_CONTENT), "Original file format (PDF, video, presentation, spreadsheet, image)")
~
+	    .setText(css(EmailOverlay.LOC_TXT_EMAILADDRESSES), "null@caucus.com")
~
+	    .setText(css(EmailOverlay.LOC_TXT_YOURNAME), "Automation Test")
~
+	    .click(css(EmailOverlay.LOC_BTN_CONTINUE), EmailConfirmationFromDocViewOverlay.class)
~
+	    .waitForElement(css(EmailConfirmationFromDocViewOverlay.LOC_LNK_CLOSE), true, 10, 2)
~
+        .click(css(EmailConfirmationFromDocViewOverlay.LOC_LNK_CLOSE),
  DocViewPage.class)
~
 	    .validateUsageLogsNoReturn(1,
~
 	    	
-"BreadCrumb:OS:EMS-PdfDocViewBase-getMediaUrlForItem",
+"BreadCrumb:OS-PostProcessingTransactionalLogger-logEmailUsage",
~
+	    	"ItmFrmt:DocumentImage",
 
~
 	    	"ObjectType:Book|Book Chapter");
~
 	}
~
 
~
     
+//From Selected Items tab of Amanda's spreadsheet.
~
+    @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
+	public void shouldLogBookAsObjectTypeWhenFullTextClickedOnSelectedItemsPage() {
~
+	    loginPage
~
+	    .login()
~
+	    .navigateTo(DatabaseSelectionLayer.class)
~
+	    .uncheckAllDatabases()
~
+	    .checkDatabaseByMoniker("sciencejournals")
~
+	    .checkDatabaseByMoniker("psycbooks")
~
+		.click(css(DatabaseSelectionLayer.LOC_BTN_USE_SELECTED_DATABASES), BasicSearchPage.class)
~
+		.search("ti(Chapter 06 - Concluding Remarks) OR ti(The Measurement of Job Efficiencies.) OR ti(\"A brief text-book of logic and mental philosophy.\") OR  ti(PART III - CLOSING THE WATER LOOP - 7: MANAGING USED WATER)")
~
+		.click(By.cssSelector("#mlcbAll"), SearchResult.class)
~
+		.navigateTo(SelectedItemsPage.class)
~
+		.click(getNthSubElement(4, SelectedItem.LOC_BASE, SelectedItem.LOC_LNK_FULLTEXT), DocViewPage.class)
~
+	    .validateUsageLogsNoReturn(1,
~
+	    		"BreadCrumb:OS-DocViewBase-logDocView",
~
+	    		"ObjectType:Book|Book Chapter",
~
+	    		"ItmFrmt:Text");
~
+	}
~
+    
~
+    @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
+	public void shouldLogBookBookChapterAsObjectTypeWhenFullTextPDFClickedOnSelectedItemsPageAbstractPreview() {
~
+	    loginPage
~
+	    .login()
~
+	    .navigateTo(DatabaseSelectionPage.class)
~
+		.uncheckAllDatabases()
~
+		.checkDatabaseByMoniker("sciencejournals")
~
+		.checkDatabaseByMoniker("psycbooks")
~
+		.click(css(DatabaseSelectionPage.LOC_BTN_USE_SELECTED_DATABASES_BOTTOM), BasicSearchPage.class)
~
+		.search("ti(Chapter 06 - Concluding Remarks)")
~
+		.check(css(SearchResultPage.LOC_CHK_SELECTALLRESULTS))
~
+		.navigateTo(SelectedItemsPage.class)
~
+		.hoverOver(getNthSubElement(1, SearchResult.LOC_BASE, SearchResult.LOC_LNK_PREVIEW), PreviewLayer.class)
~
+		.click(css(PreviewLayer.LOC_LNK_FTPDF_SCANNED_IMAGE), DocViewPage.class)
~
+	    .validateUsageLogsNoReturn(1,
~
+	    		"BreadCrumb:OS:EMS-PdfDocViewBase-getMediaUrlForItem",
~
+	    		"ObjectType:Book|Book Chapter");
~
+	}
 
~
 
~
     @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for different format clicks record proper object type in usage.")
~
 	public void shouldLogInstructionalMaterialGuidelineBookAsObjectTypeWhenItemSaved() {
~
         driver.manage().window().maximize();
~
         
~
 	    loginPage
~
 	    .login()
~
 	    .navigateTo(DatabaseSelectionPage.class)
~
 		.uncheckAllDatabases()
~
 		.checkDatabaseByMoniker("sciencejournals")
~
 		.checkDatabaseByMoniker("psycbooks")
~
 		.click(css(DatabaseSelectionPage.LOC_BTN_USE_SELECTED_DATABASES_BOTTOM), BasicSearchPage.class)
~
 		.search("ti(Chapter 06 - Concluding Remarks)")
~
 		.click(By.cssSelector("#mlcbAll"), SearchResult.class)
~
 		.navigateTo(SelectedItemsPage.class)
~
         .click(getNthSubElement(1, SelectedItem.LOC_BASE, SelectedItem.LOC_LNK_PREVIEW), PreviewLayer.class)
~
         .hoverOver(css(PreviewLayer.LOC_LNK_FTPDF_SCANNED_IMAGE), DocViewPage.class)
~
         .validateUsageLogsNoReturn(1,
~
         "BreadCrumb:OS-Preview-logItemUsage",
~
         "ObjectType:Book|Book Chapter");
~
 	}
~
     
~
     //From My Research Page tab of Amanda's spreadsheet.
~
     @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for PDF from MyResearch items record proper object type in usage.")
~
 	public void shouldLogBookWhenFullTextSelectedForMyResearchItem() {
~
         loginPage.login("myresearch")
~
         .andReturn(MyResearchSignInTab.class)
~
         .click(css(MyResearchSignInTab.LOC_LNK_CREATEACCOUNT), MyResearchCreateOverlay.class)
~
         .createMRAccountWithTimestamp("automation", "password", "selenium", "automation", "null@caucus.com")
~
         .andReturn(MyResearchDocumentsTab.class)
~
         .click(css(TopBar.LOC_LNK_DATABASES), DatabaseSelectionLayer.class)
~
         .changeDatabasesByTitle(BasicSearchPage.class, "Caucus Science Journals", "PsycBOOKS")
~
         .search("ti(Chapter 06 - Concluding Remarks) OR ti(The Measurement of Job Efficiencies.) OR ti(\"A brief text-book of logic and mental philosophy.\") OR  ti(PART III - CLOSING THE WATER LOOP - 7: MANAGING USED WATER)")
~
         .check(css(SearchResultPage.LOC_CHK_SELECTALLRESULTS))
~
         .click(css(BlueBar.LOC_LNK_SAVETOMYRESEARCH), SaveToMyResearchOverlay.class)
~
         .waitForElement(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), true, 5, 1) //XXX ddavison: adding this until we can figure out whats happening here.
~
         .click(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), SearchResultPage.class)
~
         .waitForAjax()
~
         .navigateTo(MyResearchDocumentsTab.class)
~
         .click(css("#resultItem_list_1 #addFlashPageParameterformat_fulltext"), DocViewPage.class)
~
         .validateUsageLogsNoReturn(1,
~
         		"BreadCrumb:OS-DocViewBase-logDocView",
~
         		
-"ObjectType:Book",
+"ObjectType:Book|Book Chapter",
 
~
         		"ItmFrmt:Text")
~
         .navigateTo(MyResearchAccountInformationTab.class)
~
         .click(css(MyResearchAccountInformationTab.LOC_LNK_DELETEACCOUNT), MyResearchDeleteOverlay.class)
~
         .click(css(MyResearchDeleteOverlay.LOC_BTN_DELETE), MyResearchPage.class);;
~
     }
~
     
~
   //From My Research Page tab of Amanda's spreadsheet.
~
     @Test @Testing(stories={"PQ-15976"},testDescription="confirm doc views for PDF from MyResearch items record proper object type in usage.")
~
 	public void shouldLogBookBookChapterWhenFullTextPDFSelectedForMyResearchItem() {
~
     	
~
     	String continueButtonCssSelector = ExportSaveOverlay.LOC_PARENT + " a[name^='submitButton_']";
~
     	
~
 	    loginPage.login("/myresearch")
~
 	    .andReturn(MyResearchSignInTab.class)
~
         .click(css(MyResearchSignInTab.LOC_LNK_CREATEACCOUNT), MyResearchCreateOverlay.class)
~
         .createMRAccountWithTimestamp("automation", "password", "selenium", "automation", "null@caucus.com")
~
         .andReturn(MyResearchDocumentsTab.class)
~
 	    .click(css(TopBar.LOC_LNK_DATABASES), DatabaseSelectionLayer.class)
~
         
-.changeDatabasesByTitle(BasicSearchPage.class, "Caucus
+.changeDatabasesByTitle(BasicSearchPage.class,"PsycBOOKS","Caucus
  Science 
-Journals", "PsycBOOKS")
+Journals")
 
~
         .search("ti(Chapter 06 - Concluding Remarks) OR ti(The Measurement of Job Efficiencies.) OR ti(\"A brief text-book of logic and mental philosophy.\") OR  ti(PART III - CLOSING THE WATER LOOP - 7: MANAGING USED WATER)")
~
 		.check(css(SearchResultPage.LOC_CHK_SELECTALLRESULTS))
~
         .click(css(BlueBar.LOC_LNK_SAVETOMYRESEARCH), SaveToMyResearchOverlay.class)
~
         .waitForElement(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), true, 5, 1) //XXX ddavison: adding this until we can figure out whats happening here.
~
         .click(css(SaveToMyResearchOverlay.LOC_BTN_SAVE), SearchResultPage.class)
~
         .waitForAjax()
~
         .navigateTo(MyResearchDocumentsTab.class)
~
 	    .click(By.cssSelector("#selectionCheckbox"), MyResearchPage.class)
~
 	    .click(css("#resultItem_list_4 .selection_checkbox"), MyResearchPage.class)
~
 	    .click(By.cssSelector(BlueBar.LOC_LNK_EXPORTSAVE), ExportSaveOverlay.class)
~
 	    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_OUTPUTTO), "Text")
~
 	    // Need to change the dropdown to full text, it's not always here though.
~
 //		    .selectOptionByValue(By.cssSelector(ExportSaveOverlay.LOC_SEL_CONTENT), ContentTypes.FULL_TEXT.name().toUpperCase())
~
 	    .waitForElement(By.cssSelector(continueButtonCssSelector), true, 10, 2)
~
 	    .click(By.cssSelector(continueButtonCssSelector), null);
~
 	    waitForWindow(200);
~
 	    closeLinkOutWindow();
~
 	    loginPage
~
 	    .validateUsageLogs(1,
~
 	    		"BreadCrumb:OS-PostProcessingTransactionalLogger-logSaveAsUsage",
~
 	    		"ObjectType:Book|Instructional 
-Material/Guideline")
+Material/Guideline|Book Chapter")
 
~
 	    .navigateTo(MyResearchAccountInformationTab.class)
~
         .click(css(MyResearchAccountInformationTab.LOC_LNK_DELETEACCOUNT), MyResearchDeleteOverlay.class)
~
         .click(css(MyResearchDeleteOverlay.LOC_BTN_DELETE), MyResearchPage.class);
~
 	}
~
     
~
     public void closeLinkOutWindow() {
~
         String mainWindowHandle = driver.getWindowHandle();
~
 
~
         java.util.Set<String> availableWindows = driver.getWindowHandles();
~
 
~
         int Windows = 2;
~
         if (availableWindows.size() == Windows) {
~
             String popUpWindowHandle = null;
~
             for (String windowHandle2 : availableWindows) {
~
                 if (!windowHandle2.equals(mainWindowHandle)) {
~
                     popUpWindowHandle = windowHandle2;
~
                 }
~
             }
~
             driver.switchTo().window(popUpWindowHandle);
~
             driver.close();
~
             driver.switchTo().window(mainWindowHandle);
~
         }
~
     }
~
     
~
     public void waitForWindow(int nbrToTry) {
~
 	    boolean windowFound = false;
~
 	    int nbrTries = 0;
~
 	    while (!windowFound && nbrTries++ < nbrToTry) {
~
 	     Set<String> windows = driver.getWindowHandles();
~
 	     for (String window : windows) {
~
 	    	 try {
~
 	    		 driver.switchTo().window(window);
~
 	    		 if ("Request completed".equals(driver.getTitle()))
~
 	    			 windowFound = true;
~
 	    		 System.out.println(driver.getTitle());
~
 
~
 	    	 } catch(NoSuchWindowException e) {
~
 	    	 }
~
 	     }
-}
 
~
 	    }
~
     
+}
 
~
 
~
 }
~
diff --git a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/UsageLoggingMiscTests.java b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/UsageLoggingMiscTests.java
index 63a6592..2e7ca2c 100644
--- a/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/UsageLoggingMiscTests.java
+++ b/Regression/src/main/java/com/caucus/apps/onesearch/selenium/academic/usagelogging/UsageLoggingMiscTests.java
@@ -159,9 +159,9 @@ public class UsageLoggingMiscTests extends AcademicBaseSeleniumTest {
 				"ItmFrmt:Citation");
~
 	}
~
 	
~
 	@SeleniumConfig(version = "Two", settings = { 
-"default.userpw=seleniumtest|welcome"
+"default.userpw=selenium_general|selenium_general"
  })
~
 	@Test @Testing(stories = {"PQ-24054"}, testDescription = 
-"BP
+"ERIC
  durable URL logs all module products in UsageInfoList.")
~
 	public void 
-durableUrlBritishPeriodicalsLogsModuleProductsInUsageInfoList()
+durableUrlEricLogsModuleProductsInUsageInfoList()
  {
~
 		loginPage
~
 			.login()
~
 			.navigateTo(BasicSearchPage.class);
~
@@ -174,15 +174,28 @@ public class UsageLoggingMiscTests extends AcademicBaseSeleniumTest {
 
~
 		driver.navigate().to(bpUrl);
~
 		loginPage
~
 			.setText(css(LoginPage.LOC_TXT_USERNAME), 
-"seleniumtest")
+"selenium_general")
~
 			.setText(css(LoginPage.LOC_TXT_PASSWORD), 
-"welcome")
+"selenium_general")
~
 			.click(css(LoginPage.LOC_BTN_LOGIN), BasicSearchPage.class)
~
 			.search("student counseling")
~
 			.validateUsageLogsNoReturn(1,
~
 				
-"\"BreadCrumb\":\"OS-BasicSearchBox-executeSearch\"",
+"BreadCrumb:OS-BasicSearchBox-executeSearch",
~
 				"SearchAllProductsFlag:N",
~
 				"MP-10000001-",
~
 				"P-1000303-",
~
 				"P-1000302-");
~
 	}
~
 	
~
 	
+@Test
~
+	@Testing(stories = {"PQ-27947"}, testDescription = "Zip file retrievals are logging correctly - only one usage record")
~
+	public void zipFileRetrievalsLogCorrectly() {
~
+		retrieveDocument("eiuarchive", 
~
+				"*",
~
+				css(SearchResult.LOC_LNK_CITATION))
~
+		.click(css(DocViewPage.LOC_LNK_ALLTABLESPREADSHEET), DocViewPage.class)
~
+		.validateUsageLogsNoReturn(1,
~
+				"UsageInfo:P-1008882",
~
+				"ItmFrmt:ZipFile",
~
+				"BreadCrumb:OS:EMS-OtherFormatLinks-getZipFilePath");
~
+	}
~
 }	
~
diff --git a/Regression/src/main/resources/AdvanceSearch.properties b/Regression/src/main/resources/AdvanceSearch.properties
index bf4742c..a67f9ef 100755
--- a/Regression/src/main/resources/AdvanceSearch.properties
+++ b/Regression/src/main/resources/AdvanceSearch.properties
@@ -1427,7 +1427,7 @@ TRENCHJOURNALS.PD.field4=Before this date...
 TRENCHJOURNALS.PD.field5=Specific date range...
~
 
~
 #Exposed search fields -- ESF AC7
~
-#TRENCHJOURNALS.ESF.fields.count=5
+TRENCHJOURNALS.ESF.fields.count=5
 
~
 TRENCHJOURNALS.ESF.field1=Publication title:%publicationTitle%Look up Publications
~
 TRENCHJOURNALS.ESF.field2=Unit location:%unitLocation%Look up Unit location
~
 TRENCHJOURNALS.ESF.field3=Unit name:%unitName%Look up Unit name
~
@@ -1440,11 +1440,11 @@ TRENCHJOURNALS.ESF.searchTerm.field3=Anti-Aircraft Corps, Royal Navy
 TRENCHJOURNALS.ESF.searchTerm.field4=Canada
~
 TRENCHJOURNALS.ESF.searchTerm.field5=Navy
~
 
~
-TRENCHJOURNALS.ESF.mnemonic.field1=pub
~
-TRENCHJOURNALS.ESF.mnemonic.field2=ul
~
-TRENCHJOURNALS.ESF.mnemonic.field3=un
~
-TRENCHJOURNALS.ESF.mnemonic.field4=uo
~
-TRENCHJOURNALS.ESF.mnemonic.field5=ut
+TRENCHJOURNALS.ESF.field1.mnemonic=pub
~
+TRENCHJOURNALS.ESF.field2.mnemonic=ul
~
+TRENCHJOURNALS.ESF.field3.mnemonic=un
~
+TRENCHJOURNALS.ESF.field4.mnemonic=uo
~
+TRENCHJOURNALS.ESF.field5.mnemonic=ut
 
~
 
~
 #PQ-12554 Trench journals - New Advanced search profile 
~
 #Browse indexes -- AC 1,2
~
@@ -1458,7 +1458,7 @@ TRENCHJOURNALS.BI.field6=browseIndexSpanrow0ul%Look up Unit locations
 
~
 #As per comment in PQ-`12554
~
 #Complex limiters -- AC 3
~
-#TRENCHJOURNALS.CL.fields.count=3
+TRENCHJOURNALS.CL.fields.count=3
 
~
 TRENCHJOURNALS.CL.field1=Document type:%selectAll_RecordType
~
 TRENCHJOURNALS.CL.field2=Document feature:%selectAll_DocFeature
~
 TRENCHJOURNALS.CL.field3=Language:%selectAll_Language
~
@@ -1478,108 +1478,108 @@ PQDTFT.ESF.field5=Index term (keyword):%indexTerm%Look up Index terms (keywords)
 
~
 #PQ-14310 PsycExtra - New Advanced search profile
~
 #Query Builder values
~
-psycextra.QB.fields.count=22
~
-psycextra.QB.field1=Anywhere
+PSYCEXTRA.QB.fields.count=22
~
+PSYCEXTRA.QB.field1=Anywhere
  except full text \u2014 ALL
~
-psycextra.QB.field2=Abstract
+PSYCEXTRA.QB.field2=Abstract
  \u2014 AB
~
-psycextra.QB.field3=Author
+PSYCEXTRA.QB.field3=Author
  \u2014 AU
~
-psycextra.QB.field4=Document
+PSYCEXTRA.QB.field4=Document
  title \u2014 TI
~
-psycextra.QB.field5=Location
+PSYCEXTRA.QB.field5=Location
  \u2014 LO
~
-psycextra.QB.field6=Publication
+PSYCEXTRA.QB.field6=Publication
  title \u2014 PUB
~
-psycextra.QB.field7=Subject
+PSYCEXTRA.QB.field7=Subject
  heading (all) \u2014 SU
~
-psycextra.QB.field8=Identifier
+PSYCEXTRA.QB.field8=Identifier
  (keyword) \u2014 IF
~
 
~
 #Query Builder more options
~
-psycextra.QB.field8=
+PSYCEXTRA.QB.field8=
  Accession number \u2014 AN
~
-psycextra.QB.field9=
+PSYCEXTRA.QB.field9=
  Author affiliation \u2014 AF
~
-psycextra.QB.field10=
+PSYCEXTRA.QB.field10=
  Classification \u2014 CL
~
-psycextra.QB.field11=Conference
+PSYCEXTRA.QB.field11=Conference
  \u2014 CF
~
-psycextra.QB.field12=Content
+PSYCEXTRA.QB.field12=Content
  owner \u2014 CON
~
-psycextra.QB.field13=Corporate
+PSYCEXTRA.QB.field13=Corporate
  author \u2014 CA
~
-psycextra.QB.field14=Digital
+PSYCEXTRA.QB.field14=Digital
  Object Identifier \u2014 DOI
~
-psycextra.QB.field15=Email
+PSYCEXTRA.QB.field15=Email
  address \u2014 EA
~
-psycextra.QB.field16=Grant
+PSYCEXTRA.QB.field16=Grant
  \u2014 GI
~
-psycextra.QB.field17=ISBN
+PSYCEXTRA.QB.field17=ISBN
  \u2014 ISBN
~
-psycextra.QB.field18=ISSN
+PSYCEXTRA.QB.field18=ISSN
  \u2014 ISSN
~
-psycextra.QB.field19=Notes
+PSYCEXTRA.QB.field19=Notes
  \u2014 NT
~
-psycextra.QB.field20=Release
+PSYCEXTRA.QB.field20=Release
  date \u2014 RD
~
-psycextra.QB.field21=Tag
+PSYCEXTRA.QB.field21=Tag
  \u2014 TAG
~
-psycextra.QB.field22=Test
+PSYCEXTRA.QB.field22=Test
  and measure \u2014 TM
~
 
~
 #Publication date Options PD
~
-psycextra.PD.dateRangeForm=STANDARD
~
-psycextra.PD.field1=All
+PSYCEXTRA.PD.dateRangeForm=STANDARD
~
+PSYCEXTRA.PD.field1=All
  dates
~
-psycextra.PD.field2=Last
+PSYCEXTRA.PD.field2=Last
  7 days
~
-psycextra.PD.field3=Last
+PSYCEXTRA.PD.field3=Last
  30 days
~
-psycextra.PD.field4=Last
+PSYCEXTRA.PD.field4=Last
  3 months
~
-psycextra.PD.field5=Last
+PSYCEXTRA.PD.field5=Last
  12 months
~
-psycextra.PD.field6=Last
+PSYCEXTRA.PD.field6=Last
  3 years
~
-psycextra.PD.field7=On
+PSYCEXTRA.PD.field7=On
  this date...
~
-psycextra.PD.field8=After
+PSYCEXTRA.PD.field8=After
  this date...
~
-psycextra.PD.field9=Before
+PSYCEXTRA.PD.field9=Before
  this date...
~
-psycextra.PD.field10=Specific
+PSYCEXTRA.PD.field10=Specific
  date range...
~
 
~
 #Exposed search fields -- ESF
~
-psycextra.ESF.fields.count=3
~
-psycextra.ESF.field1=Content
+PSYCEXTRA.ESF.fields.count=3
~
+PSYCEXTRA.ESF.field1=Content
  owner:%contentOwner%Look up Content owners
~
-psycextra.ESF.field2=Classification:%clClassification%Look
+PSYCEXTRA.ESF.field2=Classification:%clClassification%Look
  up Classifications
~
-psycextra.ESF.field3=Location:%location%Look
+PSYCEXTRA.ESF.field3=Location:%location%Look
  up Locations
~
-psycextra.ESF.field1.mnemonic=con
~
-psycextra.ESF.field2.mnemonic=cl
~
-psycextra.ESF.field3.mnemonic=lo
~
-psycextra.ESF.searchTerm.field1=APA
~
-psycextra.ESF.searchTerm.field2=Neuroses
+PSYCEXTRA.ESF.field1.mnemonic=con
~
+PSYCEXTRA.ESF.field2.mnemonic=cl
~
+PSYCEXTRA.ESF.field3.mnemonic=lo
~
+PSYCEXTRA.ESF.searchTerm.field1=APA
~
+PSYCEXTRA.ESF.searchTerm.field2=Neuroses
  & Anxiety Disorders
~
-psycextra.ESF.searchTerm.field3=canada
+PSYCEXTRA.ESF.searchTerm.field3=canada
 
~
 
~
 #PsycExtra QBFields and search terms
~
 #PSYCEXTRA.QB.fields.terms.count=23
~
-psycextra.QB.term.field1=all%%anxiety
~
-psycextra.QB.term.field2=ab%%anxiety
~
-psycextra.QB.term.field3=au%%smith
~
-psycextra.QB.term.field4=ti%%anxiety
+PSYCEXTRA.QB.term.field1=all%%anxiety
~
+PSYCEXTRA.QB.term.field2=ab%%anxiety
~
+PSYCEXTRA.QB.term.field3=au%%smith
~
+PSYCEXTRA.QB.term.field4=ti%%anxiety
  scale
~
-psycextra.QB.term.field5=lo%%canada
~
-psycextra.QB.term.field6=pub%%Annual
+PSYCEXTRA.QB.term.field5=lo%%canada
~
+PSYCEXTRA.QB.term.field6=pub%%Annual
  Convention of the American Psychological Association
~
-psycextra.QB.term.field7=su%%stress
+PSYCEXTRA.QB.term.field7=su%%stress
  disorders
~
-psycextra.QB.term.field8=if%%anxiety
+PSYCEXTRA.QB.term.field8=if%%anxiety
  scale
~
 psycextra.QB.term.field9= an%%355882004-001
~
-psycextra.QB.term.field10=
+PSYCEXTRA.QB.term.field10=
  af%%Kansas State University 
~
-psycextra.QB.term.field11=
+PSYCEXTRA.QB.term.field11=
  cl%%Neuroses & Anxiety Disorders
~
-psycextra.QB.term.field12=
+PSYCEXTRA.QB.term.field12=
  cf%%Conference held at the University of Kansas, Lawrence, Kansas on May 13-14, 2004.
~
-psycextra.QB.term.field13=con%%APA
~
-psycextra.QB.term.field14=ca%%Michigan
+PSYCEXTRA.QB.term.field13=con%%APA
~
+PSYCEXTRA.QB.term.field14=ca%%Michigan
  state university
~
-psycextra.QB.term.field15=doi%%10.1037/e384152004-001
~
-psycextra.QB.term.field16=ea%%edu
~
-psycextra.QB.term.field17=gi%%Michigan
+PSYCEXTRA.QB.term.field15=doi%%10.1037/e384152004-001
~
+PSYCEXTRA.QB.term.field16=ea%%edu
~
+PSYCEXTRA.QB.term.field17=gi%%Michigan
  state university
~
-psycextra.QB.term.field18=isbn%%1433803232
~
-psycextra.QB.term.field19=issn%%1529-1014
~
-psycextra.QB.term.field20=nt%%Includes
+PSYCEXTRA.QB.term.field18=isbn%%1433803232
~
+PSYCEXTRA.QB.term.field19=issn%%1529-1014
~
+PSYCEXTRA.QB.term.field20=nt%%Includes
  manual
~
-psycextra.QB.term.field21=rd%%20080225
~
-psycextra.QB.term.field22=tm%%Revised
+PSYCEXTRA.QB.term.field21=rd%%20080225
~
+PSYCEXTRA.QB.term.field22=tm%%Revised
  Children's Manifest Anxiety Scale
~
-psycextra.QB.term.field23=tm%%10.1037/t00514-000
+PSYCEXTRA.QB.term.field23=tm%%10.1037/t00514-000
 
~
 
~
 #PQ-14246 PSYCEXTRA browse indexes
~
 #Browse indexes -- AC 1,2
~
-psycextra.BI.fields.count=6
~
-psycextra.BI.field1=browseIndexSpanrow0au%Look
+PSYCEXTRA.BI.fields.count=6
~
+PSYCEXTRA.BI.field1=browseIndexSpanrow0au%Look
  up Authors
~
-psycextra.BI.field2=browseIndexSpanrow0pub%Look
+PSYCEXTRA.BI.field2=browseIndexSpanrow0pub%Look
  up Publications
~
-psycextra.BI.field3=browseIndexSpanrow0lo%Look
+PSYCEXTRA.BI.field3=browseIndexSpanrow0lo%Look
  up Locations
~
-psycextra.BI.field4=browseIndexSpanrow0su%Look
+PSYCEXTRA.BI.field4=browseIndexSpanrow0su%Look
  up Subjects
~
-psycextra.BI.field5=browseIndexSpanrow0cl%Look
+PSYCEXTRA.BI.field5=browseIndexSpanrow0cl%Look
  up Classifications
~
-psycextra.BI.field6=browseIndexSpanrow0con%Look
+PSYCEXTRA.BI.field6=browseIndexSpanrow0con%Look
  up Content owners
~
 
~
 #PQ-14246 psycextra Complex Limiters
~
-psycextra.CL.fields.count=6
~
-psycextra.CL.field1=Record
+PSYCEXTRA.CL.fields.count=6
~
+PSYCEXTRA.CL.field1=Record
  type:%selectAll_RecordType
~
-psycextra.CL.field2=Content
+PSYCEXTRA.CL.field2=Content
  owner type:%selectAll_ContentOwnerType
~
-psycextra.CL.field3=Language:%selectAll_Language
~
-psycextra.CL.field4=Age
+PSYCEXTRA.CL.field3=Language:%selectAll_Language
~
+PSYCEXTRA.CL.field4=Age
  group:%selectAll_AgeGroupDynamic
~
-psycextra.CL.field5=Population:%selectAll_Population
~
-psycextra.CL.field6=Media
+PSYCEXTRA.CL.field5=Population:%selectAll_Population
~
+PSYCEXTRA.CL.field6=Media
  type:%selectAll_MediaType
~
-psycextra.CL.field1.mnemonic=rtype
~
-psycextra.CL.field2.mnemonic=cot
~
-psycextra.CL.field3.mnemonic=la
~
-psycextra.CL.field4.mnemonic=age
~
-psycextra.CL.field5.mnemonic=pop
~
-psycextra.CL.field6.mnemonic=mdt
+PSYCEXTRA.CL.field1.mnemonic=rtype
~
+PSYCEXTRA.CL.field2.mnemonic=cot
~
+PSYCEXTRA.CL.field3.mnemonic=la
~
+PSYCEXTRA.CL.field4.mnemonic=age
~
+PSYCEXTRA.CL.field5.mnemonic=pop
~
+PSYCEXTRA.CL.field6.mnemonic=mdt
 
~
 
~
 #PQ-14246 PSYCEXTRA Complex Limiters
~
 #RILM.CL.fields.count=1
~
diff --git a/Regression/src/main/resources/Docview.properties b/Regression/src/main/resources/Docview.properties
index c56eaed..3d2efcc 100755
--- a/Regression/src/main/resources/Docview.properties
+++ b/Regression/src/main/resources/Docview.properties
@@ -738,7 +738,7 @@ TRENCHJOURNALS.IF.field24=Document URL
 TRENCHJOURNALS.IF.field25=Database 
~
 TRENCHJOURNALS.IF.field26=Copyright
~
 
~
 #PQ-15252 
-Psycextra
+PSYCEXTRA
  IndexFields
~
 #New format of specifying index fields IF.field1=fieldname%%searchterm%%format%%value-separator
~
 #%% : field property separator
~
 #fieldname : as it appears on docview, be aware there is a trailing space in the html source for all fieldnames.
~
diff --git a/Regression/src/main/resources/ResultsPage.properties b/Regression/src/main/resources/ResultsPage.properties
index e8256af..8fff078 100755
--- a/Regression/src/main/resources/ResultsPage.properties
+++ b/Regression/src/main/resources/ResultsPage.properties
@@ -261,7 +261,7 @@ LNU.RF.field11=Classification (JP F Terms)
 LNU.RF.field12=Legal status
~
 LNU.RF.field13=Publication date
~
   
~
-#PsycExtra
+#PSYCEXTRA
 
~
 PSYCEXTRA.RF.fields.count=10
~
 PSYCEXTRA.RF.field1=Source type
~
 PSYCEXTRA.RF.field2=Publication title
~
@@ -273,7 +273,7 @@ PSYCEXTRA.RF.field7=Population
 PSYCEXTRA.RF.field8=Content owner type
~
 PSYCEXTRA.RF.field9=Language
~
 PSYCEXTRA.RF.field10=Publication date
~
 # Available Display Formats for 
-PsycExtra.
+PSYCEXTRA.
 
~
 PSYCEXTRA.DF.fields.count=2
~
 PSYCEXTRA.DF.field1=abstract
~
 PSYCEXTRA.DF.field2=pdf
~
diff --git a/WebApp/WebContent/WEB-INF/config/Sites/BrowseTopic.properties b/WebApp/WebContent/WEB-INF/config/Sites/BrowseTopic.properties
index 34b746a..995e5a4 100644
--- a/WebApp/WebContent/WEB-INF/config/Sites/BrowseTopic.properties
+++ b/WebApp/WebContent/WEB-INF/config/Sites/BrowseTopic.properties
@@ -16,7 +16,7 @@ business.Products.IndustryMarket = abiglobal,entrepreneurship,entrepreneurshipal
 business.Products.TopicGuide = abiglobal,abitrade,abidateline,abicomplete,pqcentral,abiprofessional,pqcentralprof
~
 business.Products.FirstResearch = abitrade,abicomplete,pqcentral,abiprofessional,pqcentralprof
~
 business.Products.JustSeries = abiglobal,abicomplete,pqcentral,abiprofessional,pqcentralprof,entrepreneurship,entrepreneurshipalumni
~
 business.Products.CountryData = 
-abitrade,abicomplete,pqcentral,abiprofessional,pqcentralprof
+abitrade,abicomplete,pqcentral,abiprofessional,pqcentralprof,eiuarchive
~
 business.Products.ViewsWire = abiglobal,abicomplete,pqcentral,abiprofessional,pqcentralprof
~
 business.Products.SnapIndusRep = snapshots,entrepreneurship,pqcentral,pqcentralprof
~
 
~
diff --git a/WebApp/WebContent/WEB-INF/config/Sites/NPCBrowse.properties b/WebApp/WebContent/WEB-INF/config/Sites/NPCBrowse.properties
index 17c65bd..43c0209 100644
--- a/WebApp/WebContent/WEB-INF/config/Sites/NPCBrowse.properties
+++ b/WebApp/WebContent/WEB-INF/config/Sites/NPCBrowse.properties
@@ -521,6 +521,7 @@ eiuarchive.title = Economist Intelligence Unit (EIU) Country Reports Archive
 eiuarchive.bdl = 1008882
~
 eiuarchive.AtoZThreshold = 99999
~
 eiuarchive.AtoZ = false
~
+eiuarchive.defaultDateSort = DateDesc
 
~
 eiuarchive.searchTerm.child = true
~
 eiuarchive.searchTerm.field = global:BrowseType
~
 eiuarchive.searchTerm.value = NPC_EIUCountryArchive
~
diff --git a/WebApp/WebContent/styles/ContentLayout.css b/WebApp/WebContent/styles/ContentLayout.css
index 178bf6e..d3ec581 100755
--- a/WebApp/WebContent/styles/ContentLayout.css
+++ b/WebApp/WebContent/styles/ContentLayout.css
@@ -1074,10 +1074,8 @@ li.leftAlignFont,li.centerAlignFont,li.rightAlignFont{margin:0!important}
 .libraryBranding_link{margin-bottom:10px !important}
~
 .libraryBrandingIndex{width:120px;}
~
 #BasicHeaderBranding{height:128px;}
~
-#HeaderBranding{height:75px; text-align:right;}
~
-#HeaderBranding img{max-height:70px;width:auto;}
~
 .truncLink{white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 120px;}
~
 .NotruncLink{width: 120px;word-wrap: break-word;overflow: 
-hidden;max-height:112px; text-align:left;}
+hidden;max-height:112px;}
 
~
 #libraryBranding_footer ul.footerBranding{float:right;}
~
 .customImagesAndLinks{width:120px;padding:20px 0}
~
 .narrowByWrapper{padding:0 0 5px 0}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewBase.java
index ffdd64e..de8c1ff 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewBase.java
@@ -64,8 +64,8 @@ import com.caucus.apps.corelib.media.MediaAttachment;
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.myresearch.DocumentMyResearchItems;
~
 import com.caucus.apps.corelib.myresearch.FigureTableMyResearchItems;
~
@@ -710,7 +710,7 @@ public class DocViewBase extends AbstractContentItemBase implements ViewPage, Fi
 											DisplayFormat.IllustrataThumbnails.getUrlSuffix(),
~
 											resultsID,
~
 											1,
~
 											
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM).get(0).getInlineNum(),
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.THUM).get(0).getInlineNum(),
  
~
 											selectedItem.getUniqueID().getItemId(),
~
 											DisplayFormatService.PAGE_DOCVIEW};
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewEmailBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewEmailBase.java
index 3012255..4e976b0 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewEmailBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/DocViewEmailBase.java
@@ -56,8 +56,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.media.RightsMapImpl;
~
@@ -562,7 +562,7 @@ public class DocViewEmailBase extends EmailBase {
 	private Media getAttachedIllustrataImage(MediaIndex mindex) {
~
 		Document doc = emailDocuments.get(item.getUniqueID());
~
 		String imageIndex = doc.getPageRange();
~
 		List<MediaAttachment> thumbnailsList = 
-mindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mindex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		thumbnailsList = ImageUtils.sortThumbNails(thumbnailsList);
~
 		int imgIndex = imageIndex != null ? Integer.parseInt(imageIndex) : 0;
~
 		if (thumbnailsList.size() > imgIndex) {
~
@@ -570,10 +570,10 @@ public class DocViewEmailBase extends EmailBase {
 		} else if (thumbnailsList.size() == 1) {
~
 			this.currentIllustrataImage = thumbnailsList.get(0);
~
 		}
~
 		Media media = 
-mindex.getMediaByInlineNumber(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL,
+mindex.getMediaByInlineNumber(Role.IXI, SubRole.FULL,
  this.currentIllustrataImage
~
 				.getInlineNum());
~
 		if (media == null) {
~
 			media = 
-mindex.getMediaByInlineNumber(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+mindex.getMediaByInlineNumber(Role.IXI, SubRole.THUM,
  this.currentIllustrataImage.getInlineNum());
~
 		}
~
 		return media;
~
 	}
~
@@ -1039,7 +1039,7 @@ public class DocViewEmailBase extends EmailBase {
 		List<Media> mediaList = new ArrayList<Media>();
~
 		List<MediaAttachment> thumbnailsList = getTextAttachments();
~
 		for (MediaAttachment ma : thumbnailsList) {
~
 			Media media = 
-mindex.getMediaByInlineNumber(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+mindex.getMediaByInlineNumber(Role.IXI, SubRole.THUM,
  ma.getInlineNum());
~
 			mediaList.add(media);
~
 		}
~
 		return mediaList;
~
@@ -1049,7 +1049,7 @@ public class DocViewEmailBase extends EmailBase {
 		List<MediaAttachment> mediaList = new ArrayList<MediaAttachment>();
~
 		MediaIndex mindex = getMediaIndex();
~
 		if (isCitationAbstractAndImages() || isFullTextWithIllustrataImages()) {
~
 			mediaList = 
-mindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mindex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 			mediaList = ImageUtils.sortThumbNails(mediaList);
~
 		}
~
 		return mediaList;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/PdfDocViewBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/PdfDocViewBase.java
index e5c7466..b044b67 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/PdfDocViewBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/PdfDocViewBase.java
@@ -20,8 +20,8 @@ import com.caucus.apps.corelib.media.Media;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/RssPageBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/RssPageBase.java
index df20938..c95bc3f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/RssPageBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/RssPageBase.java
@@ -54,6 +54,8 @@ import com.caucus.apps.corelib.media.MediaAttachment;
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.media.RightsMapImpl;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.SortSelectModel.SortTypes;
~
 import com.caucus.apps.corelib.myresearch.MyResearchServiceException;
~
@@ -749,7 +751,7 @@ public class RssPageBase extends AbstractContentItemBase implements FieldSourceP
 
~
 		// Setting to check images without duplicates
~
 		if (mediaIndex != null && restrictionService.isIllustrataImageAvailable(mediaIndex.getItem(), false)) {
~
 			List<MediaAttachment> thumbnails = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 
~
 			if (thumbnails.size() != 0) {
~
 				initPinkyNails(thumbnails);
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/SaveAsFileBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/SaveAsFileBase.java
index 472d631..4164d04 100755
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/SaveAsFileBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/SaveAsFileBase.java
@@ -86,8 +86,8 @@ import com.caucus.apps.corelib.markedlist.MarkedListService;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
@@ -304,6 +304,13 @@ public abstract class SaveAsFileBase implements SaveAsDownloadable {
 	 * All rendering preparation shall go in this method.
~
 	 */
~
 	protected abstract void prepareDataForRender() throws SearchEngineException;
~
 	
~
 	
+private static final  Map<Role, SubRole> roleAndSubRoleMap;
~
+	static {
~
+		roleAndSubRoleMap = new HashMap<Role, SubRole>();
~
+		roleAndSubRoleMap.put(Role.PG, SubRole.NORM);
~
+		roleAndSubRoleMap.put(Role.IM, SubRole.PCMI);
~
+	}
 
~
 
~
 	/**
~
 	 * Prepare necessary client id's post fix in order for identifying components uniquely.
~
@@ -1727,11 +1734,12 @@ public abstract class SaveAsFileBase implements SaveAsDownloadable {
 		return restrictionService;
~
 	}
~
 
~
 	
-protected
+public
  Map<Role, SubRole> getRoleAndSubrole() {
~
 		
+return roleAndSubRoleMap;
~
+//
 		Map<Role, SubRole> roleAndSubrole = new HashMap<Role, SubRole>();
~
+//
 		roleAndSubrole.put(Role.PG, SubRole.NORM);
~
+//
 		roleAndSubrole.put(Role.IM, SubRole.PCMI);
~
+//
 		return roleAndSubrole;
~
 	}
~
 
~
 	/**
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/StdDocViewPageBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/StdDocViewPageBase.java
index 4abe4c5..6db793f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/StdDocViewPageBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/StdDocViewPageBase.java
@@ -24,8 +24,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.myresearch.DocumentMyResearchItems;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBase.java b/WebApp/src/main/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBase.java
index 5ef8e8c..4d68bbd 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBase.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBase.java
@@ -36,6 +36,8 @@ import com.caucus.apps.corelib.media.MediaAttachment;
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.media.RightsMapImpl;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.SearchEngine;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
@@ -515,7 +517,7 @@ public class SearchAlertEmailBase extends AlertEmailBase implements FieldSourceP
 	public String getCaption() {
~
 		String str = "";
~
 		List<MediaAttachment> mediaAttachments =
~
 				
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				List<String> categories = ma.getCategories();
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/BrowseChild.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/BrowseChild.java
index bcabe86..222033b 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/BrowseChild.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/BrowseChild.java
@@ -586,6 +586,13 @@ public class BrowseChild
 		if (!BrowseResults.SORTTYPES.contains(sites.getPreferredSortType())) {
~
 			query.setSortType(SortTypes.titleAsc.toString());
~
 		}
~
 		
+String defaultSort = browseTermHelper.getSortType(browseName);
~
+		if (StringUtils.isNotBlank(defaultSort)) {
~
+			SortTypes sTypeFromProperty = (defaultSort.equalsIgnoreCase(SortTypes.DateDesc.toString()) ? SortTypes.DateDesc : SortTypes.DateAsc);
~
+			query.setSortType(sTypeFromProperty.toString());
~
+			resultsPage.setSortType(sTypeFromProperty);
~
+		}
 
~
 
~
 		ResultsList results = null;
~
 		try {
~
 			query.addSearchParameter(OnDemandSearchLimiter.SEARCHPARAM_NAVIGATORS, StringUtils.join(browseTermHelper.fetchFilterWithDateNavs(browseName), ","));
~
@@ -614,6 +621,11 @@ public class BrowseChild
 		resultsPage.setResultsId(results.getResultsID());
~
 		resultsPage.setDateBrowse(browseTermHelper.isDateBrowseEnabled(browseName));
~
 		resultsPage.setBrowseTitle(title);
~
 		
+SortTypes sortTypeInQueryData = SortTypes.find(query.getSortType());
~
+		if (sortTypeInQueryData != null) {
~
+			resultsPage.setSortType(sortTypeInQueryData);
~
+		}
 
~
 
~
 		
~
 		return resultsPage;
~
 	}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacy.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacy.java
index ba82739..23a4e5d 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacy.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacy.java
@@ -45,8 +45,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.media.mindexv2.RelatedId;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItem.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItem.java
index 46aba94..c9a9ec9 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItem.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItem.java
@@ -11,8 +11,9 @@ import org.slf4j.Logger;
 
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
-import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -61,8 +62,7 @@ public class DisplayFigTableResultsItem extends DisplayResultsItem
 	public String getCaption() {
~
 		String str = "";
~
 		List<MediaAttachment> mediaAttachments =
~
 				
-mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(MediaIndex.Role.IXI,
~
-						MediaIndex.SubRole.THUM);
+mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				List<String> categories = ma.getCategories();
~
@@ -117,7 +117,7 @@ public class DisplayFigTableResultsItem extends DisplayResultsItem
 	}
~
 
~
 	private boolean isFullSizeImage() {
~
 		List<MediaAttachment> mediaAttachments = 
-mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL);
+mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(Role.IXI, SubRole.FULL);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				String imageCategory = (ma.getCategories() != null) ? ma.getCategories().get(0) : null;
~
@@ -141,7 +141,7 @@ public class DisplayFigTableResultsItem extends DisplayResultsItem
 	}
~
 
~
 	public boolean isMoreThanOneFormatSpreadsheetLink() {
~
 		List<MediaAttachment> mediaAttachments = 
-mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma != null && ma.getPath() != null) {
~
@@ -155,7 +155,7 @@ public class DisplayFigTableResultsItem extends DisplayResultsItem
 	public String getSpreadsheetLink() {
~
 		Operation opUsage = new Operation();
~
 		opUsage.setOpType(OperationTypeValues.Online.toString());
~
 		List<MediaAttachment> mediaAttachments = 
-mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma == null || ma.getPath() == null) {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarning.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarning.java
index d05f77c..632a831 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarning.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarning.java
@@ -10,8 +10,8 @@ import org.apache.tapestry5.ioc.annotations.Inject;
 import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.refworks.parser.ObjectIDType;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.util.DateFormatUtil;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DocImageSaveAsPresentation.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DocImageSaveAsPresentation.java
index 7387f32..b86e71e 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/DocImageSaveAsPresentation.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/DocImageSaveAsPresentation.java
@@ -60,8 +60,8 @@ import org.w3c.dom.NodeList;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/EmailItem.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/EmailItem.java
index 81e5d7f..da99d7e 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/EmailItem.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/EmailItem.java
@@ -62,8 +62,8 @@ import com.caucus.apps.corelib.markedlist.MarkedListService;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFile.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFile.java
index 05545ef..194ed8e 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFile.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFile.java
@@ -15,8 +15,8 @@ import org.apache.tapestry5.annotations.SetupRender;
 import org.apache.tapestry5.json.JSONObject;
~
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.services.saveas.CitationType;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFile.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFile.java
index 41de1ec..7f14db2 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFile.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFile.java
@@ -20,8 +20,8 @@ import org.slf4j.Logger;
 
~
 import com.caucus.apps.core.services.auth.Account;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OptionsBar.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OptionsBar.java
index 25c8081..47503d5 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OptionsBar.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OptionsBar.java
@@ -20,8 +20,8 @@ import org.apache.tapestry5.services.javascript.JavaScriptSupport;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.util.DurableURL;
~
@@ -48,14 +48,12 @@ public class OptionsBar
 	@Parameter(name = "token") @Property private String authToken;
~
 	@Parameter  @Property private String selectedFormat;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Parameter
~
 	@Property private String location;
~
 
~
 	@Parameter(required = true)
~
 	@Property private String title;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Parameter
~
 	@Property private Object[] ctxt;
~
 	
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OtherFormatLinks.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OtherFormatLinks.java
index 4fa4063..379e86a 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OtherFormatLinks.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OtherFormatLinks.java
@@ -5,7 +5,6 @@ import java.io.ByteArrayOutputStream;
 import java.io.IOException;
~
 import java.io.InputStream;
~
 import java.io.OutputStream;
~
-import java.util.ArrayList;
~
 import java.util.Collections;
~
 import java.util.Date;
~
 import java.util.HashMap;
~
@@ -26,22 +25,19 @@ import org.apache.tapestry5.services.Response;
 import org.slf4j.Logger;
~
 
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
-import com.caucus.apps.core.services.usagelogging.RetrieveItem;
~
 import com.caucus.apps.corelib.components.CaptureMarkup;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.SearchHistory;
~
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
 import com.caucus.apps.corelib.search.databaseusage.DatabaseUsageAnalyzer;
~
 import com.caucus.apps.corelib.services.saveas.CitationType;
~
-import com.caucus.apps.corelib.usage.UsageLogging;
~
-import com.caucus.apps.corelib.usage.UsageLoggingDataObject;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.apps.onesearch.fop.CitationParser;
~
@@ -52,7 +48,6 @@ import com.caucus.apps.onesearch.services.EMSURLGenerator;
 import com.caucus.apps.onesearch.services.PaymentTypeService;
~
 import com.caucus.apps.onesearch.services.ReferrerLogic;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
-import com.caucus.apps.onesearch.services.UsageLoggingAppHelper;
~
 import com.caucus.apps.onesearch.services.media.RestrictionService;
~
 import com.caucus.apps.onesearch.util.ImageInfo;
~
 import com.caucus.services.usagelogging.OperationTypeValues;
~
@@ -68,7 +63,6 @@ public class OtherFormatLinks extends ContentItemLinks {
 	@Inject private DocViewPdfService docViewPdfService;
~
 	@Inject private EMSURLGenerator emsURLGenerator;
~
 	@Inject private PaymentTypeService paymentTypeService;
~
-	@Inject private UsageLoggingAppHelper loggingHelper;
~
 	@Inject private DatabaseUsageAnalyzer databaseUsageAnalyzer;
~
 	@Inject private MarkedListService markedList;
~
 	@Inject private ComponentResources resources;
~
@@ -78,7 +72,6 @@ public class OtherFormatLinks extends ContentItemLinks {
 
~
 	@InjectComponent private CaptureMarkup noTitleCitation;
~
 
~
-	@SessionState private UsageLogging usageLog;
~
 	@SessionState private DatabaseListManager dbListManager;
~
 	@SessionState private PricingListManager plm;
~
 	@SessionState private SearchHistory history;
~
@@ -208,9 +201,9 @@ public class OtherFormatLinks extends ContentItemLinks {
 	public String getZipFilePath() {
~
 		String zipFilePath = null;
~
 		MediaAttachment mediaAttachment = getZipFileMedia();
~
-		Operation opUsage = new Operation();
~
-		opUsage.setOpType(OperationTypeValues.Save.toString());
~
 		if (mediaAttachment != null) {
~
 			
+Operation opUsage = new Operation();
~
+			opUsage.setOpType(OperationTypeValues.Save.toString());
 
~
 			//TODO PQ-3459 Check if there's any way a QueryData (for list of searched databases) could possibly
~
 			// be relevant here (for the null).
~
 			zipFilePath = emsURLGenerator.getURL(DisplayFormat.ZipFileDownload, mediaAttachment, mediaAttachment.getPath(), getItem(),
~
@@ -234,27 +227,8 @@ public class OtherFormatLinks extends ContentItemLinks {
 		String url = getZipFilePath();
~
 		try {
~
 			response.sendRedirect(url);
~
-			logZipFileDownloadUsage(); // Usage Logging
~
 		} catch (IOException e) {
~
 			logger.error("fail to 
-rediect reponse
+redirect response
  object to ZIP file URL:" + e.getMessage());
-}
~
-	}
~
-
~
-	private void logZipFileDownloadUsage() {
~
-		Operation operation = new Operation();
~
-		operation.setOpType(OperationTypeValues.Save.toString());
~
-
~
-		UsageLoggingDataObject usageLoggingDataObject = new UsageLoggingDataObject();
~
-		usageLoggingDataObject.setResultsItem(getItem());
~
-		usageLoggingDataObject.setDisplayFormat(DisplayFormat.ZipFileDownload);
~
-		usageLoggingDataObject.setFromResultsPageIndicator(false);
~
-
~
-		RetrieveItem retrieveItem = loggingHelper.generateRetrieveItemForLogging(usageLog, usageLoggingDataObject, 
~
-				dbListManager, bean, plm, history);
~
-		if (retrieveItem != null && retrieveItem.getUsageInfo() != null && !retrieveItem.getUsageInfo().isEmpty()) {
~
-			ArrayList<RetrieveItem> retrieveItemList = new ArrayList<RetrieveItem>();
~
-			retrieveItemList.add(retrieveItem);
~
-			usageLog.logMultiPleRetrieve(retrieveItemList.toArray(new RetrieveItem[0]), operation, "OS-OtherFormatLinks-logZipFileDownloadUsageTest", "", "");
 
~
 		}
~
 	}
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFile.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFile.java
index c97dd0c..96c611f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFile.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFile.java
@@ -5,7 +5,6 @@ import static com.caucus.apps.onesearch.services.SitesService.CFGKEY_PRODUCTCO
 import java.util.List;
~
 import java.util.Map;
~
 import java.util.Set;
~
-import java.util.concurrent.ConcurrentHashMap;
~
 
~
 import org.apache.commons.collections.CollectionUtils;
~
 import org.apache.commons.collections.Predicate;
~
@@ -27,8 +26,8 @@ import com.caucus.apps.core.services.auth.LinkResolverDetail;
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.resolvers.OutboundLinkResolver;
~
 import com.caucus.apps.corelib.search.SearchHistory;
~
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/PageImagePrintView.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/PageImagePrintView.java
index d621adf..799bd52 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/PageImagePrintView.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/PageImagePrintView.java
@@ -15,8 +15,8 @@ import org.slf4j.Logger;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.QueryData;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/PinkynailPreview.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/PinkynailPreview.java
index 6264121..ac7c9f1 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/PinkynailPreview.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/PinkynailPreview.java
@@ -20,7 +20,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex;
+com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -136,7 +137,7 @@ public class PinkynailPreview extends ContentItemBase
 
~
 	private void setPinkynail(int imageSequence) {
~
 		List<MediaAttachment> mediaAttachments =
~
 				
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				List<String> categories = ma.getCategories();
~
@@ -195,7 +196,7 @@ public class PinkynailPreview extends ContentItemBase
 
~
 	private boolean isFullSizeImage() {
~
 		List<MediaAttachment> mediaAttachments =
~
 				
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.FULL);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (int i = 0; i < mediaAttachments.size(); i++) {
~
 				MediaAttachment ma = mediaAttachments.get(i);
~
@@ -220,7 +221,7 @@ public class PinkynailPreview extends ContentItemBase
 	}
~
 
~
 	public boolean isMoreThanOneFormatSpreadsheetLink() {
~
 		List<MediaAttachment> mediaAttachments = 
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma != null && ma.getOrder() == pinkynail.getOrder() && ma.getPath() != null &&
~
@@ -236,7 +237,7 @@ public class PinkynailPreview extends ContentItemBase
 	public String getSpreadsheetLink() {
~
 		Operation opUsage = new Operation();
~
 		opUsage.setOpType(OperationTypeValues.Online.toString());
~
 		List<MediaAttachment> mediaAttachments = 
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma == null || ma.getOrder() != pinkynail.getOrder() || ma.getPath() == null ||
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/RelatedDocumentParts.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/RelatedDocumentParts.java
index d728226..6cf3620 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/RelatedDocumentParts.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/RelatedDocumentParts.java
@@ -16,8 +16,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmail.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmail.java
index c04a0e9..1b12789 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmail.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmail.java
@@ -35,8 +35,8 @@ import com.caucus.apps.corelib.components.pagination.DocumentImagePager;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationSelectModel.StandardCaucus;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.models.SelectOptionModelImpl;
~
@@ -81,8 +81,6 @@ public abstract class SaveAsEmail extends SaveAsFileBase {
 	//@formatter:off
~
 	@Property private SaveAsEmailParameter emailParams;
~
 	@Property private String restrictionNote;
~
-	
~
-	@SuppressWarnings("unused")
~
 	@Property private boolean showCopyRightRestrictionsAlert;
~
 	
~
     @SessionAttribute(value = DocumentImagePager.PAGER_CURRENT_PAGE_SESSION_ATTRIBUTE)
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFields.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFields.java
index 0957a74..56a6a69 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFields.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFields.java
@@ -25,18 +25,16 @@ import com.caucus.apps.onesearch.components.transactional.PostProcessingTransa
  */
~
 public class SaveAsEmailCustomFields extends SaveAsCustomFields{
~
 	
~
 	
+//@formatter:off
 
~
 	@Inject @Property private Block messageBlock;
-@Inject
~
-	private Request request;
 
~
 	
~
 	
+@Inject private Request request;
 
~
 	
~
 	@Property boolean showCopyRightRestrictionsAlert;
~
 	@Property private ResultsItem itemFlash;
~
 	
~
 	@InjectComponent private PostProcessingTransactionalLogger transactionalLogger;
~
 	
+//@formatter:on
 
~
 
~
 	@OnEvent(component = CUSTOM_FIELD_FORM_NAME, value = EventConstants.SUBMIT)
~
 	public Object onSubmitSaveAsCustomFieldForm() {
~
@@ -93,8 +91,11 @@ public class SaveAsEmailCustomFields extends SaveAsCustomFields{
 	@Cached
~
 	@Override
~
 	public boolean isPublisherRestriction() {
~
 		return 
-getRestrictionService().isCopyrightRestricted(getDownloadableSource(),
+getRestrictionService()
~
+				.isCopyrightRestricted(
~
+						getDownloadableSource(),
  
~
 						getRoleAndSubrole(),
~
 						Arrays.asList(DeliveryMode.EMAIL, DeliveryMode.EMAIL_FULL));
~
 	}
~
 	
~
 	@Override
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SupplementalFiles.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SupplementalFiles.java
index 395fe64..bbeebb6 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/SupplementalFiles.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/SupplementalFiles.java
@@ -16,8 +16,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
 import com.caucus.services.usagelogging.OperationTypeValues;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/FigTableResultTitle.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/FigTableResultTitle.java
index 49049dd..4f698ad 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/FigTableResultTitle.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/FigTableResultTitle.java
@@ -3,8 +3,8 @@ package com.caucus.apps.onesearch.components.citation;
 import org.apache.tapestry5.ioc.annotations.Inject;
~
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.onesearch.services.ContextService;
~
 
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnails.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnails.java
index 5d15cec..54ac611 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnails.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnails.java
@@ -11,7 +11,8 @@ import org.apache.tapestry5.ioc.annotations.Inject;
 
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex;
+com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.onesearch.pageinterfaces.SearchPage;
~
@@ -130,7 +131,7 @@ public class IllustrataThumbnails extends PinkynailsContainer
 	}
~
 
~
 	private boolean isFullSizeImage() {
~
 		List<MediaAttachment> mediaAttachments = 
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.FULL);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma != null && ma.getOrder() == getPinkynail().getSequenceNumber()) {
~
@@ -153,7 +154,7 @@ public class IllustrataThumbnails extends PinkynailsContainer
 	}
~
 
~
 	public boolean isMoreThanOneFormatSpreadsheetLink() {
~
 		List<MediaAttachment> mediaAttachments = 
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma != null && ma.getOrder() == getPinkynail().getSequenceNumber() && ma.getPath() != null) {
~
@@ -167,7 +168,7 @@ public class IllustrataThumbnails extends PinkynailsContainer
 	public String getSpreadsheetLink() {
~
 		Operation opUsage = new Operation();
~
 		opUsage.setOpType(OperationTypeValues.Online.toString());
~
 		List<MediaAttachment> mediaAttachments = 
-getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG);
+getMediaIndex().getMediaAttachments(Role.IXI, SubRole.ORIG);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				if (ma == null || ma.getOrder() != getPinkynail().getSequenceNumber() || ma.getPath() == null) {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainer.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainer.java
index c240140..82599dc 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainer.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainer.java
@@ -35,6 +35,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
@@ -194,7 +196,7 @@ public class PinkynailsContainer extends ContentItemBase
 		// Setting to check images without duplicates
~
 		if (restrictionService.isIllustrataImageAvailable(mediaIndex.getItem(), false)) {
~
 			List<MediaAttachment> thumbnails =
~
 				
-mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 
~
 			if (thumbnails.size() != 0) {
~
 				initPinkyNails(thumbnails);
~
@@ -202,12 +204,12 @@ public class PinkynailsContainer extends ContentItemBase
 		}
~
 		else if (mediaIndex.isTextAndGraphicsAvailable(false)) {
~
 			List<MediaAttachment> thumbnails =
~
 				
-mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.THUM);
+mediaIndex.getMediaAttachments(Role.ILI, SubRole.THUM);
 
~
 			if (!hasThumbnails(thumbnails)) {
~
 				thumbnails = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL);
+mediaIndex.getMediaAttachments(Role.ILI, SubRole.FULL);
 
~
 			}
~
 			if (!hasThumbnails(thumbnails)) {
~
 				thumbnails = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL);
+mediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL);
 
~
 			}
~
 
~
 			if (thumbnails.size() != 0) {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParent.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParent.java
index ae16af1..949a485 100755
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParent.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParent.java
@@ -1,10 +1,13 @@
 package com.caucus.apps.onesearch.components.citation.view;
~
 
~
+import org.apache.commons.lang.ArrayUtils;
~
 import org.apache.commons.lang.StringUtils;
~
 import org.apache.tapestry5.annotations.Property;
~
 import org.apache.tapestry5.annotations.SetupRender;
~
 import org.apache.tapestry5.ioc.annotations.Inject;
~
 
~
+import com.caucus.apps.core.services.relatedids.RelatedId;
~
+import com.caucus.apps.core.services.relatedids.RelatedIds;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.documents.indexfields.model.data.ExperianParent;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
@@ -13,6 +16,9 @@ import com.caucus.apps.corelib.search.SearchEngine;
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.search.impl.ProxyResultsItem;
~
 import com.caucus.apps.gossamer.relatedids.RelatedidsGoidIdtypeIdResource;
~
+import com.caucus.gossamer.exceptions.CommunicationsException;
~
+import com.caucus.gossamer.exceptions.EncodingDecodingException;
~
+import com.caucus.gossamer.exceptions.MethodFault;
~
 
~
 /**
~
  * Tapestry component for displaying an Experian "parent" or "ultimate parent" company.
~
@@ -38,7 +44,7 @@ public class IndexFieldExperianParent extends AbstractIndexField
 	public void setupRender() {
~
 		experianParentDetail = getValue();
~
 		experianParent = (ExperianParent) experianParentDetail.getValue();
~
 		goid = 
-experianParent.getGoid(relatedIdResource);
+getGoid(experianParent.getRecordId());
~
 	}
~
 	
~
 	public boolean isHasGoid() {
~
@@ -54,5 +60,19 @@ public class IndexFieldExperianParent extends AbstractIndexField
 		ResultsItem item = new ProxyResultsItem (id, null, engine, 1);
~
 		return item;
~
 	}
~
 	
~
 	
+protected String getGoid (String recordId) {
~
+		RelatedIds goids = null;
~
+		try {
~
+			goids = relatedIdResource.get("MstarXID", recordId);
~
+		} catch (EncodingDecodingException | CommunicationsException | MethodFault e) {
~
+		}
~
+		
~
+		if (goids == null)
~
+			return "";
~
+		
~
+		RelatedId[] ids = goids.getRelatedId();
~
+		return (ArrayUtils.isNotEmpty(ids) ? ids[0].getContent() : "");
~
+	}
~
 
~
 }
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFields.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFields.java
index ab8adfd..f7e840b 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFields.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/citation/view/IndexFields.java
@@ -24,10 +24,9 @@ import com.caucus.apps.corelib.documents.indexfields.FieldSource;
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValues;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
-import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
@@ -44,7 +43,6 @@ import com.caucus.apps.onesearch.model.citation.view.ItemValueRenderStack;
 import com.caucus.apps.onesearch.model.citation.view.impl.ReadOnlyItemValueRenderContext;
~
 import com.caucus.apps.onesearch.model.citation.view.impl.SimpleItemValueRenderStack;
~
 import com.caucus.apps.onesearch.pages.DocView;
~
-import com.caucus.apps.onesearch.services.ContentItemLinksService;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
 import com.caucus.apps.onesearch.services.docview.DocViewConfigurationService;
~
 import com.caucus.apps.onesearch.services.docview.DocViewResolver;
~
@@ -108,6 +106,7 @@ public class IndexFields extends AbstractContentItemBase implements FieldSourceP
 	@Inject private FieldFormatter fieldFormatter;
~
 	@Inject private Environment environment;
~
 	@Inject private ComponentResources resources;
~
 	
+@Inject private MediaIndexCacheService mediaIndexCacheService;
 
~
 	
~
 	@Inject private SitesService sites;
~
 	@Inject	private ComponentSource componentSource;
~
@@ -116,8 +115,7 @@ public class IndexFields extends AbstractContentItemBase implements FieldSourceP
 	@SessionState                 private PreferenceData preferenceData;
~
 	@SessionState                 private LogTimings logTimings;
~
 	
~
+//
 	private MediaIndex mediaIndex;
-@Inject private MediaIndexCacheService mediaIndexCacheService;
 
~
 	// @formatter:on
~
 
~
 	@SuppressWarnings("unused")
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/HeaderTitle.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/HeaderTitle.java
index 7bcd9ce..a08d7f9 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/HeaderTitle.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/HeaderTitle.java
@@ -27,8 +27,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.documents.indexfields.FieldSource;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.myresearch.refworks.RefWorksResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeader.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeader.java
index 472d210..a0f9f76 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeader.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeader.java
@@ -28,8 +28,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValues;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.refworks.parser.RefWorksCitationType;
~
 import com.caucus.apps.corelib.myresearch.refworks.parser.ObjectIDType;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocView.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocView.java
index 0834727..1e8b33e 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocView.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/docview/UnAuthDocView.java
@@ -37,8 +37,8 @@ import com.caucus.apps.corelib.base.AbstractContentItemBase;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RMapParser;
~
 import com.caucus.apps.corelib.media.RightsMapImpl;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/figtables/FindRelatedFigTablesLink.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/figtables/FindRelatedFigTablesLink.java
index c21b094..964803f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/figtables/FindRelatedFigTablesLink.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/figtables/FindRelatedFigTablesLink.java
@@ -25,6 +25,7 @@ import org.slf4j.Logger;
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
+import com.caucus.apps.corelib.search.FigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.QueryResultsLocator;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
@@ -46,7 +47,6 @@ import com.caucus.apps.onesearch.pages.FigTableResults;
 import com.caucus.apps.onesearch.parsers.FigAndTablesQueryParser;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
 import com.caucus.apps.onesearch.services.UsageLoggingAppHelper;
~
-import com.caucus.apps.onesearch.services.search.FigTableSearchConverter;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SearchExpressionPreprocessor;
~
 
~
 public class FindRelatedFigTablesLink {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatForm.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatForm.java
index e23dd68..3ad15fc 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatForm.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatForm.java
@@ -27,8 +27,8 @@ import com.caucus.apps.corelib.markedlist.DisplayItemFormat;
 import com.caucus.apps.corelib.markedlist.MarkedListItem;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.ResultsListPagedModel;
~
@@ -59,9 +59,6 @@ public class DisplayFormatForm extends MarkedListDialogComponentBase
 	@Parameter(defaultPrefix = BindingConstants.LITERAL)
~
 	private String destinationPage;
~
 
~
-	private boolean hasAbstract;
~
-	private boolean hasFullText;
~
~
 	@Inject private MarkedListService markedList;
~
 	@Inject private SitesService sites;
~
 	@Inject private Request request;
~
@@ -80,27 +77,12 @@ public class DisplayFormatForm extends MarkedListDialogComponentBase
 	@SessionState private User user;
~
 	@SessionState private TransactionHistory transactionHistory;
~
 
~
-@SuppressWarnings("unused")
~
-	@Property
 	@Inject 
+@Property
  private Block viewSelectedItemsBlock;
-@SuppressWarnings("unused")
~
 	@Inject @Property private Block viewPricingInfoBlock;
~
 	@Inject @Property private Block viewPricingBlock;
-@SuppressWarnings("unused")
~
-	@InjectComponent
~
-	@Property
~
-	private Zone selItemZone;
~
 
~
 	
-@SuppressWarnings("unused")
+@InjectComponent @Property private Zone selItemZone;
~
 	@InjectComponent @Property private Zone pricingZone;
~
 
~
 	//Used in <t:loop displayFormats />
~
 	@Property private String labelText;
~
@@ -108,26 +90,19 @@ public class DisplayFormatForm extends MarkedListDialogComponentBase
 
~
 	@Property private String totalEstimatedPrice;
~
 	@Property private int transactionalRecords;
~
 	
+@Property private String title;
~
+	@Property private boolean showPricing;
~
+	@Property private String spendingLimitMessage;
~
 
~
-@SuppressWarnings("unused") @Property private boolean showPricing;
 	@Persist @Property private DisplayItemFormat storedFormat;
-@SuppressWarnings("unused")
~
-	@Property
~
-	private String title;
~
~
-	@SuppressWarnings("unused")
~
-	@Property
~
-	private String spendingLimitMessage;
~
 
~
 	@Persist private boolean purchasedFormatCheck;
~
 	//@formatter:on
~
 	
~
 	private String PARAM_PRICINGFLAG = "showPricing";
~
 	private ResultsList resultLst;
~
 	
+private boolean hasAbstract;
~
+	private boolean hasFullText;
~
 
~
 
~
 	@BeginRender
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesList.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesList.java
index 9e01e08..6d564f2 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesList.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesList.java
@@ -7,8 +7,9 @@ import org.apache.tapestry5.ioc.annotations.Inject;
 
~
 import com.caucus.apps.corelib.components.ResultsPagedList;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
-import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.Identifiable;
~
 import com.caucus.apps.corelib.myresearch.StorableItem;
~
 import com.caucus.apps.corelib.myresearch.folders.FolderManager;
~
@@ -86,8 +87,7 @@ public class FigTablesList extends DocumentList
 	public String getCaption() {
~
 		String str = "";
~
 		List<MediaAttachment> mediaAttachments =
~
 				
-mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(MediaIndex.Role.IXI,
~
-						MediaIndex.SubRole.THUM);
+mediaIndexCache.getMediaIndex(getItem()).getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		if (mediaAttachments != null && mediaAttachments.size() > 0) {
~
 			for (MediaAttachment ma : mediaAttachments) {
~
 				List<String> categories = ma.getCategories();
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFile.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFile.java
index ab0b4ff..48e7014 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFile.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFile.java
@@ -18,9 +18,8 @@ import org.apache.tapestry5.annotations.SetupRender;
 import org.apache.tapestry5.json.JSONObject;
~
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
@@ -46,7 +45,6 @@ public class FigTablesSaveAsFile extends SaveAsFile {
 	@Parameter(allowNull = false, required = true)
~
 	private ResultsList figTableResultsList;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Property
~
 	private int currentPage;
~
 	@Property
~
@@ -59,7 +57,6 @@ public class FigTablesSaveAsFile extends SaveAsFile {
 	private String pageRangeDocView;
~
 	@Property
~
 	private String reqPageNumbers;
~
-	@SuppressWarnings("unused")
~
 	@Property
~
 	private String reqPageNumbersDocView;
~
 	@Property
~
@@ -128,7 +125,7 @@ public class FigTablesSaveAsFile extends SaveAsFile {
 		if (figTableResultsList != null) {
~
 			for (ResultsItem item : figTableResultsList.getAll()) {
~
 				List<MediaAttachment> list =
~
 						
-getMediaIndexCache().getMediaIndex(item).getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+getMediaIndexCache().getMediaIndex(item).getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 				if (list != null && list.size() > 0) {
~
 					for (MediaAttachment ma : list) {
~
 						List<String> categories = ma.getCategories();
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentDWPIAbstract.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentDWPIAbstract.java
index 7096405..26ed778 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentDWPIAbstract.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentDWPIAbstract.java
@@ -17,6 +17,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.components.CaptureMarkup;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.onesearch.components.docview.Abstract;
~
 import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
@@ -160,7 +162,7 @@ public class PatentDWPIAbstract extends Abstract
 		List<MediaAttachment> abstractDrawings = new ArrayList<MediaAttachment>();
~
 		
~
 		MediaIndex mediaIndex = this.getMediaIndex();
~
 		List<MediaAttachment> media = 
-mediaIndex.getMedia(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL);
+mediaIndex.getMedia(Role.ILI, SubRole.FULL);
 
~
 	
~
 		for(MediaAttachment ma: media) {
~
 			String inlineNum = ma.getInlineNum();			
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentLNUPDFLinks.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentLNUPDFLinks.java
index 7a690b4..5cd080f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentLNUPDFLinks.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/patents/PatentLNUPDFLinks.java
@@ -38,8 +38,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.core.services.usagelogging.TransactionType;
~
 import com.caucus.apps.corelib.markedlist.MarkedListSessionState;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.SearchEngine;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinks.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinks.java
index 5f1b011..0aa5d4b 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinks.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinks.java
@@ -15,6 +15,8 @@ import org.slf4j.Logger;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
@@ -44,18 +46,16 @@ public class ResultsNavigationLinks
 	@Parameter("false")         private boolean userDisplayFormat;
~
 	@Parameter                  private DisplayFormat displayFormat;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Property private ResultsItem resultsItem;
~
 	
~
-	@SuppressWarnings("unused")
~
 	@Persist
~
 	@Property private ResultsItem resultsItemSaved;
~
 
~
 	@Property(write = false) private int index;
~
 	@Property(write = false) private int ofNum = 1;
~
 	
~
-@SuppressWarnings("unused")
 	@Property(write = false) private Object[] nextLinkContext;
-@SuppressWarnings("unused")
 
~
 	@Property(write = false) private Object[] prevLinkContext;
~
 
~
 	@Inject private MediaIndexCacheService mediaIndexCache;
~
 	@Inject private DisplayFormatService displayFormatService;
~
@@ -222,7 +222,7 @@ public class ResultsNavigationLinks
 		if (mediaIndexCache != null) {
~
 			ResultsItem resultItem = results.get(linkIndex);
~
 			MediaIndex mindex = mediaIndexCache.getMediaIndex(resultItem);
~
 			thumbnailsList = 
-mindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mindex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 			thumbnailsList = ImageUtils.sortThumbNails(thumbnailsList);
~
 		}
~
 		return CollectionUtils.isEmpty(thumbnailsList) ? null : thumbnailsList.get(0);
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.java
index 6d2586c..62036ec 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.java
@@ -3,11 +3,13 @@ package com.caucus.apps.onesearch.components.thirdparty;
 import java.util.StringTokenizer;
~
 
~
 import com.caucus.apps.onesearch.services.ApplicationIdentifierService;
~
~
 import org.apache.commons.lang.StringUtils;
~
 import org.apache.tapestry5.ComponentResources;
~
 import org.apache.tapestry5.annotations.AfterRender;
~
 import org.apache.tapestry5.annotations.BeginRender;
~
 import org.apache.tapestry5.annotations.Import;
~
+import org.apache.tapestry5.annotations.SessionState;
~
 import org.apache.tapestry5.annotations.SetupRender;
~
 import org.apache.tapestry5.ioc.annotations.Inject;
~
 import org.apache.tapestry5.json.JSONObject;
~
@@ -15,6 +17,7 @@ import org.apache.tapestry5.services.RequestGlobals;
 import org.apache.tapestry5.services.javascript.JavaScriptSupport;
~
 
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.usage.UsageLogging;
~
 
~
 /**
~
  * <p>
~
@@ -45,6 +48,7 @@ public class ForeSeeSurvey {
 	@Inject private ComponentResources resources;
~
 	@Inject private RequestGlobals requestGlobals;
~
 	@Inject	private ApplicationIdentifierService appIdService;
~
 	
+@SessionState private UsageLogging usageLog;
~
 	//@formatter:on
~
 
~
 	@SetupRender
~
@@ -90,6 +94,7 @@ public class ForeSeeSurvey {
 		if (!StringUtils.contains(parentPage, ".SessionEnded")) {
~
 			spec.put("strSessionID", requestGlobals.getHTTPServletRequest().getSession().getId());
~
 		}
~
 		
+spec.put("strUsageSessionID", usageLog.getSessId());
~
 		javaScriptSupport.addInitializerCall("foreseeSurvey", spec);
~
 	}
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImpl.java
index 6a7fe9c..3bd598e 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImpl.java
@@ -6,8 +6,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.base.ContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/BrowseTerms.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/BrowseTerms.java
index 4da732b..6d3f907 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/BrowseTerms.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/BrowseTerms.java
@@ -545,6 +545,10 @@ public class BrowseTerms
 		resultsPage.setResultsId(results.getResultsID());
~
 		resultsPage.setDateBrowse(browseTermHelper.isDateBrowseEnabled(getBrowseName()));
~
 		resultsPage.setBrowseTitle(browseTitle);
~
 		
+SortTypes sortTypeInQueryData = SortTypes.find(queryData.getSortType());
~
+		if (sortTypeInQueryData != null) {
~
+			resultsPage.setSortType(sortTypeInQueryData);
~
+		}
 
~
 		return resultsPage;
~
 	}
~
 	
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewAudio.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewAudio.java
index 1d7d4a8..0185b29 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewAudio.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewAudio.java
@@ -13,13 +13,12 @@ import org.apache.tapestry5.services.javascript.JavaScriptSupport;
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.onesearch.base.StdDocViewPageBase;
~
 import com.caucus.apps.onesearch.pageinterfaces.ResultsPage;
~
 import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
 import com.caucus.apps.onesearch.services.UsageLoggingAppHelper;
~
-import com.caucus.services.usagelogging.OperationTypeValues;
~
 
~
 
~
 /**
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewVideo.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewVideo.java
index 1452a51..6bd4270 100755
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewVideo.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/DocViewVideo.java
@@ -33,8 +33,8 @@ import org.slf4j.LoggerFactory;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/FlashViewer.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/FlashViewer.java
index 38b8ae1..339a742 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/FlashViewer.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/FlashViewer.java
@@ -40,8 +40,8 @@ import com.caucus.apps.corelib.components.pagination.DocumentImagePager;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/IllustrataImage.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/IllustrataImage.java
index 731acdd..2853782 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/IllustrataImage.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/IllustrataImage.java
@@ -1,6 +1,3 @@
-/**
~
- * 
~
- */
~
 package com.caucus.apps.onesearch.pages;
~
 
~
 import java.util.ArrayList;
~
@@ -12,6 +9,7 @@ import org.apache.commons.lang.StringUtils;
 import org.apache.tapestry5.Block;
~
 import org.apache.tapestry5.Link;
~
 import org.apache.tapestry5.annotations.AfterRender;
~
+import org.apache.tapestry5.annotations.Cached;
 
~
 import org.apache.tapestry5.annotations.Component;
~
 import org.apache.tapestry5.annotations.Import;
~
 import org.apache.tapestry5.annotations.Persist;
~
@@ -29,6 +27,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -53,64 +53,43 @@ import com.caucus.services.usagelogging.OperationTypeValues;
 public class IllustrataImage extends DocViewBase
~
 {
~
 
~
 	
-private
+protected
  static final String MR_DOCUMENTS_PAGE_URL_PATH = "myResearch/Documents";
-private UniqueItemID uniqueId;
~
-	private String resultsId;
~
-	@Property
~
-	@Persist
~
-	private String inlineNum;
~
-	private String source;
 
~
 	
~
 	
-@SessionState(create= false)
+//@formatter:off
~
+	@Persist
  @Property private 
-ResultsItem selectedItem;
~
-
~
-	@Inject
~
-	private EMSURLGenerator emsURLGenerator;
~
-	@Inject
~
-	private Logger logger;
~
-	@Inject
~
-	private SearchEngine engine;
~
-	@Inject
~
-	private MediaIndexCacheService mediaIndexCache;
~
-	@Inject
~
-	private Messages messages;
~
-	@Inject 
~
-	private UsageLoggingAppHelper loggingHelper;
+String inlineNum;
 
~
 	@Persist @Property protected List<MediaAttachment> thumbnailsList;
-@Property
~
-	private DisplayFormat format;
~
-
~
-	@Property
~
-	private MediaAttachment thumbnail;
~
-
~
-	@Persist("flash")
~
-	private ResultsItem goidItem;
~
-
~
-	@Component
~
-	private Zone imageZone;
 
~
 	
~
 	
-@Component
+@SessionState(create= false) @Property
  private 
-ReferenceLinksDocView refLinks;
+ResultsItem selectedItem;
 
~
 
~
 	
+@Inject @Property private Block imageBlock;
~
+	
~
+	@Inject private EMSURLGenerator emsURLGenerator;
~
+	@Inject private Logger logger;
~
+	@Inject private SearchEngine engine;
~
+	@Inject private MediaIndexCacheService mediaIndexCache;
~
+	@Inject private Messages messages;
~
+	@Inject private UsageLoggingAppHelper loggingHelper;
 
~
 	@Inject private Request request;
~
 	@Inject private FieldFormatter fieldFormatter;
~
 	@Inject private PageRenderLinkSource linkSource;
~
-	
~
-	@Inject
~
-	@Property
~
-	private Block imageBlock;
~
 
~
 	
+@Property private DisplayFormat format;
~
+	@Property private MediaAttachment thumbnail;
 
~
 	@Property protected int imageNumber;
~
 	@Property private String imageNumberAndType;
~
 	@Property private String imageCaption;
~
 	@Property private int typeOrderNumber;
~
 
~
 	
+@Persist("flash") private ResultsItem goidItem;
~
+
~
+	@Component private Zone imageZone;
~
+	@Component private ReferenceLinksDocView refLinks;
~
+	//@formatter:on
~
+
~
+	private UniqueItemID uniqueId;
~
+	private String resultsId;
 
~
 	private Object[] context;
~
 	
+private String source;
 
~
 
~
 	@SetupRender
~
 	void setup() throws SearchEngineException {
~
@@ -142,6 +121,25 @@ public class IllustrataImage extends DocViewBase
 		return context;
~
 	}
~
 
~
 	
+public boolean isTable() {
~
+		List<String> categories = thumbnailsList.get(imageNumber).getCategories();
~
+		return (categories != null && categories.contains(PinkynailsContainer.IMAGE_FORMAT_TABLE));
~
+	}
~
+	
~
+	@Cached
~
+	public String getSpreadsheetLink() {
~
+
~
+		try {
~
+			Operation opUsage = new Operation();
~
+			opUsage.setOpType(OperationTypeValues.Online.toString());
~
+			MediaAttachment spreadsheet = getMediaIndex().getMediaAttachments(Role.IXI, SubRole.ORIG).get(getOrder());
~
+			return emsURLGenerator.getURL(DisplayFormat.Spreadsheet, spreadsheet, spreadsheet.getPath(), 
~
+				getItem(), getDatabasesFor(getItem()), opUsage, getFromResultsPage(), "OS:EMS-Spreadsheet", null, null);
~
+		} catch (Exception e) {
~
+			return "";
~
+		}
~
+	}
 	
~
 	
~
 	public Object onActivate(UniqueItemID uniqueId, String format, String resultsId, int resultIndex, String inlineNum,
~
 			String goid, String source)
~
 	{
~
@@ -250,11 +248,11 @@ public class IllustrataImage extends DocViewBase
 		return ma;
~
 	}
~
 
~
 	
-private
+protected
  void setThePage() {
~
 		int imageIndex = -1;
~
 		for (int i = 0; i < thumbnailsList.size(); i++) {
~
 			MediaAttachment ma = thumbnailsList.get(i);
~
 			if 
-(ma.getInlineNum().equals(this.inlineNum))
+(ma.getInlineNum().equals(inlineNum))
  {
~
 				imageIndex = i;
~
 				imageNumber = imageIndex;
~
 				break;
~
@@ -293,9 +291,9 @@ public class IllustrataImage extends DocViewBase
 
~
 	public void initMedia(MediaIndex mediaIndex) {
~
 		
~
 		this.thumbnailsList = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL);
+mediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL);
 
~
 		if ((this.thumbnailsList == null) || (this.thumbnailsList.size() == 0)) {
~
 			this.thumbnailsList = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		}
~
 		this.thumbnailsList = ImageUtils.sortThumbNails(this.thumbnailsList);
~
 	}
~
@@ -319,11 +317,8 @@ public class IllustrataImage extends DocViewBase
 	 * @return boolean
~
 	 */
~
 	public boolean isFromResults() {
~
 		
-if
+return
  ("Results".equalsIgnoreCase(this.source) 
~
 				&& getBackLinkPage() != 
-null) {
~
-			return true;
~
-		} else {
~
-			return false;
~
-		}
+null);
 
~
 	}
~
 
~
 	private boolean isFromMyResearch() {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageImage.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageImage.java
index 9432c25..496d3bc 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageImage.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageImage.java
@@ -34,8 +34,8 @@ import org.slf4j.Logger;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.components.PagedList;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.media.mindexv2.Repattrib;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageMap.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageMap.java
index 688c74d..f71dbfd 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageMap.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PageMap.java
@@ -23,8 +23,8 @@ import com.caucus.apps.core.services.media.pqimage.Mindex;
 import com.caucus.apps.corelib.documents.indexfields.FieldSource;
~
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
@@ -54,7 +54,6 @@ public class PageMap extends DocViewBase
 
~
 	@Inject
~
 	@Property
~
-	@SuppressWarnings("unused")
~
 	private Block pageMapBlock;
~
 
~
 	@InjectPage
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PagePdfPagination.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PagePdfPagination.java
index 50afe3a..1df5145 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PagePdfPagination.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/PagePdfPagination.java
@@ -28,8 +28,8 @@ import com.caucus.apps.corelib.components.PagedList;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.usage.UsageLoggingFlags;
~
 import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
 import com.caucus.apps.onesearch.services.PdfPagination;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalized.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalized.java
index 001c881..c7a31be 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalized.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalized.java
@@ -38,8 +38,8 @@ import com.caucus.apps.corelib.media.Media;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/maintain/M2FQL.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/maintain/M2FQL.java
index 6f97e4b..b52addd 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/maintain/M2FQL.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/maintain/M2FQL.java
@@ -23,6 +23,7 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
~
 import com.caucus.apps.corelib.annotations.OpenPage;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.FigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.QuerySource;
~
 import com.caucus.apps.corelib.search.SearchEngineNativeQueryBean;
~
@@ -39,7 +40,6 @@ import com.caucus.apps.onesearch.services.SitesService;
 import com.caucus.apps.onesearch.services.federation.SearchInstanceService;
~
 import com.caucus.apps.onesearch.services.product.ProductInfoService;
~
 import com.caucus.apps.onesearch.services.product.ProductInfoServiceException;
~
-import com.caucus.apps.onesearch.services.search.FigTableSearchConverter;
~
 import com.caucus.apps.onesearch.services.search.QueryParser;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SearchExpressionPreprocessor;
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandler.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandler.java
index 82ddf60..fa3b45b 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandler.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandler.java
@@ -22,8 +22,8 @@ import com.caucus.apps.core.services.auth.Account;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DateRangeType.Type;
~
 import com.caucus.apps.corelib.models.SortSelectModel;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.java
deleted file mode 100644
index 2308651..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.java
+++ /dev/null
@@ -1,57 +0,0 @@
-package com.caucus.apps.onesearch.pages.profiles.eiuarchive;
~
~
~
-import java.util.List;
~
~
-import org.apache.tapestry5.annotations.Cached;
~
-import org.apache.tapestry5.ioc.Messages;
~
-import org.apache.tapestry5.ioc.annotations.Inject;
~
~
-import com.caucus.apps.core.services.usagelogging.Operation;
~
-import com.caucus.apps.corelib.media.MediaAttachment;
~
-import com.caucus.apps.corelib.media.MediaIndex;
~
-import com.caucus.apps.corelib.models.DisplayFormat;
~
-import com.caucus.apps.onesearch.components.citation.PinkynailsContainer;
~
-import com.caucus.apps.onesearch.pages.IllustrataImage;
~
-import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
-import com.caucus.services.usagelogging.OperationTypeValues;
~
~
-public class EiuarchiveIllustrataImage extends IllustrataImage {
~
~
-	@Inject
~
-	private Messages messages;
~
-	
~
-	@Inject
~
-	private EMSURLGenerator emsURLGenerator;	
~
-	
~
-	@Override
~
-	public String getDocViewTitle() {
~
-		return messages.get("illustrata.title");
~
-	}
~
~
-	public boolean isTable() {
~
-		MediaAttachment ma = thumbnailsList.get(imageNumber);
~
-		List<String> categories = ma.getCategories();
~
-		if (categories != null) {
~
-			if (categories.contains(PinkynailsContainer.IMAGE_FORMAT_TABLE)) {
~
-				return true;
~
-			}
~
-		}
~
-		return false;
~
-	}
~
-	
~
-	@Cached
~
-	public String getSpreadsheetLink() {
~
~
-		try {
~
-			Operation opUsage = new Operation();
~
-			opUsage.setOpType(OperationTypeValues.Online.toString());
~
-			MediaAttachment spreadsheet = getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG).get(getOrder());
~
-			return emsURLGenerator.getURL(DisplayFormat.Spreadsheet, spreadsheet, spreadsheet.getPath(), 
~
-				getItem(), getDatabasesFor(getItem()), opUsage, getFromResultsPage(), "OS:EMS-Spreadsheet", null, null);
~
-		} catch (Exception e) {
~
-			return "";
~
-		}
~
-	}
~
-	
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/verticals/business/BusinessBrowse.java b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/verticals/business/BusinessBrowse.java
index 17e0652..cc2e3d8 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/pages/verticals/business/BusinessBrowse.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/pages/verticals/business/BusinessBrowse.java
@@ -45,37 +45,30 @@ public class BusinessBrowse extends BrowsePageBase implements BrowseMenuPage
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block topicGuideBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block industryMarketBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block commodityReportsBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block companyReportsBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block countryReportsBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block startupToolsBrowseBlock;
~
 
~
 	@Inject
~
 	@Property(write = false)
~
-	@SuppressWarnings("unused")
~
 	private Block moreContentBrowseBlock;
~
 	
~
 	@Inject 
~
@@ -85,11 +78,9 @@ public class BusinessBrowse extends BrowsePageBase implements BrowseMenuPage
 	@Inject 
~
 	private PageRenderLinkSource linkSource;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Property
~
 	private String entrepreneurship;
~
 
~
-	@SuppressWarnings("unused")
~
 	@Property
~
 	private String entrepreneurshipalumni;
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/parsers/FigAndTablesQueryParser.java b/WebApp/src/main/java/com/caucus/apps/onesearch/parsers/FigAndTablesQueryParser.java
index 2a0567a..ae550e5 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/parsers/FigAndTablesQueryParser.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/parsers/FigAndTablesQueryParser.java
@@ -5,6 +5,7 @@ import static com.caucus.apps.corelib.search.SearchEngine.METADATA_USER_DB_SEL
 import java.util.ArrayList;
~
 import java.util.List;
~
 
~
+import com.caucus.apps.corelib.search.FigTableSearchConverter;
 
~
 import com.caucus.apps.corelib.search.Limiter;
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.QuerySource;
~
@@ -19,7 +20,6 @@ import com.caucus.apps.onesearch.model.SimpleLimiter;
 import com.caucus.apps.onesearch.pageinterfaces.FigTableSearchPage;
~
 import com.caucus.apps.onesearch.pages.FigTables;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
-import com.caucus.apps.onesearch.services.search.FigTableSearchConverter;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SearchExpressionPreprocessor;
~
 import com.caucus.services.usagelogging.SearchMethodTypes;
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImpl.java
index 0c91cb6..2ddc7bd 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImpl.java
@@ -38,8 +38,8 @@ import com.caucus.apps.corelib.media.Media;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.RichMediaFormat;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/DisplayFormatServiceImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/DisplayFormatServiceImpl.java
index 994f7fb..86ffa89 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/DisplayFormatServiceImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/DisplayFormatServiceImpl.java
@@ -5,8 +5,8 @@ import org.apache.commons.lang.StringUtils;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.ProductConfigException;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.util.FieldValueCacheService;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/DummyMagazineService.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/DummyMagazineService.java
deleted file mode 100644
index 093ead0..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/DummyMagazineService.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package com.caucus.apps.onesearch.services;
~
~
-import com.caucus.apps.corelib.search.ResultsItem;
~
~
~
-public class DummyMagazineService implements MagazineService
~
-{
~
-	@Override public boolean isMagazine() {return false;}
~
-	@Override public boolean isMagazine(ResultsItem item) {return false;}
~
-	@Override public String getThumbnailPath(ResultsItem item) {return null;}
~
-	@Override public Object[] getLinkMagazineContext(ResultsItem item) {return null;}
~
-	@Override public boolean isVogue(ResultsItem item) {return false;}
~
-	@Override public boolean isWwd(ResultsItem item) {return false;}
~
-	@Override public boolean isEima(ResultsItem item) {	return false;}
~
-	@Override public String[] getMagazineBundleCodes() {return null;}
~
-	@Override public boolean isCropDisabledInFlashViewer(ResultsItem item) {return false;}
~
-	@Override public boolean isThumbnailEnabledInPreview(ResultsItem item) {return false;}
~
-	@Override public boolean isLatestIssueEnabled() {return false;}
~
-	@Override public boolean isFeaturedContentEnabled() {return false;}
~
-	@Override public boolean isFullSizeImageLinkDisabledInPinkynailPreview(ResultsItem item) {return false;}
~
-	@Override public boolean isFullSizeImageLinkDisabledInDisplayFigTableResultsItem(ResultsItem item) {return false;}		
~
-	@Override public boolean isFullSizeImageLinkDisabledInIllustrataThumbnails(ResultsItem item) {return false;}
~
-	@Override public boolean isLateralTypeSearchFromHoveroverEnabled(ResultsItem item) {return false;}
~
-	@Override public boolean isBrowseLinkEnabled(ResultsItem item) {return false;}
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/MagazineServiceImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/MagazineServiceImpl.java
index 923484b..b739321 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/MagazineServiceImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/MagazineServiceImpl.java
@@ -19,8 +19,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/OneSearchModuleServices.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/OneSearchModuleServices.java
index 565c69a..4aa2480 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/OneSearchModuleServices.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/OneSearchModuleServices.java
@@ -67,6 +67,7 @@ import com.caucus.apps.corelib.config.DynamicMultiProductConfig;
 import com.caucus.apps.corelib.config.DynamicProductConfigSelector;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.config.PropertiesProductConfigCached;
~
+import com.caucus.apps.corelib.config.mstar.MStarConfigurationAcademicImpl;
 
~
 import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
 import com.caucus.apps.corelib.documents.indexfields.refworks.RefWorksFieldConfigurationFactory;
~
 import com.caucus.apps.corelib.ebrary.service.EbraryServiceImpl;
~
@@ -292,7 +293,6 @@ import com.caucus.apps.onesearch.services.migration.dialog.impl.DialogAlertCon
 import com.caucus.apps.onesearch.services.migration.dialog.impl.DialogMigrationQueryDataHelperImpl;
~
 import com.caucus.apps.onesearch.services.migration.dialog.impl.DialogMigrationServiceImpl;
~
 import com.caucus.apps.onesearch.services.migration.dialog.impl.DialogSavedSearchConverterImpl;
~
-import com.caucus.apps.onesearch.services.mstar.MStarConfigurationAcademicImpl;
~
 import com.caucus.apps.onesearch.services.mstar.MStarConfigurationDialogImpl;
~
 import com.caucus.apps.onesearch.services.patents.PatentAvailableSectionsService;
~
 import com.caucus.apps.onesearch.services.patents.PatentAvailableSectionsServiceImpl;
~
@@ -371,7 +371,6 @@ import com.caucus.apps.onesearch.services.search.DefaultSearchFieldService;
 import com.caucus.apps.onesearch.services.search.DefaultSearchFieldServiceImpl;
~
 import com.caucus.apps.onesearch.services.search.DuplicateRecordTracker;
~
 import com.caucus.apps.onesearch.services.search.DuplicateRecordTrackerImpl;
~
-import com.caucus.apps.onesearch.services.search.FigTableSearchConverter;
~
 import com.caucus.apps.onesearch.services.search.IndexFieldSearchService;
~
 import com.caucus.apps.onesearch.services.search.IndexFieldSearchServiceImpl;
~
 import com.caucus.apps.onesearch.services.search.MonikerResolver;
~
@@ -401,7 +400,7 @@ import com.caucus.apps.onesearch.services.search.execute.OneSearchEbraryExecut
 import com.caucus.apps.onesearch.services.search.execute.OneSearchFastExecutionService;
~
 import com.caucus.apps.onesearch.services.search.execute.PatentsFastExecutionService;
~
 import com.caucus.apps.onesearch.services.search.impl.fastesp.ConvertToMnemonicsAllLimitersAndFiltersImpl;
~
 import 
-com.caucus.apps.onesearch.services.search.impl.fastesp.FastFigTableSearchConverter;
+com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies.DatabaseSpecificStrategyFactory;
 
~
 import com.caucus.apps.onesearch.services.search.patents.PatentDWPIFamilySearchService;
~
 import com.caucus.apps.onesearch.services.search.patents.PatentDWPIFamilySearchServiceImpl;
~
 import com.caucus.apps.onesearch.services.search.patents.PatentFamilyMemberSorter;
~
@@ -427,7 +426,6 @@ import com.caucus.apps.onesearch.services.search.preprocessing.OperatorClosure
 import com.caucus.apps.onesearch.services.search.preprocessing.PreprocessorDispatcher;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SearchExpressionPreprocessor;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SmartQuoteReplacer;
~
-import com.caucus.apps.onesearch.services.search.strategy.DatabaseSpecificStrategyFactory;
~
 import com.caucus.apps.onesearch.services.thesaurus.ThesaurusManager;
~
 import com.caucus.apps.onesearch.services.thesaurus.ThesaurusManagerImpl;
~
 import com.caucus.apps.onesearch.services.verticals.SubjectVerticalService;
~
@@ -680,11 +678,10 @@ public class OneSearchModuleServices {
         // Email attachment size service
~
         binder.bind(AttachmentSizeService.class, AttachmentSizeServiceImpl.class);
~
 
~
 		
-String selectedSearchEngineParam = System.getProperty(SearchEngine.SELECTED_SEARCH_ENGINE);
~
-        if ("CONTENT_SERVICE".equalsIgnoreCase(selectedSearchEngineParam)) {
~
-	    	binder.bind(DatabaseUsageAnalyzer.class, ContentServiceDatabaseUsageAnalyzer.class);
~
-	    } else {
+if("FAST".equals(System.getProperty(SearchEngine.CFGKEY_SEARCHENGINE, "FAST"))){
 
~
 	        binder.bind(DatabaseUsageAnalyzer.class, DatabaseUsageAnalyzerImpl.class);
~
 	    
+} else {
~
+	    	binder.bind(DatabaseUsageAnalyzer.class, ContentServiceDatabaseUsageAnalyzer.class);
 
~
 	    }
~
         // after we complete switching over to the ContentService this conditional can be removed along with the JVM parameter.
~
 
~
@@ -815,7 +812,6 @@ public class OneSearchModuleServices {
         binder.bind(PostProcessingImageResolver.class, PostProcessingImageResolverImpl.class);
~
         binder.bind(BrowseTypeIdentifierService.class, BrowseTypeIdentifierServiceImpl.class);
~
         
~
-        binder.bind(FigTableSearchConverter.class, FastFigTableSearchConverter.class);
~
         binder.bind(RestrictionService.class,RestrictionServiceImpl.class);
~
         binder.bind(SearchExecutionBeanFactory.class, AsmSearchExecutionBeanFactoryImpl.class);
~
         binder.bind(AdvSearchConfig.class, AdvSearchConfigImpl.class);
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/TextGraphicsFormatServiceImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/TextGraphicsFormatServiceImpl.java
index b530ff0..0af691d 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/TextGraphicsFormatServiceImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/TextGraphicsFormatServiceImpl.java
@@ -24,7 +24,8 @@ import com.caucus.apps.corelib.media.InlineImage;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaImage;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
@@ -175,7 +176,7 @@ public class TextGraphicsFormatServiceImpl implements TextGraphicsFormatService
 					xmlField = new XmlFieldIterator(vtdnav);
~
 					xmlField.startEditing();
~
 					
~
 					List<MediaAttachment> mediaList = 
-mediaIndex.getMediaAttachments(MediaIndex.Role.ILI,
+mediaIndex.getMediaAttachments(Role.ILI,
  false);
~
 					imageNodeList = updateImageNodes(xmlField, mediaList, XPATH_IMAGE_NODES, item, 
~
 							databases, isInternal, breadCrumb, queryData, isResultClick);
~
 					ArrayList<InlineImage> tableImageNodeList =
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLogSvcImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLogSvcImpl.java
index cfd9c54..df81fc8 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLogSvcImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLogSvcImpl.java
@@ -2,23 +2,19 @@ package com.caucus.apps.onesearch.services;
 
~
 import java.util.ArrayList;
~
 import java.util.Date;
~
-import java.util.Iterator;
~
-import java.util.List;
~
 import java.util.Map;
~
 
~
 import org.apache.commons.lang.StringUtils;
~
 
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
-import com.caucus.apps.core.services.usagelogging.Options;
~
 import com.caucus.apps.core.services.usagelogging.RetrieveItem;
~
 import com.caucus.apps.core.services.usagelogging.RetrieveItemTransaction;
~
 import com.caucus.apps.core.services.usagelogging.TransactionType;
~
-import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.markedlist.DisplayItemFormat;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
-import com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -32,7 +28,6 @@ import com.caucus.apps.onesearch.access.Database;
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.services.retrieve.ItemFormatConstants;
~
-import com.caucus.services.usagelogging.OperationTypeValues;
~
 
~
 
~
 /**
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImpl.java
index e72fee8..4d33a69 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImpl.java
@@ -26,8 +26,8 @@ import com.caucus.apps.corelib.media.Media;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
@@ -300,41 +300,41 @@ public class UsageLoggingAppHelperImpl implements UsageLoggingAppHelper {
 		MediaAttachment mediaAttachment = usageLoggingDataObject.getMediaAttachment();
~
 		String m_role = mediaAttachment == null ? "" : mediaAttachment.getRole().toString();
~
 		if (inputFormat == null) { // from search result page the inputFormat should be null,
~
 			if 
-(MediaIndex.Role.IXI.toString().equals(m_role))
+(Role.IXI.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.IllustrataThumbnails;
~
 			}
~
 			if 
-(MediaIndex.Role.ILI.toString().equals(m_role))
+(Role.ILI.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.InlineImage;
~
 			}			
~
 		} else {
~
 			if (inputFormat == DisplayFormat.IllustrataChild && 
-MediaIndex.Role.IXI.toString().equals(m_role))
+Role.IXI.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.IllustrataChild;
~
 			}
~
 			if (inputFormat == DisplayFormat.IllustrataThumbnails && 
-MediaIndex.Role.IXI.toString().equals(m_role))
+Role.IXI.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.IdxParent;
~
 			}
~
 			if (inputFormat == DisplayFormat.TextPlusGraphics && 
-(MediaIndex.Role.ILI.toString().equals(m_role)))
+(Role.ILI.toString().equals(m_role)))
  {
~
 				emsLogFormat = DisplayFormat.InlineImage;
~
 			}
~
 			if (inputFormat == DisplayFormat.PageImage && 
-MediaIndex.Role.PART.toString().equals(m_role))
+Role.PART.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.PageImage;
~
 			}
~
 			if (inputFormat == DisplayFormat.ArticlePDF && 
-MediaIndex.Role.FT.toString().equals(m_role))
+Role.FT.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.DocumentImage;
~
 			}
~
 			if (inputFormat == DisplayFormat.PageMap && 
-MediaIndex.Role.IP.toString().equals(m_role))
+Role.IP.toString().equals(m_role))
  {
~
 				emsLogFormat = DisplayFormat.PageMap;
~
 			}
~
 			if (inputFormat == DisplayFormat.Video && 
-MediaIndex.Role.VI.toString().equals(m_role))
+Role.VI.toString().equals(m_role))
  {
~
 				String subroles = mediaAttachment.getSubrole().toString();
~
 				if (StringUtils.equals(subroles, "DNLD"))
~
 					emsLogFormat = DisplayFormat.VideoDownload;
~
 				else if (StringUtils.equals(subroles, "EMBD"))
~
 					emsLogFormat = DisplayFormat.Video;
~
 			}
~
 			if (inputFormat == DisplayFormat.PartPDF && 
-MediaIndex.Role.PART.toString().equals(m_role))
+Role.PART.toString().equals(m_role))
  {
~
 				String subroles = mediaAttachment.getSubrole().toString();
~
 				if (StringUtils.equals(subroles, 
-MediaIndex.SubRole.THUM.toString()))
+SubRole.THUM.toString()))
 
~
 					emsLogFormat = DisplayFormat.Thumbnail;
~
 				else
~
 					emsLogFormat = DisplayFormat.DocumentImage;
~
@@ -714,6 +714,9 @@ public class UsageLoggingAppHelperImpl implements UsageLoggingAppHelper {
 		if (StringUtils.equals(isDisabled, "true")) {
~
 			return objectType;
~
 		}
~
 		
+if (StringUtils.containsIgnoreCase(objectType, "book")) {
~
+			objectType = StringUtils.replace(objectType, "book", "Book");
~
+		}
 
~
 		if (!StringUtils.isBlank(objectType) && objectType.contains("Book") && !objectType.contains("Book Chapter")) {
~
 			return objectType.concat("|Book Chapter");
~
 		}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/export/GenericDataBuilderImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/export/GenericDataBuilderImpl.java
index a697b70..54dfebb 100755
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/export/GenericDataBuilderImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/export/GenericDataBuilderImpl.java
@@ -54,8 +54,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.models.CitationSelectModel;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionService.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionService.java
index ee449ba..fc53ca3 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionService.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionService.java
@@ -4,8 +4,8 @@ import java.util.List;
 import java.util.Map;
~
 
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionServiceImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionServiceImpl.java
index f3ddf63..6397de9 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionServiceImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/media/RestrictionServiceImpl.java
@@ -11,16 +11,14 @@ import org.apache.tapestry5.services.ApplicationStateManager;
 import org.slf4j.Logger;
~
 import org.slf4j.LoggerFactory;
~
 
~
-import com.caucus.apps.core.services.auth.Account;
~
-import com.caucus.apps.core.services.auth.Subscription;
~
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
-import com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.refworks.parser.RefWorksCitationType;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/mstar/MStarConfigurationAcademicImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/mstar/MStarConfigurationAcademicImpl.java
deleted file mode 100644
index 190544e..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/mstar/MStarConfigurationAcademicImpl.java
+++ /dev/null
@@ -1,18 +0,0 @@
-package com.caucus.apps.onesearch.services.mstar;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.config.mstar.MnemonicsConfigurationDefaultImpl;
~
-
~
-public class MStarConfigurationAcademicImpl extends MnemonicsConfigurationDefaultImpl{
~
-
~
-	public MStarConfigurationAcademicImpl(ProductConfig productConfig) {
~
-		super(productConfig);
~
-	}
~
-
~
-	@Override
~
-	protected String getPreferredApplication() {
~
-		
~
-		return "preferredAcademic";
~
-	}
~
-
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImpl.java
index b37a684..0c12aa0 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImpl.java
@@ -36,7 +36,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.documents.AbstractContentItem;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import com.caucus.apps.corelib.media.MindexDigesterV2;
~
 import com.caucus.apps.corelib.media.RMapParser;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/saveas/SaveAsImageMediaHelper.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/saveas/SaveAsImageMediaHelper.java
index 7bd2c63..39d4f12 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/saveas/SaveAsImageMediaHelper.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/saveas/SaveAsImageMediaHelper.java
@@ -16,9 +16,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaAttachmentOrderComparator;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.impl.ContentItemWrapper;
~
@@ -50,8 +49,7 @@ public class SaveAsImageMediaHelper {
 	public static String buildImageSequence(ContentItemWrapper itemFrom) {
~
 		List<String> sequenceList = new ArrayList<String>();
~
 		List<MediaAttachment> list =
~
 			
-itemFrom.getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI,
~
-						MediaIndex.SubRole.THUM);
+itemFrom.getMediaIndex().getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		for (MediaAttachment ma : list) {
~
 			StringBuilder sb = new StringBuilder();
~
 			List<String> categories = ma.getCategories();
~
@@ -76,7 +74,7 @@ public class SaveAsImageMediaHelper {
 	 */
~
 	public static String buildImageCaption(ContentItemWrapper itemFrom){
~
 		List<String> multiCaptionList = new ArrayList<String>();
~
 		List<MediaAttachment> list = 
-itemFrom.getMediaIndex().getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM);
+itemFrom.getMediaIndex().getMediaAttachments(Role.IXI, SubRole.THUM);
 
~
 		if (list != null && list.size() > 0) {
~
 			for (MediaAttachment ma : list) {
~
 				List<String> categories = ma.getCategories();
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/FigTableSearchConverter.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/FigTableSearchConverter.java
deleted file mode 100644
index 8d00336..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/FigTableSearchConverter.java
+++ /dev/null
@@ -1,22 +0,0 @@
-package com.caucus.apps.onesearch.services.search;
~
-
~
-import com.caucus.apps.corelib.search.QueryData;
~
-import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
-
~
-/**
~
- * Converts SearchTerm to a SearchTerm for finding
~
- * images and figures.
~
- * 
~
- * @author rappelbo
~
- */
~
-public interface FigTableSearchConverter {
~
-
~
-	/**
~
-	 * Creates searchterm to search for images/ tables for a query.
~
-	 * @param term Original search term.
~
-	 * @param query Original query.
~
-	 * @return Searchterm to find related images/ figures.
~
-	 */
~
-	SearchTerm getFigTableTerm(SearchTerm term, QueryData query);
~
-
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverter.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverter.java
deleted file mode 100644
index 6431046..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverter.java
+++ /dev/null
@@ -1,167 +0,0 @@
-package com.caucus.apps.onesearch.services.search.impl.fastesp;
~
-
~
-import java.io.StreamTokenizer;
~
-
~
-import org.apache.commons.lang.StringUtils;
~
-import org.slf4j.Logger;
~
-import org.slf4j.LoggerFactory;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
-import com.caucus.apps.corelib.search.QueryData;
~
-import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldMnemonicTranslator;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.Mnemonic;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.MultiMnemonicTranslator;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.ReservedCharFilter;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.TranslatorUtils;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.FieldExpressionAnalyser.FieldExpression;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLReader;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTokenizer;
~
-import com.caucus.apps.corelib.search.translation.SearchTermTranslatorContext;
~
-import com.caucus.apps.onesearch.services.search.FigTableSearchConverter;
~
-
~
-/**
~
- * Class which uses the FAST SearchEngine classes to convert
~
- * a searchterm to a searchterm for Figures and Images.
~
- * 
~
- * Is used for the "Find related figures & table" link on the search results page.
~
- * 
~
- * This is all MSTAR  related.
~
- * Unfortunately this is tied to FieldMnemonicTranslator and MultiMnemonicTranslator.
~
- * Which are partly FAST related. So it's going into the FAST package.
~
- * 
~
- * This code was copied from FigAndTablesQueryParser
~
- * 
~
- * @author rappelbo
~
- */
~
-public class FastFigTableSearchConverter implements FigTableSearchConverter {
~
-	
~
-	private static final Logger logger=LoggerFactory.getLogger(FastFigTableSearchConverter.class);
~
-	
~
-	public static final String CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING = "SearchEngine.FastEnterpriseSearch.TextToFigTablesFieldsMappings.";
~
-	
~
-	private final ProductConfig productConfig;
~
-
~
-	private final MnemonicsConfiguration mstarConfig;
~
-	
~
-	public FastFigTableSearchConverter(ProductConfig productConfig, MnemonicsConfiguration mstarConfig) {
~
-		this.productConfig=productConfig;
~
-		this.mstarConfig=mstarConfig;
~
-	}
~
-	
~
-	/**
~
-	 * Creates searchterm to search for images/ tables for a query.
~
-	 * @param term Original search term.
~
-	 * @param query Original query.
~
-	 * @return Searchterm to find related images/ figures.
~
-	 */
~
-	@Override
~
-	public SearchTerm getFigTableTerm(SearchTerm term, QueryData query) {
~
-		String termFieldName = term.getFieldName();
~
-		SearchTermTranslatorContext ctx = new SearchTermTranslatorContext(term.getQueryTerm(), termFieldName,
~
-				query.getQueryType(), term.getTermName());
~
-		ctx.setProductConfig(productConfig);
~
-		String defaultTranslator = productConfig.getString(CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING + "default");
~
-		ReservedCharFilter charFilter = new ReservedCharFilter();
~
-		MultiMnemonicTranslator mnemonicTranslator = new MultiMnemonicTranslator();
~
-		charFilter.translate(ctx);
~
-		mnemonicTranslator.translate(ctx);
~
-		
~
-		StringBuilder builder = new StringBuilder();
~
-
~
-		try {
~
-			boolean isword = false;
~
-			FQLTokenizer tokenizer = new FQLTokenizer(new FQLReader(ctx.getProcessedTerm().toCharArray()));
~
-			TranslatorUtils.setupTokenizer(tokenizer);
~
-			tokenizer.wordChars('!', '!');
~
-			tokenizer.wordChars('#', '\'');
~
-			tokenizer.wordChars(')', Integer.MAX_VALUE);
~
-			int ttype = tokenizer.nextToken();
~
-			boolean first = true;
~
-			while (ttype != StreamTokenizer.TT_EOF && ttype != ')') {
~
-				String token = tokenizer.sval;
~
-				if (ttype == StreamTokenizer.TT_WORD) {
~
-					isword = true;
~
-					FieldMnemonicTranslator fieldTranslator = new FieldMnemonicTranslator(productConfig,productConfig,mstarConfig);
~
-					FieldExpression expressionType = fieldTranslator.getFieldExpression(tokenizer, token, productConfig,
~
-							termFieldName, ctx.getMnemonicSubTypeKey());
~
-					if (expressionType == FieldExpression.Mnemonic) {
~
-						ttype = tokenizer.nextToken();
~
-						
~
-						Mnemonic mnemonic = fieldTranslator.parseToken(token, termFieldName);
~
-						String translator = getTranslatedMnemonic(mnemonic.getMnemonic());
~
-						
~
-						if (translator == null) {
~
-							first = append(builder, defaultTranslator, ttype, first);
~
-						}
~
-						else {
~
-							if (!StringUtils.isEmpty(mnemonic.getRelation())) {
~
-								translator += "." + mnemonic.getRelation();
~
-							}
~
-							first = append(builder, translator, ttype, first);
~
-						}
~
-					} 
~
-					else {
~
-						first = append(builder, token, ttype, first);
~
-					}
~
-				} 
~
-				else {
~
-					first = append(builder, token, ttype, first);
~
-				}
~
-
~
-				ttype = tokenizer.nextToken();
~
-			}
~
-
~
-			String fieldName = termFieldName;
~
-			
~
-			if (mstarConfig.hasMnemonicExpansion(termFieldName, ctx.getMnemonicSubTypeKey())) {
~
-				fieldName = getTranslatedMnemonic(termFieldName);
~
-				if (fieldName == null)
~
-					fieldName = defaultTranslator;
~
-				if (StringUtils.isNotEmpty(fieldName)) {
~
-					if (isword)
~
-						builder.insert(0, fieldName + ".");
~
-					else
~
-						builder.insert(0, fieldName + "(").append(")");
~
-				}
~
-			}
~
-			return new SearchTerm(term.getOperator(), fieldName, builder.toString());
~
-		} catch (Exception iOException) {
~
-			logger.error("Error converting query ", iOException);
~
-		}
~
-		return null;
~
-	}
~
-	
~
-	private String getTranslatedMnemonic(String mnemonic) {
~
-		String translator = null;
~
-		try {
~
-			translator = productConfig.getString(CONFIG_TEXT_TO_FIGTABLES_FIELDS_MAPPING + mnemonic);
~
-		} catch (Exception e) {
~
-		}
~
-		return translator;
~
-
~
-	}
~
-	
~
-	private boolean append(StringBuilder builder, String token, int ttype, boolean first) {
~
-		if (!first) {
~
-			builder.append(" ");
~
-		} 
~
-		first = false;
~
-		if (token == null) {
~
-			builder.append((char) ttype);
~
-			first=ttype=='(';
~
-		} else {
~
-			if (ttype == '"') {
~
-				token = "\"" + token + "\"";
~
-			}
~
-			if (ttype == '(') {
~
-				token = token + "(";
~
-				first = true;
~
-			}
~
-			builder.append(token);
~
-		}
~
-		return first;
~
-	}
~
-
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategy.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategy.java
new file mode 100644
index 0000000..6e0cf87
--- /dev/null
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategy.java
@@ -0,0 +1,165 @@
+package com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies;
~
+
~
+import java.util.Map;
~
+import java.util.Set;
~
+import java.util.TreeSet;
~
+
~
+import org.apache.commons.lang.StringUtils;
~
+import org.slf4j.Logger;
~
+import org.slf4j.LoggerFactory;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTermNode;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategy;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
+import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
+import com.caucus.apps.corelib.search.impl.search.TranslationException.TranslationError;
~
+import com.caucus.apps.corelib.search.strategy.MStarFieldStrategy;
~
+import com.caucus.apps.corelib.search.translation.SearchTermTranslator;
~
+import com.caucus.apps.onesearch.access.DatabaseListManager;
~
+import com.caucus.apps.onesearch.services.DatabaseListManagerRetriever;
~
+import com.caucus.apps.onesearch.services.SitesService;
~
+import com.caucus.apps.onesearch.services.search.strategy.MStarDatabaseSpecificStrategy;
~
+
~
+/**
~
+ * Creates different FQL for a mnemonic depending on the database.
~
+ * 
~
+ * Checks the databases selected. And generates FQL for these databases depending on configuration.
~
+ * If none of the databases are configured then NO FQL is generated. Instead an error is thrown.
~
+ * 
~
+ * The configuration is in MStarTranslator.properties. Just like for other strategies.
~
+ * You specify for each database or meta-product which SimpleLimiter or FQL is to be used.
~
+ * If a SimpleLimiter is used then the FQL for this limiter is retrieved and inserted.
~
+ * 
~
+ * Example configuration in StarTranslator.properties.:
~
+ * 
~
+ * fieldMnemonic.human = humanField
~
+ * 
~
+ * fieldTermStrategy.humanField=databaseSpecific
~
+ *
~
+ * fieldTermStrategy.humanField.limiter.10000136 = MedlineHumans
~
+ *
~
+ * fieldTermStrategy.humanField.field.1007458  = global:Population:or("human")
~
+ * 
~
+ * fieldTermStrategy.humanField.strategy.1007458  = humanStartegy
~
+ * 
~
+ * fieldTermStrategy.humanStartegy = humanStartegyClassQualifierName
~
+ * 
~
+ * The above configuration defines a mnemonic "human". This is tied to field "humanField".
~
+ * "humanField" uses this strategy "databaseSpecific".
~
+ * 
~
+ * For database "10000136" (or its children) the FQL of SimpleLimiter "MedlineHumans" is used.
~
+ * For database "1007458" this FQL is used: "global:Population:or("human")"
~
+ * For database "1007571" the strategy associated to field "humanStartegy" is used
~
+ * 
~
+ * 
~
+ * @author rappelbo
~
+ */
~
+public class DatabaseSpecificStrategy implements TermStrategy {
~
+	
~
+	private static final Logger logger = LoggerFactory.getLogger(DatabaseSpecificStrategy.class);
~
+	private static final String SIMPLE_LIMITERS =  "SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.";
~
+
~
+	private final Map<String, String> limiters;
~
+	private final Map<String, String> fields;
~
+	private final Map<String, String> strategies;
~
+	private final ProductConfig config;
~
+	private final DatabaseListManagerRetriever dblmRetriever;
~
+	private final TermStrategyBuilder strategyBuilder;
~
+	private SitesService sites;
~
+	
~
+	public DatabaseSpecificStrategy(Map<String, String> limiters, Map<String, String> fields, Map<String, String> startegies, ProductConfig config, String cfgkey,
~
+			 DatabaseListManagerRetriever dblmRetriever, TermStrategyBuilder strategyBuilder, SitesService sites) {
~
+		this.limiters=limiters;
~
+		this.fields=fields;
~
+		this.strategies=startegies;
~
+		this.config=config;
~
+		this.dblmRetriever=dblmRetriever;
~
+		this.strategyBuilder=strategyBuilder;
~
+		this.sites = sites;
~
+	}
~
+
~
+	@Override
~
+	public String handleTerm(FQLTermNode term) {
~
+		Set<String> selectedDbIds = term.getNodeContext().getNodeBundleCodes();
~
+		if (dblmRetriever!=null) {
~
+			DatabaseListManager dblm=dblmRetriever.getDatabaseListManager();
~
+			if (dblm!=null) {
~
+				Set<String> parents= dblm.getParentIds(selectedDbIds);
~
+				selectedDbIds.addAll(parents);
~
+			}
~
+		}
~
+		
~
+		Set<String> expressionList = new TreeSet<String>();
~
+		if (limiters!=null) {
~
+			for(String dbId : limiters.keySet()) {
~
+				if(selectedDbIds.contains(dbId)) {
~
+					String limiterName = limiters.get(dbId);
~
+					String limiterExpression = config.getString(SIMPLE_LIMITERS + limiterName,null);
~
+					if (limiterExpression!=null) {
~
+						expressionList.add(limiterExpression);
~
+					} else {
~
+						logger.error("Limiter does not exist: " + SIMPLE_LIMITERS + limiterName + "It might use a strategy instead. Lookin in strategy for " + term.toString());
~
+					}
~
+				}			
~
+			}
~
+		}
~
+		
~
+		boolean strategyApplied = false;
~
+		String expression = "";
~
+		final String CFGKEY_FIELD_STRATEGY = SearchTermTranslator.CFGKEY_MSTAR_TRANSLATOR + ".fieldTermStrategy.";
~
+		if (strategies != null) {
~
+			for(String dbId : strategies.keySet()) {
~
+				if(selectedDbIds.contains(dbId) || (sites != null && sites.getSite().equals(dbId))) {
~
+					String strategyName = strategies.get(dbId);
~
+					String strategyClassName = config.getString(CFGKEY_FIELD_STRATEGY + strategyName,null);
~
+					if (strategyClassName != null) {
~
+						TermStrategy strategy = strategyBuilder != null ? strategyBuilder.buildTermStrategy(strategyName) : null;
~
+						if (strategy != null) {
~
+							expression = strategy.handleTerm(term);
~
+							strategyApplied = true;
~
+						}
~
+					} else {
~
+						logger.error("Strategy does not exist: " + CFGKEY_FIELD_STRATEGY + strategyName + "It might use a field instead. Lookin in field for " + term.toString());
~
+					}
~
+				}
~
+			}
~
+		}
~
+		
~
+		if (this.fields!=null) {
~
+			for(String dbId : fields.keySet()) {
~
+				if(selectedDbIds.contains(dbId)) {
~
+					String fieldFQL =fields.get(dbId);
~
+					if (StringUtils.isNotBlank(fieldFQL)) {
~
+						expressionList.add(fieldFQL);
~
+					}
~
+				}
~
+			}
~
+		}
~
+		
~
+		if(strategyApplied){
~
+			return expression;
~
+		}
~
+		else{
~
+			if(expressionList.size() == 0) {
~
+				throw new QueryParseException("This mnemonic is not supported for these databases.", TranslationError.MnemonicNotSupportedForDatabases, term.toString());
~
+			}
~
+			if(expressionList.size() == 1) {
~
+				return  new StringBuilder("filter(").append(expressionList.iterator().next()).append(")").toString();
~
+			}
~
+			return new StringBuilder("filter(or(").append(StringUtils.join(expressionList, ", ")).append("))").toString();
~
+		}
~
+	}
~
+
~
+	@Override
~
+	public boolean hasTranslator() {
~
+		return false;
~
+	}
~
+
~
+	@Override
~
+	public MStarFieldStrategy getMStarStrategy() {
~
+		return new MStarDatabaseSpecificStrategy();
~
+	}
~
+
~
+
~
+}
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyFactory.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyFactory.java
new file mode 100644
index 0000000..dc5368b
--- /dev/null
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyFactory.java
@@ -0,0 +1,34 @@
+package com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies;
~
+
~
+import java.util.Map;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.StrategyFactory;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategy;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
+import com.caucus.apps.corelib.util.ISOLanguageService;
~
+import com.caucus.apps.onesearch.services.DatabaseListManagerRetriever;
~
+import com.caucus.apps.onesearch.services.SitesService;
~
+
~
+public class DatabaseSpecificStrategyFactory  implements StrategyFactory{
~
+	
~
+	private final DatabaseListManagerRetriever dblmRetriever;
~
+	private final TermStrategyBuilder strategyBuilder;
~
+	private final SitesService sites;
~
+	
~
+	public DatabaseSpecificStrategyFactory(DatabaseListManagerRetriever dblmRetriever, TermStrategyBuilder strategyBuilder, SitesService sites) {
~
+		this.dblmRetriever = dblmRetriever;
~
+		this.strategyBuilder = strategyBuilder;
~
+		this.sites = sites;
~
+	}
~
+
~
+	@Override
~
+	public TermStrategy buildStrategy(ProductConfig config,
~
+			ISOLanguageService languageService, String cfgkey) {
~
+		Map<String, String> limiters = config.getBranchMap(cfgkey + ".limiter", null);
~
+		Map<String, String> fields = config.getBranchMap(cfgkey + ".field", null);
~
+		Map<String, String> strategies = config.getBranchMap(cfgkey + ".strategy", null);
~
+		return new DatabaseSpecificStrategy(limiters, fields, strategies, config, cfgkey, dblmRetriever, strategyBuilder, sites);
~
+	}
~
+
~
+}
 
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolver.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolver.java
index 31c47db..74288f5 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolver.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolver.java
@@ -4,7 +4,7 @@ import java.util.List;
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 
~
 public interface PostProcessingImageResolver {
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverImpl.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverImpl.java
index b571633..a44d00a 100755
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverImpl.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverImpl.java
@@ -16,8 +16,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessor.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessor.java
index 2ea17ba..7625d0f 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessor.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessor.java
@@ -8,8 +8,8 @@ import org.apache.tapestry5.StreamResponse;
 import com.caucus.apps.core.services.email.DocumentList;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManager.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManager.java
index 217ff21..f1bd398 100644
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManager.java
+++ b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManager.java
@@ -64,8 +64,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.impl.ItemValueImpl;
 import com.caucus.apps.corelib.markedlist.MarkedListItem;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.models.ResultsListPagedModel;
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategy.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategy.java
deleted file mode 100644
index aa29f46..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategy.java
+++ /dev/null
@@ -1,164 +0,0 @@
-package com.caucus.apps.onesearch.services.search.strategy;
~
-
~
-import java.util.Map;
~
-import java.util.Set;
~
-import java.util.TreeSet;
~
-
~
-import org.apache.commons.lang.StringUtils;
~
-import org.slf4j.Logger;
~
-import org.slf4j.LoggerFactory;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTermNode;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategy;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
-import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
-import com.caucus.apps.corelib.search.impl.search.TranslationException.TranslationError;
~
-import com.caucus.apps.corelib.search.strategy.MStarFieldStrategy;
~
-import com.caucus.apps.corelib.search.translation.SearchTermTranslator;
~
-import com.caucus.apps.onesearch.access.DatabaseListManager;
~
-import com.caucus.apps.onesearch.services.DatabaseListManagerRetriever;
~
-import com.caucus.apps.onesearch.services.SitesService;
~
-
~
-/**
~
- * Creates different FQL for a mnemonic depending on the database.
~
- * 
~
- * Checks the databases selected. And generates FQL for these databases depending on configuration.
~
- * If none of the databases are configured then NO FQL is generated. Instead an error is thrown.
~
- * 
~
- * The configuration is in MStarTranslator.properties. Just like for other strategies.
~
- * You specify for each database or meta-product which SimpleLimiter or FQL is to be used.
~
- * If a SimpleLimiter is used then the FQL for this limiter is retrieved and inserted.
~
- * 
~
- * Example configuration in StarTranslator.properties.:
~
- * 
~
- * fieldMnemonic.human = humanField
~
- * 
~
- * fieldTermStrategy.humanField=databaseSpecific
~
- *
~
- * fieldTermStrategy.humanField.limiter.10000136 = MedlineHumans
~
- *
~
- * fieldTermStrategy.humanField.field.1007458  = global:Population:or("human")
~
- * 
~
- * fieldTermStrategy.humanField.strategy.1007458  = humanStartegy
~
- * 
~
- * fieldTermStrategy.humanStartegy = humanStartegyClassQualifierName
~
- * 
~
- * The above configuration defines a mnemonic "human". This is tied to field "humanField".
~
- * "humanField" uses this strategy "databaseSpecific".
~
- * 
~
- * For database "10000136" (or its children) the FQL of SimpleLimiter "MedlineHumans" is used.
~
- * For database "1007458" this FQL is used: "global:Population:or("human")"
~
- * For database "1007571" the strategy associated to field "humanStartegy" is used
~
- * 
~
- * 
~
- * @author rappelbo
~
- */
~
-public class DatabaseSpecificStrategy implements TermStrategy {
~
-	
~
-	private static final Logger logger = LoggerFactory.getLogger(DatabaseSpecificStrategy.class);
~
-	private static final String SIMPLE_LIMITERS =  "SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.";
~
-
~
-	private final Map<String, String> limiters;
~
-	private final Map<String, String> fields;
~
-	private final Map<String, String> strategies;
~
-	private final ProductConfig config;
~
-	private final DatabaseListManagerRetriever dblmRetriever;
~
-	private final TermStrategyBuilder strategyBuilder;
~
-	private SitesService sites;
~
-	
~
-	public DatabaseSpecificStrategy(Map<String, String> limiters, Map<String, String> fields, Map<String, String> startegies, ProductConfig config, String cfgkey,
~
-			 DatabaseListManagerRetriever dblmRetriever, TermStrategyBuilder strategyBuilder, SitesService sites) {
~
-		this.limiters=limiters;
~
-		this.fields=fields;
~
-		this.strategies=startegies;
~
-		this.config=config;
~
-		this.dblmRetriever=dblmRetriever;
~
-		this.strategyBuilder=strategyBuilder;
~
-		this.sites = sites;
~
-	}
~
-
~
-	@Override
~
-	public String handleTerm(FQLTermNode term) {
~
-		Set<String> selectedDbIds = term.getNodeContext().getNodeBundleCodes();
~
-		if (dblmRetriever!=null) {
~
-			DatabaseListManager dblm=dblmRetriever.getDatabaseListManager();
~
-			if (dblm!=null) {
~
-				Set<String> parents= dblm.getParentIds(selectedDbIds);
~
-				selectedDbIds.addAll(parents);
~
-			}
~
-		}
~
-		
~
-		Set<String> expressionList = new TreeSet<String>();
~
-		if (limiters!=null) {
~
-			for(String dbId : limiters.keySet()) {
~
-				if(selectedDbIds.contains(dbId)) {
~
-					String limiterName = limiters.get(dbId);
~
-					String limiterExpression = config.getString(SIMPLE_LIMITERS + limiterName,null);
~
-					if (limiterExpression!=null) {
~
-						expressionList.add(limiterExpression);
~
-					} else {
~
-						logger.error("Limiter does not exist: " + SIMPLE_LIMITERS + limiterName + "It might use a strategy instead. Lookin in strategy for " + term.toString());
~
-					}
~
-				}			
~
-			}
~
-		}
~
-		
~
-		boolean strategyApplied = false;
~
-		String expression = "";
~
-		final String CFGKEY_FIELD_STRATEGY = SearchTermTranslator.CFGKEY_MSTAR_TRANSLATOR + ".fieldTermStrategy.";
~
-		if (strategies != null) {
~
-			for(String dbId : strategies.keySet()) {
~
-				if(selectedDbIds.contains(dbId) || (sites != null && sites.getSite().equals(dbId))) {
~
-					String strategyName = strategies.get(dbId);
~
-					String strategyClassName = config.getString(CFGKEY_FIELD_STRATEGY + strategyName,null);
~
-					if (strategyClassName != null) {
~
-						TermStrategy strategy = strategyBuilder != null ? strategyBuilder.buildTermStrategy(strategyName) : null;
~
-						if (strategy != null) {
~
-							expression = strategy.handleTerm(term);
~
-							strategyApplied = true;
~
-						}
~
-					} else {
~
-						logger.error("Strategy does not exist: " + CFGKEY_FIELD_STRATEGY + strategyName + "It might use a field instead. Lookin in field for " + term.toString());
~
-					}
~
-				}
~
-			}
~
-		}
~
-		
~
-		if (this.fields!=null) {
~
-			for(String dbId : fields.keySet()) {
~
-				if(selectedDbIds.contains(dbId)) {
~
-					String fieldFQL =fields.get(dbId);
~
-					if (StringUtils.isNotBlank(fieldFQL)) {
~
-						expressionList.add(fieldFQL);
~
-					}
~
-				}
~
-			}
~
-		}
~
-		
~
-		if(strategyApplied){
~
-			return expression;
~
-		}
~
-		else{
~
-			if(expressionList.size() == 0) {
~
-				throw new QueryParseException("This mnemonic is not supported for these databases.", TranslationError.MnemonicNotSupportedForDatabases, term.toString());
~
-			}
~
-			if(expressionList.size() == 1) {
~
-				return  new StringBuilder("filter(").append(expressionList.iterator().next()).append(")").toString();
~
-			}
~
-			return new StringBuilder("filter(or(").append(StringUtils.join(expressionList, ", ")).append("))").toString();
~
-		}
~
-	}
~
-
~
-	@Override
~
-	public boolean hasTranslator() {
~
-		return false;
~
-	}
~
-
~
-	@Override
~
-	public MStarFieldStrategy getMStarStrategy() {
~
-		return new MStarDatabaseSpecificStrategy();
~
-	}
~
-
~
-
~
-}
~
diff --git a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyFactory.java b/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyFactory.java
deleted file mode 100644
index 87afc20..0000000
--- a/WebApp/src/main/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyFactory.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package com.caucus.apps.onesearch.services.search.strategy;
~
-
~
-import java.util.Map;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.StrategyFactory;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategy;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
-import com.caucus.apps.corelib.util.ISOLanguageService;
~
-import com.caucus.apps.onesearch.services.DatabaseListManagerRetriever;
~
-import com.caucus.apps.onesearch.services.SitesService;
~
-
~
-public class DatabaseSpecificStrategyFactory  implements StrategyFactory{
~
-	
~
-	private final DatabaseListManagerRetriever dblmRetriever;
~
-	private final TermStrategyBuilder strategyBuilder;
~
-	private final SitesService sites;
~
-	
~
-	public DatabaseSpecificStrategyFactory(DatabaseListManagerRetriever dblmRetriever, TermStrategyBuilder strategyBuilder, SitesService sites) {
~
-		this.dblmRetriever = dblmRetriever;
~
-		this.strategyBuilder = strategyBuilder;
~
-		this.sites = sites;
~
-	}
~
-
~
-	@Override
~
-	public TermStrategy buildStrategy(ProductConfig config,
~
-			ISOLanguageService languageService, String cfgkey) {
~
-		Map<String, String> limiters = config.getBranchMap(cfgkey + ".limiter", null);
~
-		Map<String, String> fields = config.getBranchMap(cfgkey + ".field", null);
~
-		Map<String, String> strategies = config.getBranchMap(cfgkey + ".strategy", null);
~
-		return new DatabaseSpecificStrategy(limiters, fields, strategies, config, cfgkey, dblmRetriever, strategyBuilder, sites);
~
-	}
~
-
~
-}
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/PageLayout.tml b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/PageLayout.tml
index 7e33b23..0f6ed47 100644
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/PageLayout.tml
+++ b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/PageLayout.tml
@@ -320,12 +320,7 @@
 									</t:sitePageLink>
~
 								</p:else>
~
 							</t:if>
~
 						</div>
-<div id="" class="float_right ${rtl:rtl-fltR}">
~
-							<t:if test="!closedView">
~
-								<t:branding.institutionalBrandingHeader />
~
-							</t:if>
~
-						</div>
 	
~
 						<t:OpenView>
~
 							<div id="docPreviewHeader" class="float_left">
~
 								<h1>${message:docPreview}</h1>
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingHeader.tml b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingHeader.tml
index 8cecb52..c707c95f 100644
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingHeader.tml
+++ b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingHeader.tml
@@ -1,56 +1,47 @@
 <t:extend xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd" xmlns:ui="tapestry-library:visualdesign" xmlns:p="tapestry:parameter">
~
    
~
 	<t:replace id="institutionalBranding">
~
 	
~
 		<t:if test="firstBrandingItem">
~
 			
~
 			
-<div id="HeaderBranding">
+<div>
~
 				
~
 				<t:if test="firstBrandingImageAndFirstBrandingLink">
~
 					<t:if test="newImageWindow">
~
 							<a href="${brandingImage?.imageUrl}" target="${brandingImage?.newWindow}"><img src="${brandingImage?.imagePath}" width="${brandingImage?.imageWidth}" height="${brandingImage?.imageHeight}" alt="${brandingImage?.imageText}" title="${brandingImage?.imageText}"/></a>
~
 						<p:else>
~
 							<a href="${brandingImage?.imageUrl}"><img src="${brandingImage?.imagePath}" width="${brandingImage?.imageWidth}" height="${brandingImage?.imageHeight}" alt="${brandingImage?.imageText}" title="${brandingImage?.imageText}"/></a>
~
 						</p:else>
~
 					</t:if>
~
 					<t:if test="newLinkWindow">
-<div class="truncLink"><a href="${brandingLink?.linkURL}" target="${brandingLink?.linkWindow}">${brandingLink?.linkText}</a></div>
~
-						<p:else>
~
-							<div class="truncLink"><a href="${brandingLink?.linkURL}">${brandingLink?.linkText}</a></div>
~
-						</p:else>
~
-					</t:if>
~
-				</t:if>
~
-				
~
-				<t:if test="firstBrandingImageAndNotFirstBrandingLink">
~
-					<t:if test="newImageWindow">
~
 							<a 
-href="${brandingImage?.imageUrl}" target="${brandingImage?.newWindow}"><img src="${brandingImage?.imagePath}" width="${brandingImage?.imageWidth}" height="${brandingImage?.imageHeight}" alt="${brandingImage?.imageText}" title="${brandingImage?.imageText}"/></a>
+href="${brandingLink?.linkURL}" target="${brandingLink?.linkWindow}">${brandingLink?.linkText}</a>
~
 						<p:else>
~
 							<a 
-href="${brandingImage?.imageUrl}"><img src="${brandingImage?.imagePath}" width="${brandingImage?.imageWidth}" height="${brandingImage?.imageHeight}" alt="${brandingImage?.imageText}" title="${brandingImage?.imageText}"/></a>
+href="${brandingLink?.linkURL}">${brandingLink?.linkText}</a>
~
 						</p:else>
~
 					</t:if>
~
 				</t:if>
~
 				
~
 				<t:if test="notFirstBrandingImageAndFirstBrandingLink">
~
 					<t:if test="newLinkWindow">
~
 							
-<div class="NotruncLink"><a
+<a
  href="${brandingLink?.linkURL}" 
-target="${brandingLink?.linkWindow}">${brandingLink?.linkText}</a></div>
+target="${brandingLink?.linkWindow}">${brandingLink?.linkText}</a>
~
 						<p:else>
~
 							
-<div class="NotruncLink"><a href="${brandingLink?.linkURL}">${brandingLink?.linkText}</a></div>
+<a href="${brandingLink?.linkURL}">${brandingLink?.linkText}</a>
~
 						</p:else>
~
 					</t:if>
~
 				</t:if>
~
 				
~
 				<t:if test="notFirstBrandingImageAndNotFirstBrandingLinkAndCustomText">
~
 					<div 
-class="NotruncLink">
+class="float_right footer_custom_text">
~
 						${customText}
~
 					</div>
~
 				</t:if>
~
~
 			</div>
~
~
 			<div class="clear_left"></div>
~
~
 		</t:if>
~
 		
~
 	</t:replace>
~
~
 </t:extend>
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.js b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.js
index 9323e0d..4839b40 100644
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.js
+++ b/WebApp/src/main/resources/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurvey.js
@@ -1,8 +1,13 @@
 
~
 var strUserIP;
~
 var strSessionID;
~
+var strUsageSessionID;
~
 
~
 Tapestry.Initializer.foreseeSurvey = function(spec) {
~
 	strUserIP = spec.strUserIP;
~
 	strSessionID = spec.strSessionID;
~
 	
+strUsageSessionID = spec.strUsageSessionID;
~
+	
~
+	if(FSR && FSR.CPPS)		
~
+		FSR.CPPS.set('Usage_Session', strUsageSessionID);
 	
~
 };
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.properties b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.properties
index a88d81f..caa90fd 100644
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.properties
+++ b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.properties
@@ -1,4 +1,4 @@
-illustrata.title=Illustrata Image
+illustrata.title=Image
 
~
 illustrata.caption=Caption
~
 illustrata.backtodoc=Back to main article
~
 illustrata.backtoresults=Back to Results
~
@@ -13,3 +13,4 @@ illustrata.fullsizeunavailable=Full size image not available
 illustrata.indexing=Indexing (Details)
~
 heading.tagging=Tags (Keywords)
~
 providedBy=Provided by [Your Institution]
~
+downloadText=Download table as Spreadsheet
 
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.tml b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.tml
index 064ba89..70e1249 100644
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.tml
+++ b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/IllustrataImage.tml
@@ -80,7 +80,11 @@
             	<h3>${message:illustrata.caption}</h3>
~
                 <h4>${sequence}</h4>
~
                 <p><t:outputraw value="${caption}"/>
~
                 			
-<t:extension-point id="downloadLink" />
+<t:if test="table">
~
+								<t:if test ="${spreadsheetLink}">
~
+									<br/><a class="formats_base_sprite format_excel" href="${SpreadsheetLink}">${message:downloadText}</a>
~
+								</t:if>
~
+							</t:if>
~
                 </p>
~
             </div>
~
             <t:zone id="imageZone" t:id="imageZone">
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.properties b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.properties
deleted file mode 100644
index cdc1ce4..0000000
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-illustrata.title=Full Size Image
~
-downloadText=Download table as Spreadsheet
~
diff --git a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.tml b/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.tml
deleted file mode 100644
index 8d82e0f..0000000
--- a/WebApp/src/main/resources/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImage.tml
+++ /dev/null
@@ -1,9 +0,0 @@
-<t:extend xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd" xmlns:ui="tapestry-library:visualdesign" xmlns:rf="tapestry-library:pqc/resultsfiltering">
~
-	<t:replace id="downloadLink">
~
-		<t:if test="table">
~
-			<t:if test ="${spreadsheetLink}">
~
-				<br/><a class="formats_base_sprite format_excel" href="${SpreadsheetLink}">${message:downloadText}</a>
~
-			</t:if>
~
-		</t:if>
~
-	</t:replace>
~
-</t:extend>
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/base/DocViewBaseTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/base/DocViewBaseTest.java
index b83fd3d..6ff8def 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/base/DocViewBaseTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/base/DocViewBaseTest.java
@@ -35,8 +35,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.impl.ItemValueImpl;
 import com.caucus.apps.corelib.documents.indexfields.refworks.impl.NullMessages;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
@@ -57,7 +57,7 @@ import com.caucus.apps.corelib.usage.UsageLoggingDummy;
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import com.caucus.apps.corelib.util.DurableURL;
~
 import com.caucus.apps.corelib.util.FieldValueCacheService;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.corelib.xpath.VTDFieldService;
~
 import com.caucus.apps.corelib.xpath.XmlField;
~
@@ -107,7 +107,7 @@ public class DocViewBaseTest extends InstrumentedTestCase
 	private DummyDatabaseListManager 		dummydbListManager;
~
 	private DummyFieldFormatter 			dummyFieldFormatter	;
~
 	private DummyResultsItem				dummyResultsItem;
~
 	private 
-LogTimingsDummyImpl
+DummyLogTimings
 				dummyLogTimings;
~
 	private DummyLogger						dummyLogger;
~
 	
~
 	private UniqueItemID                    uniqueItemID;
~
@@ -150,7 +150,7 @@ public class DocViewBaseTest extends InstrumentedTestCase
 	private void setUpMocksAndDummies() {
~
 		dummyProductConfig = new MinimalProductConfig();
~
 		captchaTrigger = new CaptchaTrigger(dummyProductConfig);
~
 		dummyLogTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
 
~
 		
~
 		mediaCache = mockCtrl.createMock(MediaIndexCacheService.class);
~
 		mockVtdFieldService = mockCtrl.createMock(VTDFieldService.class);
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/base/PdfDocViewBaseTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/base/PdfDocViewBaseTest.java
index cf9a113..d0c4c10 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/base/PdfDocViewBaseTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/base/PdfDocViewBaseTest.java
@@ -41,8 +41,8 @@ import com.caucus.apps.corelib.config.PropertiesProductConfig;
 import com.caucus.apps.corelib.documents.indexfields.refworks.impl.NullMessages;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheServiceImpl;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/base/SaveAsFileBaseTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/base/SaveAsFileBaseTest.java
index 9fe7b9d..fdf09f6 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/base/SaveAsFileBaseTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/base/SaveAsFileBaseTest.java
@@ -36,8 +36,8 @@ import com.google.common.collect.ImmutableSet;
 import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.myresearch.Areas;
~
 import com.caucus.apps.corelib.myresearch.MyResearchManagerService;
~
@@ -874,5 +874,13 @@ public class SaveAsFileBaseTest  extends InstrumentedTestCase {
 		assertTrue(optionList.size() == 10);
~
 		assertTrue(optionList.toString().contains("Flow"));		
~
 	}
~
 	
~
 	
+@Test
~
+	public void shouldGetFixedRoleAndSubRoleMap() {
~
+		Map<Role, SubRole> map = saveAsFileBase.getRoleAndSubrole();
~
+		assertEquals (2, map.size());
~
+		assertEquals (SubRole.NORM, map.get(Role.PG));
~
+		assertEquals (SubRole.PCMI, map.get(Role.IM));
~
+	}
~
 
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBaseTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBaseTest.java
index 44b7257..8aa677e 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBaseTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/base/myresearch/SearchAlertEmailBaseTest.java
@@ -37,6 +37,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
 import com.caucus.apps.corelib.documents.indexfields.model.impl.ItemValuesImpl;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.QueryData;
~
@@ -534,7 +536,7 @@ public class SearchAlertEmailBaseTest  extends InstrumentedTestCase {
 		Method getMediaIndex = SearchAlertEmailBase.class.getDeclaredMethod("getMediaIndex");
~
 		searchAlertEmailBase = createMockBuilder(SearchAlertEmailBase.class).addMockedMethod(getMediaIndex).createMock(ctrl);
~
 		expect(searchAlertEmailBase.getMediaIndex()).andReturn(mIndex);
~
 		
-expect(mIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaAttachments);
+expect(mIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaAttachments);
 
~
 		expect(fieldFormatter.formatHitHighlighting(abstractText1, false)).andReturn(abstractText1);
~
 		expect(fieldFormatter.formatHitHighlighting(expectedAbstractText, false)).andReturn(expectedAbstractText);
~
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/BrowseChildTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/BrowseChildTest.java
index 05c6c06..93b633c 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/BrowseChildTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/BrowseChildTest.java
@@ -3,6 +3,7 @@ package com.caucus.apps.onesearch.components;
 import static org.easymock.EasyMock.anyObject;
~
 import static org.easymock.EasyMock.eq;
~
 import static org.easymock.EasyMock.expect;
~
+import static org.easymock.EasyMock.expectLastCall;
 
~
 import static org.easymock.EasyMock.isA;
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertFalse;
~
@@ -812,6 +813,7 @@ public class BrowseChildTest extends InstrumentedTestCase
 		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + ".OxfordAnalyticaDailyBriefService.region.navPrefix", "")).andReturn("");
~
 		expect(productConfig.getString("Sites.NPCBrowse.OxfordAnalyticaDailyBriefService.browseType", null)).andReturn(null);
~
 		expect(productConfig.getString("Sites.NPCBrowse.OxfordAnalyticaDailyBriefService.categories")).andReturn("");
~
 		
+expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + ".OxfordAnalyticaDailyBriefService.defaultDateSort", null)).andReturn(null);
 
~
 
~
 		QueryData query = new QueryDataStd();
~
 		ResultsList results = new DummyResultsList(query);
~
@@ -962,4 +964,70 @@ public class BrowseChildTest extends InstrumentedTestCase
 		QueryData queryData = commonAddSearchTermToQueryData();
~
 		assertEquals(0, queryData.getSearchTerms().size());
~
 	}
~
 	
~
 	
+private BrowseResults commonCodeForSortOrderTesting(SortTypes sortOrder, boolean fromProductConfig) throws Exception {
~
+		BrowseResults browseResultsPage = new BrowseResults();
~
+		FieldUtils.setFieldStrict(browseChild, "resultsPage", browseResultsPage);
~
+		FieldUtils.setFieldStrict(browseResultsPage, "logger", new DummyLogger());
~
+		FieldUtils.setFieldStrict(browseResultsPage, "request", request);
~
+		FieldUtils.setFieldStrict(browseResultsPage, "userContext", new UserRuntimeContextImpl());
~
+		FieldUtils.setFieldStrict(browseResultsPage, "history", history);
~
+		FieldUtils.setFieldStrict(browseResultsPage, "resultsPagedList", new ResultsPagedList());
~
+		expect(sites.getSite()).andReturn("site");
~
+		expect(databaseListManager.getUserSelections(null)).andReturn("");
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".region.navigator", "")).andReturn("");
~
+		if (fromProductConfig) {
~
+			expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".defaultDateSort", null)).andReturn("DateDesc");
~
+		} else {
~
+			expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".defaultDateSort", null)).andReturn(null);
~
+		}
~
+		browseResultsPage.setStaticTerms(null);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".region.navPrefix", "")).andReturn("");
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".searchTerm.field", "")).andReturn("");
~
+		expect(productConfig.getBoolean(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".searchTerm.child", false)).andReturn(false);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".objectType", null)).andReturn(null);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".browseType", null)).andReturn(null);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".recordType", null)).andReturn(null);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".pubid", null)).andReturn(null);
~
+		if (fromProductConfig) {
~
+			expect(sites.getPreferredSortType()).andReturn(sortOrder).times(2);
~
+		} else {
~
+			expect(sites.getPreferredSortType()).andReturn(SortTypes.titleAsc).times(2);
~
+		}
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".categories", "")).andReturn("").times(2);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + "..hierarchy", "")).andReturn("").times(2);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + "..navigator", "")).andReturn("").times(2);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + "..navPrefix", "")).andReturn("");
~
+		expect(preferenceData.getItemsPerPage()).andReturn(20);
~
+		ResultsList results = new DummyResultsList(new QueryDataStd());
~
+		SearchExecutionBean bean = ctrl.createMock(SearchExecutionBean.class);
~
+		expect(executeBeanFactory.getSearchExecutionBean(isA(QueryData.class))).andReturn(bean);
~
+		expect(executeService.executeSearch(bean)).andReturn(results);
~
+		history.add(results);
~
+		smartSearch.createSmartSearch(results.getResultsID(), results.getQueryData());
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".title")).andReturn("");
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + "..dateBrowse", "false")).andReturn("false");
~
+		expect(history.get(anyObject(String.class))).andReturn(results);
~
+		expect(productConfig.getString(BrowseTerms.NPC_BROWSE_CONFIG_KEY + "." + browseName + ".categories")).andReturn("");
~
+		expectLastCall();
~
+
~
+		ctrl.replay();
~
+		browseChild.fetchResults("termName", "parentField", "parentTerm");
~
+		ctrl.verify();
~
+		return browseResultsPage;
~
+	}
~
+
~
+	@Test
~
+	public void shouldTestFetchResults_ReturnsSortOrderFromPreference_WhenProductConfigDoesNotHaveDefaultDateSortSet() throws Exception {
~
+		SortTypes expectedSortOrder = SortTypes.titleAsc;
~
+		BrowseResults browseResultsPage = commonCodeForSortOrderTesting(expectedSortOrder, false);
~
+		assertEquals(expectedSortOrder, browseResultsPage.getSortType());
~
+	}
~
+
~
+	@Test
~
+	public void shouldTestFetchResults_ReturnsSortOrderFromProductConfig_WhenProductConfigDoesHaveDefaultDateSortSet() throws Exception {
~
+		SortTypes expectedSortOrder = SortTypes.DateDesc;
~
+		BrowseResults browseResultsPage = commonCodeForSortOrderTesting(expectedSortOrder, true);
~
+		assertEquals(expectedSortOrder, browseResultsPage.getSortType());
~
+	}
 
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacyTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacyTest.java
index 7763b80..7c0dd39 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacyTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/ContentItemLinksLegacyTest.java
@@ -28,8 +28,8 @@ import com.caucus.apps.corelib.config.MinimalProductConfig;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItemTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItemTest.java
index aac1b31..baeb9d4 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItemTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/DisplayFigTableResultsItemTest.java
@@ -24,7 +24,8 @@ import org.junit.Test;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
@@ -112,7 +113,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		expect(mockProductBehaviourService.isFullSizeImageLinkDisabledInDisplayFigTableResultsItem(mockItem)).andReturn(false).anyTimes();
~
 		expect(displayFigTableResultsItem.getItem()).andReturn(mockItem).anyTimes();
~
 		expect(mockMediaIndexCache.getMediaIndex(mockItem)).andReturn(mockMindex);
~
 		
-expect(mockMindex.getMediaAttachments(MediaIndex.Role.IXI,
+expect(mockMindex.getMediaAttachments(Role.IXI,
  subRole))
~
 		.andReturn(mediaAttachments);
~
 
~
 	}
~
@@ -122,7 +123,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		String caption = "The phytoplankton bioassay";
~
 		String expectedCaption = "The phytoplankton";
~
 
~
 		setCommonExpectationsForGetCaption(new ArrayList<String>(), 
-MediaIndex.SubRole.THUM);
+SubRole.THUM);
 
~
 		expect(mockFieldFormatter.formatHitHighlighting(caption, false)).andReturn(expectedCaption);
~
 		ctrl.replay();
~
 		String actualCaption = displayFigTableResultsItem.getCaption();
~
@@ -137,7 +138,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		categories.add("fullSizeImage1");
~
 		categories.add("fullSizeImage2");
~
 
~
 		setCommonExpectationsForGetCaption(categories, 
-MediaIndex.SubRole.FULL);
+SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isOneFormatFullSizeImageLink();
~
 		ctrl.verify();
~
@@ -147,7 +148,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 
~
 	@Test
~
 	public void shouldReturnFalseFromIsOneFormatFullSizeImageLink() {
~
 		setCommonExpectationsForGetCaption(null, 
-MediaIndex.SubRole.FULL);
+SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isOneFormatFullSizeImageLink();
~
 		ctrl.verify();
~
@@ -168,7 +169,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 
~
 	@Test
~
 	public void shouldReturnFalseFromIsMoreThanOneFormatFullSizeImageLink() {
~
 		setCommonExpectationsForGetCaption(null, 
-MediaIndex.SubRole.FULL);
+SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormatFullSizeImageLink();
~
 		ctrl.verify();
~
@@ -182,7 +183,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		categories.add("fullSizeImage1");
~
 		categories.add("fullSizeImage2");
~
 
~
 		setCommonExpectationsForGetCaption(categories, 
-MediaIndex.SubRole.FULL);
+SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormatFullSizeImageLink();
~
 		ctrl.verify();
~
@@ -192,20 +193,20 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 
~
 	private void commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole subRole) {
~
 		expect(mockMediaIndexCache.getMediaIndex(mockItem)).andReturn(mockMindex);
~
 		if 
-(MediaIndex.SubRole.ORIG.equals(subRole))
+(SubRole.ORIG.equals(subRole))
  {
~
 			MediaAttachment mediaAttachment = new MediaAttachment();
~
 			mediaAttachment.setPath("path");
~
 			mediaAttachments.add(mediaAttachment);
~
 			
-expect(mockMindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(mediaAttachments);
+expect(mockMindex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(mediaAttachments);
 
~
 		} else {
~
 			
-expect(mockMindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(null);
+expect(mockMindex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(null);
 
~
 		}
~
 	}
~
 
~
 	@Test
~
 	public void shouldReturnTrueFromIsMoreThanOneFormatSpreadsheetLink_WhenMediaAttachmentForOriginalIsFound() {
~
 		expect(displayFigTableResultsItem.getItem()).andReturn(mockItem);
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.ORIG);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.ORIG);
 
~
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormatSpreadsheetLink();
~
@@ -217,7 +218,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldReturnFalseFromIsMoreThanOneFormatSpreadsheetLink_WhenMediaAttachmentForOriginalIsNotFound() {
~
 		expect(displayFigTableResultsItem.getItem()).andReturn(mockItem);
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.FULL);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.FULL);
 
~
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormatSpreadsheetLink();
~
@@ -231,8 +232,8 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		List<String> categories = new ArrayList<String>();
~
 		categories.add("fullSizeImage1");
~
 		categories.add("fullSizeImage2");
~
 		setCommonExpectationsForGetCaption(categories, 
-MediaIndex.SubRole.FULL);
~
-		commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.ORIG);
+SubRole.FULL);
~
+		commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.ORIG);
 
~
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormat();
~
@@ -243,7 +244,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 
~
 	@Test
~
 	public void shouldTestIsMoreThanOneFormat_ReturnsFalse_WhenFullSizeImageIsNotFound() {
~
 		setCommonExpectationsForGetCaption(null, 
-MediaIndex.SubRole.FULL);
+SubRole.FULL);
 
~
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormat();
~
@@ -257,8 +258,8 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		List<String> categories = new ArrayList<String>();
~
 		categories.add("fullSizeImage1");
~
 		categories.add("fullSizeImage2");
~
 		setCommonExpectationsForGetCaption(categories, 
-MediaIndex.SubRole.FULL);
~
-		commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.FULL);
+SubRole.FULL);
~
+		commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.FULL);
 
~
 
~
 		ctrl.replay();
~
 		boolean actualValue = displayFigTableResultsItem.isMoreThanOneFormat();
~
@@ -273,12 +274,12 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 		MediaAttachment ma1 = new MediaAttachment();
~
 		ma1.setPath("path");
~
 		List<MediaAttachment> mas = new ArrayList<MediaAttachment>(Arrays.asList(ma1));
~
 		if 
-(MediaIndex.SubRole.ORIG.equals(subRole))
+(SubRole.ORIG.equals(subRole))
  {
~
 			
-expect(mockMindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(mas);
+expect(mockMindex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(mas);
 
~
 		} else {
~
 			
-expect(mockMindex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(null);
+expect(mockMindex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(null);
 
~
 		}
~
 		if 
-(MediaIndex.SubRole.ORIG.equals(subRole))
+(SubRole.ORIG.equals(subRole))
  {
~
 			expect(mockContentItemWrapperFactory.makeContentItemWrapper(isA(ResultsItem.class), anyBoolean(), eq((ThreadLocale) null))).andReturn(
~
 					mockContentItemWrapper);
~
 			expect(mockContentItemWrapper.getDatabase()).andReturn("");
~
@@ -292,7 +293,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestGetSpreadsheetLink_ReturnsNonemptyString_WhenSpreadsheetIsFound() {
~
 		String expectedLink = "linkToSpreadsheet";
~
 		
-commonCodeForGetSpreadsheetLink(MediaIndex.SubRole.ORIG,
+commonCodeForGetSpreadsheetLink(SubRole.ORIG,
  expectedLink);
~
 		ctrl.replay();
~
 		assertEquals(expectedLink, displayFigTableResultsItem.getSpreadsheetLink());
~
 		ctrl.verify();
~
@@ -301,7 +302,7 @@ public class DisplayFigTableResultsItemTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestGetSpreadsheetLink_ReturnsEmptyString_WhenSpreadsheetIsNotFound() {
~
 		String expectedLink = "";
~
 		
-commonCodeForGetSpreadsheetLink(MediaIndex.SubRole.FULL,
+commonCodeForGetSpreadsheetLink(SubRole.FULL,
  expectedLink);
~
 		ctrl.replay();
~
 		assertEquals(expectedLink, displayFigTableResultsItem.getSpreadsheetLink());
~
 		ctrl.verify();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarningTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarningTest.java
index 374357d..93e3802 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarningTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/DissFormatEmbargoWarningTest.java
@@ -3,7 +3,6 @@ package com.caucus.apps.onesearch.components;
 import static org.easymock.EasyMock.createMockBuilder;
~
 import static org.easymock.EasyMock.expect;
~
 import static org.junit.Assert.assertEquals;
~
-import static org.junit.Assert.assertNull;
~
 
~
 import java.text.DateFormat;
~
 import java.text.ParseException;
~
@@ -19,15 +18,13 @@ import org.junit.Test;
 
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.refworks.parser.ObjectIDType;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
-import com.caucus.test.util.tapestry.FieldUtils;
~
-
~
-
~
 import com.caucus.test.util.InstrumentedTestCase;
~
+import com.caucus.test.util.tapestry.FieldUtils;
 
~
 
~
 public class DissFormatEmbargoWarningTest extends InstrumentedTestCase 
~
 {
~
@@ -49,8 +46,8 @@ public class DissFormatEmbargoWarningTest extends InstrumentedTestCase
 	
~
 	private static final boolean NOT_DISSERTATION = false;
~
 	private static final boolean IS_DISSERTATION = true;
~
+//
 	private static final boolean DOES_NOT_SHOWORDERCOPIES_DISSERTATIONS = false ;
~
+//
 	private static final boolean SHOWORDERCOPIES_DISSERTATIONS = true ;
~
 	private static final String NO_FIELD_VLAUE = null;
~
 	private static final boolean CONTAINS_RESTRICTIONCODE = true ;
~
 	private static final boolean DOES_NOT_CONTAINS_RESTRICTIONCODE = false ;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFileTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFileTest.java
index 346ea07..b181352 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFileTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/IllustrataImageSaveAsFileTest.java
@@ -18,20 +18,18 @@ import org.apache.tapestry5.services.javascript.JavaScriptSupport;
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
 import org.junit.Before;
~
-import org.junit.Ignore;
~
 import org.junit.Test;
~
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.services.saveas.CitationType;
~
 import com.caucus.apps.corelib.util.DownloadProgress;
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
-import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.apps.onesearch.base.SaveAsFileBase;
~
 import com.caucus.apps.onesearch.model.savefile.SaveAsInputParameter;
~
 import com.caucus.apps.onesearch.pages.SaveAsDownloadProgress;
~
@@ -68,7 +66,8 @@ public class IllustrataImageSaveAsFileTest extends InstrumentedTestCase
 	private ThreadLocale mockCurrentLocale;
~
 	private PatentAvailableSectionsService patentSections;
~
 	private DatabaseListManager mockDblm;
~
+//
 	private PricingListManager mockPlm;
~
 	
~
 	@Before
~
 	public void setUp()	{
~
 		iControl = EasyMock.createControl();
~
@@ -87,7 +86,7 @@ public class IllustrataImageSaveAsFileTest extends InstrumentedTestCase
 		patentSectionsSaveAsManager = new PatentSectionsSaveAsManagerImpl(patentSections);
~
 		mockDblm = createAndInjectMock(DatabaseListManager.class, "dblm");
~
 		injectObject(patentSectionsSaveAsManager, "patentSectionsSaveAsManager"); 
~
+//
 		mockPlm = createAndInjectMock(PricingListManager.class, "plm");
~
 		mockSitesService = createAndInjectMock(SitesService.class, "sitesService");
~
 		mockCurrentLocale = createAndInjectMock(ThreadLocale.class, "currentLocale");
~
 	}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFileTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFileTest.java
index fbe900d..96a9bcc 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFileTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/ObjectLevelImageSaveAsFileTest.java
@@ -21,25 +21,22 @@ import org.apache.tapestry5.runtime.Event;
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
 import org.junit.Before;
~
-import org.junit.Ignore;
~
 import org.junit.Test;
~
 
~
 import com.caucus.apps.core.services.auth.Account;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.services.saveas.CitationType;
~
 import com.caucus.apps.corelib.util.DownloadProgress;
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
-import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.apps.onesearch.model.savefile.SaveAsInputParameter;
~
 import com.caucus.apps.onesearch.pages.SaveAsDownloadProgress;
~
 import com.caucus.apps.onesearch.services.ApplicationIdentifierService;
~
-import com.caucus.apps.onesearch.services.SitesService;
~
 import com.caucus.apps.onesearch.services.patents.PatentAvailableSectionsService;
~
 import com.caucus.apps.onesearch.services.saveas.PatentSectionsSaveAsManagerImpl;
~
 import com.caucus.apps.onesearch.services.search.postprocessing.PostProcessingViewResolver;
~
@@ -65,13 +62,13 @@ public class ObjectLevelImageSaveAsFileTest extends InstrumentedTestCase
 	private Account mockAccount;
~
 	private ResultsList mockResultsList;
~
 	private Messages mockMessages;
~
+//
 	private SitesService mockSitesService;
~
 	private ThreadLocale mockCurrentLocale;
~
 	private PatentAvailableSectionsService patentSections;
~
 	private PatentSectionsSaveAsManagerImpl patentSectionsSaveAsManager;
~
 	private DatabaseListManager mockDblm;
~
 	public static final String  WEB_CITE_MANAGER_PROPERTIES_KEY = "risBasedWebCiteManager";
~
+//
 	private PricingListManager mockPlm;
~
 	
~
 	@Before
~
 	public void setUp()	{
~
@@ -101,8 +98,8 @@ public class ObjectLevelImageSaveAsFileTest extends InstrumentedTestCase
 		patentSectionsSaveAsManager = new PatentSectionsSaveAsManagerImpl(patentSections);
~
 		injectObject(patentSectionsSaveAsManager, "patentSectionsSaveAsManager"); 
~
 
~
+//
 		mockPlm = createAndInjectMock(PricingListManager.class, "plm");
~
+//
 		mockSitesService = createAndInjectMock(SitesService.class, "sitesService");
~
 		mockCurrentLocale = createAndInjectMock(ThreadLocale.class, "currentLocale");
~
 		setTapestryIOC();
~
 	}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/OtherFormatLinksTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/OtherFormatLinksTest.java
index 2d300ea..5029e00 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/OtherFormatLinksTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/OtherFormatLinksTest.java
@@ -4,12 +4,13 @@ import static org.easymock.EasyMock.anyBoolean;
 import static org.easymock.EasyMock.createMockBuilder;
~
 import static org.easymock.EasyMock.eq;
~
 import static org.easymock.EasyMock.expect;
~
+import static org.easymock.EasyMock.expectLastCall;
 
~
 import static org.easymock.EasyMock.isA;
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertFalse;
~
-import static org.junit.Assert.assertNull;
~
 import static org.junit.Assert.assertTrue;
~
 
~
+import java.io.IOException;
 
~
 import java.util.ArrayList;
~
 import java.util.Calendar;
~
 import java.util.Date;
~
@@ -21,38 +22,33 @@ import org.easymock.EasyMock;
 import org.easymock.IMocksControl;
~
 import org.junit.Before;
~
 import org.junit.Test;
~
+import org.slf4j.Logger;
 
~
 
~
 import com.caucus.apps.core.services.usagelogging.Operation;
~
-import com.caucus.apps.core.services.usagelogging.RetrieveItem;
~
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.components.CaptureMarkup;
~
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngine;
~
-import com.caucus.apps.corelib.search.SearchHistory;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryService;
~
 import com.caucus.apps.corelib.search.impl.DummyResultsList;
~
 import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
-import com.caucus.apps.corelib.usage.UsageLoggingDummy;
~
-import com.caucus.apps.onesearch.access.Database;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.apps.onesearch.model.ContentItemLinkConfig;
~
 import com.caucus.apps.onesearch.services.ContentItemLinksService;
~
-import com.caucus.apps.onesearch.services.DummyUsageLoggingAppHelper;
~
 import com.caucus.apps.onesearch.services.EMSURLGenerator;
~
 import com.caucus.apps.onesearch.services.PaymentTypeService;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
-import com.caucus.services.usagelogging.OperationTypeValues;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
 
~
@@ -70,20 +66,16 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 	private SearchEngine engine;
~
 	private List<MediaAttachment> mediaAttachments;
~
 	private MediaAttachment mediaAttachment;
~
-	private String zipFilePath;
~
 	private EMSURLGenerator emsURLGenerator;
~
 	private String Path="Path";
~
 	private String[] databaseValue;
~
 	private String citationText;
~
 	private PricingListManager plm;
~
 	private DatabaseListManager dbListManager;
~
-	private Database database;
~
 	private PaymentTypeService paymentTypeService;
~
-	private UsageLoggingDummy usageLog;
~
-	private SearchHistory mockSearchHistory;
~
 	private ContentItemWrapperFactoryService mockContentItemWrapperFactory;
~
-	private MediaIndex mockMIndex;
~
 	private RightsMap mockrMap;
~
 	
+private Logger mockLogger;
 
~
 
~
 
~
 
~
@@ -99,7 +91,6 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 	@Before
~
 	public void setUp() {
~
 		citationText = "citationText";
~
-		zipFilePath = "zipFilePath";
~
 		databaseValue = new String[2];
~
 		databaseValue[0] = "b";
~
 		otherFormatLinks = new OtherFormatLinks();
~
@@ -121,13 +112,10 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 		emsURLGenerator = ctrl.createMock(EMSURLGenerator.class);
~
 		plm = ctrl.createMock(PricingListManager.class);
~
 		dbListManager = ctrl.createMock(DatabaseListManager.class);
~
-		database = ctrl.createMock(Database.class);
~
 		paymentTypeService = ctrl.createMock(PaymentTypeService.class);
~
-		usageLog = new UsageLoggingDummy();
~
-		mockSearchHistory = ctrl.createMock(SearchHistory.class);
~
 		mockContentItemWrapperFactory = ctrl.createMock(ContentItemWrapperFactoryService.class);
~
-		mockMIndex = ctrl.createMock(MediaIndex.class);
~
 		mockrMap = ctrl.createMock(RightsMap.class);
~
 		
+mockLogger = ctrl.createMock(Logger.class);
 
~
 	}
~
 
~
 	private void setTapestryIOC() {
~
@@ -141,11 +129,8 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 		FieldUtils.setFieldStrict(otherFormatLinks, "dbListManager", dbListManager);
~
 		FieldUtils.setFieldStrict(otherFormatLinks, "paymentTypeService", paymentTypeService);
~
 		FieldUtils.setFieldStrict(otherFormatLinks, "plm", plm);
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "usageLog", usageLog);
~
-		//FieldUtils.setFieldStrict(otherFormatLinks, "mIndex", mockMIndex);
~
-
~
-
~
 		FieldUtils.setFieldStrict(AbstractContentItemBase.class, otherFormatLinks, "contentItemWrapperFactory", mockContentItemWrapperFactory);
~
 		
+FieldUtils.setFieldStrict(otherFormatLinks, "logger", mockLogger);
 
~
 	}
~
 
~
 	@Test
~
@@ -265,8 +250,6 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 		ctrl.verify();
~
 	}
~
 
~
-	private static final String [] TEST_DBS = {"666"};
~
-	
~
 	private DummyResultsItem makeDummyResultsItem() throws Exception {
~
 		
~
 		QueryDataStd queryData = new QueryDataStd();
~
@@ -289,156 +272,53 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 	}
~
 
~
 	@Test
~
 	public void 
-shouldDownloadZipFile_AndLogRetrieve()throws
+shouldDownloadZipFile_AndUsageLogThroughMediaService_AndCheckRedirectReponse_WhenZipFileMediaAttachmentIsFound() throws
  Exception {
~
 		otherFormatLinks = 
-createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex")
~
-			.createMock(ctrl);
+createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex").createMock(ctrl);
 
~
 		setTapestryIOC();
~
 
~
 		expect(otherFormatLinks.getMediaIndex()).andReturn(mIndex);
~
 		mediaAttachments.add(mediaAttachment);
~
 		expect(mIndex.getMediaAttachments(Role.FT, SubRole.ZFT)).andReturn(mediaAttachments);
~
 		expect(mediaAttachment.getPath()).andReturn(Path);
~
 
~
 		DummyResultsItem item = makeDummyResultsItem();
~
 		ResultsList dummyResultsList = injectDummyResultsList(otherFormatLinks, item);
~
 
~
 		
-expect(emsURLGenerator.getURL(eq(DisplayFormat.ZipFileDownload),
+String zipFilePath = "zipFilePath";
~
+		expect(
~
+				emsURLGenerator.getURL(eq(DisplayFormat.ZipFileDownload),
  eq(mediaAttachment), eq(Path), eq(dummyResultsList.get(1)), eq(databaseValue),
~
 						isA(Operation.class), anyBoolean(), eq("OS:EMS-OtherFormatLinks-getZipFilePath"), eq((QueryData) null), eq((String) 
-null))).andReturn(zipFilePath);
+null))).andReturn(
~
+				zipFilePath);
 
~
 		expect(mockContentItemWrapperFactory.getDatabases(dummyResultsList.get(1))).andReturn(databaseValue);
~
 
~
 		mockResponse.sendRedirect(zipFilePath); // Most important 'implied' assert.
~
-		
~
-		DummyUsageLoggingAppHelper dummyUsageLoggingAppHelper = new DummyUsageLoggingAppHelper();
~
-		UsageLoggingDummy dummyUsageLog = new UsageLoggingDummy();
~
 
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "loggingHelper", dummyUsageLoggingAppHelper);		
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "usageLog", dummyUsageLog);	
~
-		
~
 		ctrl.replay();
~
 		otherFormatLinks.onZipFileDownload();
~
 		ctrl.verify();
~
 
~
 		
-assertEquals (mockResponse,
+assertEquals(mockResponse,
  FieldUtils.getField(otherFormatLinks, "response"));
-RetrieveItem[] retrieveItems = dummyUsageLog.getRetrievedItems();
~
-		assertEquals(1, retrieveItems.length);
~
-		assertEquals(OperationTypeValues.Save.toString(), dummyUsageLog.getOperation().getOpType());
~
-		runAssertsForLogging(retrieveItems[0], DEFAULT_START_DATE, DEFAULT_END_DATE, DisplayFormat.ZipFileDownload.toString(), DEFAULT_PARENT_ID_0001, DEFAULT_ITEM_ID_0001,
~
-				DEFAULT_SOURCE_TYPE, DEFAULT_USAGE_INFO, null, DEFAULT_PUB_CODE, DEFAULT_OBJECT_TYPE, null, null, null);
 
~
 	}
~
 	
~
 	@Test
~
 	public void 
-shouldDownloadZipFile_AndNotLogRetrieve_WhenUsageIsNull()throws
+shouldNotDownloadZipFile_AndLogError_WhenZipFileMediaAttachmentIsNotFound() throws
  Exception {
~
 		otherFormatLinks = 
-createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex")
~
-			.createMock(ctrl);
+createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex").createMock(ctrl);
 
~
 		setTapestryIOC();
~
-		
~
-		expect(otherFormatLinks.getMediaIndex()).andReturn(mIndex);			
~
-		mediaAttachments.add(mediaAttachment);
~
-		expect(mIndex.getMediaAttachments(Role.FT, SubRole.ZFT)).andReturn(mediaAttachments);
~
-		expect(mediaAttachment.getPath()).andReturn(Path);  
~
-		
~
-		DummyResultsItem item = makeDummyResultsItem();
~
-		item.setField("usageInfo", null);
~
-		ResultsList dummyResultsList = injectDummyResultsList(otherFormatLinks, item);
~
-		expect(emsURLGenerator.getURL(eq(DisplayFormat.ZipFileDownload), eq(mediaAttachment), eq(Path), eq(dummyResultsList.get(1)), 
~
-				eq(databaseValue), isA(Operation.class), anyBoolean(), 
~
-				eq("OS:EMS-OtherFormatLinks-getZipFilePath"), eq((QueryData) null), eq((String) null))).andReturn(zipFilePath);
~
-		expect(mockContentItemWrapperFactory.getDatabases(dummyResultsList.get(1))).andReturn(databaseValue);
~
 
~
-mockResponse.sendRedirect(zipFilePath); // Most important 'implied' assert.
~
-		
~
-		DummyUsageLoggingAppHelper dummyUsageLoggingAppHelper = new DummyUsageLoggingAppHelper();
~
-		UsageLoggingDummy dummyUsageLog = new UsageLoggingDummy();
~
-
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "loggingHelper", dummyUsageLoggingAppHelper);		
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "usageLog", dummyUsageLog);	
~
-		
~
-		ctrl.replay();
~
-		otherFormatLinks.onZipFileDownload();
~
-		ctrl.verify();
~
-
~
-		assertEquals (mockResponse, FieldUtils.getField(otherFormatLinks, "response"));
~
-
~
-		RetrieveItem[] retrieveItems = dummyUsageLog.getRetrievedItems();
~
-		assertNull(retrieveItems);
~
-	}
~
-
~
-	@Test
~
-	public void shouldDownloadZipFile_AndNotLogRetrieve_WhenUsageIsEmpty()throws Exception	{
~
-		otherFormatLinks = createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex")
~
-			.createMock(ctrl);
~
-		setTapestryIOC();
 		expect(otherFormatLinks.getMediaIndex()).andReturn(mIndex);
-mediaAttachments.add(mediaAttachment);
 
~
 		expect(mIndex.getMediaAttachments(Role.FT, 
-SubRole.ZFT)).andReturn(mediaAttachments);
~
-		expect(mediaAttachment.getPath()).andReturn(Path);  
~
-		
~
-		DummyResultsItem item = makeDummyResultsItem();
~
-		item.setField("usageInfo", "");
~
-		ResultsList dummyResultsList = injectDummyResultsList(otherFormatLinks, item);
~
-		expect(emsURLGenerator.getURL(eq(DisplayFormat.ZipFileDownload), eq(mediaAttachment), eq(Path), eq(dummyResultsList.get(1)), 
~
-				eq(databaseValue), isA(Operation.class), anyBoolean(), 
~
-				eq("OS:EMS-OtherFormatLinks-getZipFilePath"), eq((QueryData) null), eq((String) null))).andReturn(zipFilePath);
~
-		expect(mockContentItemWrapperFactory.getDatabases(dummyResultsList.get(1))).andReturn(databaseValue);
+SubRole.ZFT)).andReturn(null);
 
~
 
~
 		
-mockResponse.sendRedirect(zipFilePath); // Most important 'implied' assert.
~
-		
~
-		DummyUsageLoggingAppHelper dummyUsageLoggingAppHelper = new DummyUsageLoggingAppHelper();
~
-		UsageLoggingDummy dummyUsageLog = new UsageLoggingDummy();
+mockResponse.sendRedirect((String) null);
~
+		expectLastCall().andThrow(new IOException(""));
~
+		mockLogger.error("fail to redirect response object to ZIP file URL:");
 
~
 
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "loggingHelper", dummyUsageLoggingAppHelper);		
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "usageLog", dummyUsageLog);	
~
-		
~
 		ctrl.replay();
~
 		otherFormatLinks.onZipFileDownload();
~
 		ctrl.verify();
~
 
~
 		
-assertEquals (mockResponse,
+assertEquals(mockResponse,
  FieldUtils.getField(otherFormatLinks, "response"));
-RetrieveItem[] retrieveItems = dummyUsageLog.getRetrievedItems();
~
-		assertNull(retrieveItems);
 
~
 	}
~
 
~
-	@Test
~
-	public void shouldDownloadZipFile_AndNotLogRetrieve_WhenNotCaucusItem()throws Exception	{
~
-		otherFormatLinks = createMockBuilder(OtherFormatLinks.class).addMockedMethod("getMediaIndex")
~
-			.createMock(ctrl);
~
-		setTapestryIOC();
~
-		
~
-		expect(otherFormatLinks.getMediaIndex()).andReturn(mIndex);			
~
-		mediaAttachments.add(mediaAttachment);
~
-		expect(mIndex.getMediaAttachments(Role.FT, SubRole.ZFT)).andReturn(mediaAttachments);
~
-		expect(mediaAttachment.getPath()).andReturn(Path);  
~
-		
~
-		DummyResultsItem item = makeDummyResultsItem();
~
-		item.setField("isCaucusItem", "false");
~
-		ResultsList dummyResultsList = injectDummyResultsList(otherFormatLinks, item);
~
-		expect(emsURLGenerator.getURL(eq(DisplayFormat.ZipFileDownload), eq(mediaAttachment), eq(Path), eq(dummyResultsList.get(1)), 
~
-				eq(databaseValue), isA(Operation.class), anyBoolean(), 
~
-				eq("OS:EMS-OtherFormatLinks-getZipFilePath"), eq((QueryData) null), eq((String) null))).andReturn(zipFilePath);
~
-		expect(mockContentItemWrapperFactory.getDatabases(dummyResultsList.get(1))).andReturn(databaseValue);
~
-
~
-		mockResponse.sendRedirect(zipFilePath); // Most important 'implied' assert.
~
-		
~
-		DummyUsageLoggingAppHelper dummyUsageLoggingAppHelper = new DummyUsageLoggingAppHelper();
~
-		UsageLoggingDummy dummyUsageLog = new UsageLoggingDummy();
~
-
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "loggingHelper", dummyUsageLoggingAppHelper);		
~
-		FieldUtils.setFieldStrict(otherFormatLinks, "usageLog", dummyUsageLog);	
~
-		
~
-		ctrl.replay();
~
-		otherFormatLinks.onZipFileDownload();
~
-		ctrl.verify();
~
-
~
-		assertEquals (mockResponse, FieldUtils.getField(otherFormatLinks, "response"));
~
-
~
-		RetrieveItem[] retrieveItems = dummyUsageLog.getRetrievedItems();
~
-		assertNull(retrieveItems);
~
-	}
~
-	
~
 	private ResultsList injectDummyResultsList(OtherFormatLinks otherFormatLinks, DummyResultsItem item) throws Exception {
~
 		DummyResultsList dummyResultsList = new DummyResultsList(new QueryDataStd());
~
 		item.setResultList(dummyResultsList);
~
@@ -447,26 +327,6 @@ public class OtherFormatLinksTest extends InstrumentedTestCase
 		return dummyResultsList;
~
 	}
~
 
~
-	private void runAssertsForLogging(RetrieveItem retrieveItem, String retStartDate, String retEndDate, 
~
-			String retItemFormat, String retParentId, String retItemId, 
~
-			String retSourceType, String retUsageInfo, String retOrigin, String retPublicationCode, String retObjectType, 
~
-			String retSearchProductInfo, String retSearchId, String retJPMorgan) {
~
-		
~
-			assertEquals(retItemId, retrieveItem.getItemId());
~
-			assertEquals(retParentId, retrieveItem.getParentItemId());
~
-			assertEquals(retStartDate, retrieveItem.getPublicationDate().getStartDate());
~
-			assertEquals(retEndDate, retrieveItem.getPublicationDate().getEndDate());
~
-			assertEquals(retPublicationCode, retrieveItem.getPublicationCode());
~
-			assertEquals(retItemFormat, retrieveItem.getItemFormat());
~
-			assertEquals(retSourceType, retrieveItem.getSourceType());
~
-			assertEquals(retObjectType, retrieveItem.getObjectType());
~
-			assertEquals(retUsageInfo, retrieveItem.getUsageInfo());
~
-			assertEquals(retOrigin, retrieveItem.getOrigin());
~
-			assertEquals(retSearchProductInfo, retrieveItem.getSearchProductInfo());
~
-			assertEquals(retSearchId, retrieveItem.getSearchId());
~
-			assertEquals(retJPMorgan, retrieveItem.getAccessAgreementStatus() == null ? null : retrieveItem.getAccessAgreementStatus().toString());
~
-	}
~
-	
~
 	@Test
~
 	public void testIsScholarUniv(){
~
 		assertFalse(otherFormatLinks.isScholarUniv());
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFileTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFileTest.java
index 91b79c4..860b7af 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFileTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/OutboundLinksSaveAsFileTest.java
@@ -20,8 +20,7 @@ import org.junit.Test;
 import com.caucus.apps.core.services.auth.LinkResolverDetail;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndexCacheService;
+com.caucus.apps.corelib.media.Role;
 
~
 import com.caucus.apps.corelib.resolvers.OutboundLinkResolver;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryService;
~
@@ -30,10 +29,8 @@ import com.caucus.apps.corelib.util.HttpVsHttpsService;
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.services.OutboundLinkingTemplateHelper;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
-import com.caucus.test.util.tapestry.FieldUtils;
~
-
~
-
~
 import com.caucus.test.util.InstrumentedTestCase;
~
+import com.caucus.test.util.tapestry.FieldUtils;
 
~
 
~
 public class OutboundLinksSaveAsFileTest extends InstrumentedTestCase 
~
 {
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/PageImagePrintViewTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/PageImagePrintViewTest.java
index 8d45b20..d03c174 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/PageImagePrintViewTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/PageImagePrintViewTest.java
@@ -17,8 +17,8 @@ import org.junit.Test;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Comp;
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.media.mindexv2.Mindex;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/PinkynailPreviewTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/PinkynailPreviewTest.java
index 36d3ba0..6676f7c 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/PinkynailPreviewTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/PinkynailPreviewTest.java
@@ -26,7 +26,8 @@ import com.caucus.apps.corelib.access.User;
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
@@ -206,10 +207,10 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 			attachment.setOrder(1);
~
 			attachment.setCategories(new ArrayList<String>(Arrays.asList("Figure")));
~
 			expect(mockPinkynailBubble.getSequence()).andReturn(1);
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL)).andReturn(
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL)).andReturn(
 
~
 					new ArrayList<MediaAttachment>(Arrays.asList(attachment)));
~
 		} else {
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL)).andReturn(new
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL)).andReturn(new
  ArrayList<MediaAttachment>());
~
 		}
~
 	}
~
 
~
@@ -251,22 +252,22 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 		setTapestryIOC();
~
 		FieldUtils.setFieldStrict(pinkynailPreview, "item", mockSource);
~
 		expect(mockMediaIndexCache.getMediaIndex(mockSource)).andReturn(mockMediaIndex);
~
 		if 
-(MediaIndex.SubRole.ORIG.equals(subRole))
+(SubRole.ORIG.equals(subRole))
  {
~
 			MediaAttachment mediaAttachment = new MediaAttachment();
~
 			mediaAttachment.setPath("path");
~
 			mediaAttachment.setOrder(1);
~
 			expect(mockPinkynail.getOrder()).andReturn(1);
~
 			expect(mockPinkynailBubble.getPrefix()).andReturn("tab");
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(
 
~
 					new ArrayList<MediaAttachment>(Arrays.asList(mediaAttachment)));
~
 		} else {
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(null);
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(null);
 
~
 		}
~
 	}
~
 
~
 	@Test
~
 	public void shouldReturnTrueFromIsMoreThanOneFormatSpreadsheetLink_WhenMediaAttachmentForOriginalIsFound() {
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.ORIG);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.ORIG);
 
~
 		ctrl.replay();
~
 		boolean actualValue = pinkynailPreview.isMoreThanOneFormatSpreadsheetLink();
~
 		ctrl.verify();
~
@@ -275,7 +276,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 
~
 	@Test
~
 	public void shouldReturnFalseFromIsMoreThanOneFormatSpreadsheetLink_WhenMediaAttachmentForOriginalIsNotFound() {
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.FULL);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = pinkynailPreview.isMoreThanOneFormatSpreadsheetLink();
~
 		ctrl.verify();
~
@@ -285,7 +286,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestIsMoreThanOneFormat_ReturnsTrue_WhenMoreThanOneFormatIsFound() {
~
 		commonCodeForFullSizeImageLink(true);
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.ORIG);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.ORIG);
 
~
 		ctrl.replay();
~
 		boolean actualValue = pinkynailPreview.isMoreThanOneFormat();
~
 		ctrl.verify();
~
@@ -304,7 +305,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestIsMoreThanOneFormat_ReturnsFalse_WhenSpreadsheetIsNotFound() {
~
 		commonCodeForFullSizeImageLink(true);
~
 		
-commonCodeForIsMoreThanOneFormatSpreadsheetLink(MediaIndex.SubRole.FULL);
+commonCodeForIsMoreThanOneFormatSpreadsheetLink(SubRole.FULL);
 
~
 		ctrl.replay();
~
 		boolean actualValue = pinkynailPreview.isMoreThanOneFormat();
~
 		ctrl.verify();
~
@@ -315,13 +316,13 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 		setTapestryIOC();
~
 		FieldUtils.setFieldStrict(pinkynailPreview, "item", mockSource);
~
 		expect(mockMediaIndexCache.getMediaIndex(mockSource)).andReturn(mockMediaIndex);
~
 		if 
-(MediaIndex.SubRole.ORIG.equals(subRole))
+(SubRole.ORIG.equals(subRole))
  {
~
 			MediaAttachment mediaAttachment = new MediaAttachment();
~
 			mediaAttachment.setPath("path");
~
 			mediaAttachment.setOrder(1);
~
 			expect(mockPinkynail.getOrder()).andReturn(1);
~
 			expect(mockPinkynailBubble.getPrefix()).andReturn("tab");
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(
 
~
 					new ArrayList<MediaAttachment>(Arrays.asList(mediaAttachment)));
~
 			expect(mockFieldValueCache.getFieldValue(mockSource, AbstractContentItemBase.FIELD_BUNDLES)).andReturn("db1");
~
 			expect(
~
@@ -329,14 +330,14 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 							isA(String[].class), isA(Operation.class), anyBoolean(), isA(String.class), eq((QueryData) null), eq((String) null))).andReturn(
~
 					expectedUrl);
~
 		} else {
~
 			
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(null);
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(null);
 
~
 		}
~
 	}
~
 
~
 	@Test
~
 	public void shouldTestGetSpreadsheetLink_ReturnsNonemptyString_WhenSpreadsheetIsFound() {
~
 		String expectedLink = "linkToSpreadsheet";
~
 		
-commonCodeForGetSpreadsheetLink(MediaIndex.SubRole.ORIG,
+commonCodeForGetSpreadsheetLink(SubRole.ORIG,
  expectedLink);
~
 		ctrl.replay();
~
 		assertEquals(expectedLink, pinkynailPreview.getSpreadsheetLink());
~
 		ctrl.verify();
~
@@ -345,7 +346,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestGetSpreadsheetLink_ReturnsEmptyString_WhenSpreadsheetIsNotFound() {
~
 		String expectedLink = "";
~
 		
-commonCodeForGetSpreadsheetLink(MediaIndex.SubRole.FULL,
+commonCodeForGetSpreadsheetLink(SubRole.FULL,
  expectedLink);
~
 		ctrl.replay();
~
 		assertEquals(expectedLink, pinkynailPreview.getSpreadsheetLink());
~
 		ctrl.verify();
~
@@ -358,7 +359,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 		MediaIndex mediaIndex = ctrl.createMock(MediaIndex.class);
~
 		List<MediaAttachment> list = new ArrayList<MediaAttachment>();
~
 		expect(mockMediaIndexCache.getMediaIndex(isA(ResultsItem.class))).andReturn(mediaIndex);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(list);
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(list);
 
~
 
~
 		ctrl.replay();
~
 		setTapestryIOC();
~
@@ -390,7 +391,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 		attachment.setGoid("GOID");
~
 		list.add(attachment);
~
 		expect(mockFieldFormatter.formatHitHighlighting("caption", false)).andReturn("caption");
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(list);
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(list);
 
~
 		expect(mockMediaIndexCache.getMediaIndex(isA(ResultsItem.class))).andReturn(mediaIndex);
~
 		ResultsList resultsList = ctrl.createMock(ResultsList.class);
~
 		expect(resultsList.getResultsID()).andReturn("resultid");
~
@@ -421,7 +422,7 @@ public class PinkynailPreviewTest extends InstrumentedTestCase
 		attachment.setGoid("");
~
 		list.add(attachment);
~
 		expect(mockFieldFormatter.formatHitHighlighting("caption", false)).andReturn("caption");
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(list);
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(list);
 
~
 		expect(mockMediaIndexCache.getMediaIndex(isA(ResultsItem.class))).andReturn(mediaIndex);
~
 		expect(mockContextService.getItemContext(mockSource, DisplayFormat.Record)).andReturn(null);
~
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFieldsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFieldsTest.java
new file mode 100755
index 0000000..46e3321
--- /dev/null
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailCustomFieldsTest.java
@@ -0,0 +1,127 @@
+package com.caucus.apps.onesearch.components;
~
~
+import static org.easymock.EasyMock.createMockBuilder;
~
+import static org.easymock.EasyMock.expect;
~
+import static org.junit.Assert.assertFalse;
~
+import static org.junit.Assert.assertTrue;
~
~
+import java.util.Arrays;
~
+import java.util.Map;
~
~
+import org.apache.tapestry5.services.Request;
~
+import org.easymock.EasyMock;
~
+import org.easymock.IMocksControl;
~
+import org.junit.Before;
~
+import org.junit.Test;
~
~
+import com.caucus.apps.corelib.access.User;
~
+import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
~
+import com.caucus.apps.onesearch.base.SaveAsFileBase;
~
+import com.caucus.apps.onesearch.model.savefile.SaveAsInputParameter;
~
+import com.caucus.apps.onesearch.services.media.RestrictionService;
~
+import com.caucus.test.util.tapestry.FieldUtils;
~
~
~
+public class SaveAsEmailCustomFieldsTest
~
+{
~
+	private SaveAsEmailCustomFields emailCustomFields;
~
+	private IMocksControl ctrl;
~
+	private User user;
~
+	private Request mockRequest;
~
+	
~
+	@Before
~
+	public void setUp() {
~
+		emailCustomFields = new SaveAsEmailCustomFields();
~
+		ctrl = EasyMock.createControl();
~
+		injectDependencies();
~
+	}
~
+	
~
+	private void injectDependencies() {
~
+		user = new User();
~
+		FieldUtils.setFieldStrict (emailCustomFields, "user", user);
~
+		
~
+		mockRequest = ctrl.createMock(Request.class);
~
+		FieldUtils.setFieldStrict (emailCustomFields, "request", mockRequest);
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotSetUserPricingNotification_whenNoShowPricingParameterSet() {
~
+		emailCustomFields = createMockBuilder(SaveAsEmailCustomFields.class).addMockedMethod("sendEmail").createMock(ctrl);
~
+		expect(emailCustomFields.sendEmail()).andReturn(null);
~
+		injectDependencies();
~
+		
~
+		expect (mockRequest.getParameter("showPricing")).andReturn(null);
~
+		FieldUtils.setFieldStrict (emailCustomFields, "request", mockRequest);
~
+		
~
+		assertFalse (user.getPricingNotification());
~
+		ctrl.replay();
~
+		emailCustomFields.exportToFileAfterPricing();
~
+		ctrl.verify();
~
+		assertFalse (user.getPricingNotification());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldSetUserPricingNotification_whenShowPricingParameterIsOn() {
~
+		emailCustomFields = createMockBuilder(SaveAsEmailCustomFields.class).addMockedMethod("sendEmail").createMock(ctrl);
~
+		expect(emailCustomFields.sendEmail()).andReturn(null);
~
+		injectDependencies();
~
+		
~
+		expect (mockRequest.getParameter("showPricing")).andReturn("on").atLeastOnce();
~
+		FieldUtils.setFieldStrict (emailCustomFields, "request", mockRequest);
~
+		
~
+		ctrl.replay();
~
+		emailCustomFields.exportToFileAfterPricing();
~
+		ctrl.verify();
~
+		assertTrue (user.getPricingNotification());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldSubmitPricingAsAjax() {
~
+		assertTrue (emailCustomFields.isSubmitPricingAsAjax());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldUseBasicSubmit() {
~
+		assertTrue (emailCustomFields.isBasicSubmit());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotAllowSaveTemplate() {
~
+		assertFalse (emailCustomFields.isAllowSaveTemplate());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotHavePublisherRestriction_ifNoCopyrightRestriction() {
~
+		prepareCopyrightRestriction(false);
~
~
+		ctrl.replay();
~
+		assertFalse (emailCustomFields.isPublisherRestriction());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldHavePublisherRestriction_ifCopyrightRestricted() {
~
+		prepareCopyrightRestriction(true);
~
~
+		ctrl.replay();
~
+		assertTrue (emailCustomFields.isPublisherRestriction());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	private void prepareCopyrightRestriction (boolean copyrightRestricted) {
~
+		SaveAsInputParameter params = new SaveAsInputParameter();
~
+		FieldUtils.setFieldStrict (emailCustomFields, "saveAsParams", params);
~
+		
~
+		SaveAsFileBase saveAsFileBase = new SaveAsCustomFields();
~
+		Map<Role,SubRole> checkRoles = saveAsFileBase.getRoleAndSubrole();
~
+		
~
+		RestrictionService restrictionService = ctrl.createMock(RestrictionService.class);
~
+		expect(restrictionService.isCopyrightRestricted(null, checkRoles, Arrays.asList(DeliveryMode.EMAIL, DeliveryMode.EMAIL_FULL)))
~
+			.andReturn(copyrightRestricted);
~
+		
~
+		FieldUtils.setFieldStrict (emailCustomFields, "restrictionService", restrictionService);
~
+	}
~
~
+}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailMultipleTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailMultipleTest.java
index ff40d7e..163e9c8 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailMultipleTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailMultipleTest.java
@@ -16,8 +16,8 @@ import org.junit.Test;
 
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngineException;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailSingleTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailSingleTest.java
index 1221a1a..640f1f1 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailSingleTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailSingleTest.java
@@ -16,8 +16,8 @@ import org.junit.Test;
 
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngineException;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailTest.java
index 93c65d8..52b6185 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsEmailTest.java
@@ -20,8 +20,8 @@ import org.junit.Test;
 
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsList;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImageTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImageTest.java
index f6ab855..80d454b 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImageTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImageTest.java
@@ -11,8 +11,6 @@ import java.util.HashMap;
 import java.util.List;
~
 import java.util.Map;
~
 
~
-import junit.framework.Assert;
~
-
~
 import org.apache.tapestry5.SelectModel;
~
 import org.apache.tapestry5.ioc.Messages;
~
 import org.easymock.EasyMock;
~
@@ -24,8 +22,8 @@ import com.caucus.apps.corelib.access.User;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.myresearch.ProfileManager;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
@@ -471,7 +469,7 @@ public class SaveAsFileImageTest  extends InstrumentedTestCase {
 		CitationType type = image.getSaveAsParams().getIncludeType();
~
 		ictl.verify();
~
 		
~
 		
-Assert.assertEquals(CitationType.CITATIONABSTRACTINDEX,
+assertEquals(CitationType.CITATIONABSTRACTINDEX,
  type);
~
 	}
~
 	
~
 	@Test
~
@@ -496,6 +494,6 @@ public class SaveAsFileImageTest  extends InstrumentedTestCase {
 		CitationType type = image.getSaveAsParams().getIncludeType();
~
 		ictl.verify();
~
 		
~
 		
-Assert.assertEquals(CitationType.CITATIONABSTRACTINDEX,
+assertEquals(CitationType.CITATIONABSTRACTINDEX,
  type);
~
 	}
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImage_CitationModelTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImage_CitationModelTest.java
index e8791ba..6b77bfa 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImage_CitationModelTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/SaveAsFileImage_CitationModelTest.java
@@ -1,10 +1,13 @@
 package com.caucus.apps.onesearch.components;
~
 
~
+import static org.junit.Assert.assertEquals;
~
+import static org.junit.Assert.assertNotNull;
 
~
 
~
 import java.util.HashMap;
~
 import java.util.List;
~
 import java.util.Map;
~
 
~
-import
+//import
  junit.framework.Assert;
~
 
~
 import org.apache.tapestry5.SelectModel;
~
 import org.apache.tapestry5.ioc.Messages;
~
@@ -17,8 +20,8 @@ import com.caucus.apps.corelib.access.User;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
 import com.caucus.apps.corelib.myresearch.ProfileManager;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -35,9 +38,8 @@ import com.caucus.apps.onesearch.services.saveas.ContentTypeResolverService;
 import com.caucus.apps.onesearch.services.saveas.ContentTypeResolverServiceImpl;
~
 import com.caucus.apps.onesearch.services.search.postprocessing.PostProcessingImageResolver;
~
 import com.caucus.apps.onesearch.services.search.postprocessing.PostProcessor;
~
+import com.caucus.test.util.InstrumentedTestCase;
 
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
-
~
-
~
 /**
~
  * This is to test the display rules in related to image-based documents in Academic interface.
~
  * 
~
@@ -62,7 +64,6 @@ import com.caucus.test.util.tapestry.FieldUtils;
  *     "Document images only" for non-Vogue items
~
  *     "Custom"
~
  */
~
-import com.caucus.test.util.InstrumentedTestCase;
~
 
~
 public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
~
 
~
@@ -135,11 +136,11 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Pdf,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(5,
+assertNotNull(model);
~
+		assertEquals(5,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.FULLTEXT,
+assertEquals(CitationType.FULLTEXT,
  model.getOptions().get(2).getValue());
~
 		
-Assert.assertEquals(CitationType.IMAGESONLY,
+assertEquals(CitationType.IMAGESONLY,
  model.getOptions().get(3).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(4).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -149,9 +150,9 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(true,ReferenceStyle.Pdf,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(3,
+assertNotNull(model);
~
+		assertEquals(3,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(2).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -162,11 +163,11 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Pdf,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(5,
+assertNotNull(model);
~
+		assertEquals(5,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.FULLTEXT,
+assertEquals(CitationType.FULLTEXT,
  model.getOptions().get(2).getValue());
~
 		
-Assert.assertEquals(CitationType.IMAGESONLY,
+assertEquals(CitationType.IMAGESONLY,
  model.getOptions().get(3).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(4).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -177,10 +178,10 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Pdf,false);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(4,
+assertNotNull(model);
~
+		assertEquals(4,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.IMAGESONLY,
+assertEquals(CitationType.IMAGESONLY,
  model.getOptions().get(2).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(3).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -194,11 +195,11 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		EasyMock.expect(messages.get("saveAsFile.DocImagesOnly")).andReturn("image only label singleton" ).anyTimes();
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(5,
+assertNotNull(model);
~
+		assertEquals(5,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.FULLTEXT,
+assertEquals(CitationType.FULLTEXT,
  model.getOptions().get(2).getValue());
~
 		
-Assert.assertEquals(CitationType.IMAGESONLY,
+assertEquals(CitationType.IMAGESONLY,
  model.getOptions().get(3).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(4).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -208,9 +209,9 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Jpeg,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(1,
+assertNotNull(model);
~
+		assertEquals(1,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.IMAGESONLY,
+assertEquals(CitationType.IMAGESONLY,
  model.getOptions().get(0).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -220,10 +221,10 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Html,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(3,
+assertNotNull(model);
~
+		assertEquals(3,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.CITATIONABSTRACTINDEX,
+assertEquals(CitationType.CITATIONABSTRACTINDEX,
  model.getOptions().get(1).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(2).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
@@ -233,10 +234,10 @@ public class SaveAsFileImage_CitationModelTest  extends InstrumentedTestCase {
 		setCommonExpections(false,ReferenceStyle.Text,true);
~
 		ictl.replay();
~
 		SelectModel model = image.getCitationTypeModel();
~
 		
-Assert.assertNotNull(model);
~
-		Assert.assertEquals(3,
+assertNotNull(model);
~
+		assertEquals(3,
  model.getOptions().size());
~
 		
-Assert.assertEquals(CitationType.CITATIONABSTRACTINDEX,
+assertEquals(CitationType.CITATIONABSTRACTINDEX,
  model.getOptions().get(1).getValue());
~
 		
-Assert.assertEquals(CitationType.Custom,
+assertEquals(CitationType.Custom,
  model.getOptions().get(2).getValue());
~
 		ictl.verify();
~
 	}
~
 	
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingTest.java
index 323a608..e11352b 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/branding/InstitutionalBrandingTest.java
@@ -536,4 +536,40 @@ public class InstitutionalBrandingTest extends InstrumentedTestCase
 
~
 		assertNull(customText);
~
 	}
~
 	
~
 	
+private boolean commonCodeForIsFirstBrandingImageAndNotFirstBrandingLink(BrandingImage[] brandingImages, BrandingLink[] brandingLinks) throws Exception {
~
+		Field brandingImageField = InstitutionalBranding.class.getDeclaredField("brandingImages");
~
+		brandingImageField.setAccessible(true);
~
+		brandingImageField.set(institutionalBranding, brandingImages);
~
+		Field brandingLinkField = InstitutionalBranding.class.getDeclaredField("brandingLinks");
~
+		brandingLinkField.setAccessible(true);
~
+		brandingLinkField.set(institutionalBranding, brandingLinks);
~
~
+		ctrl.replay();
~
+		boolean result = institutionalBranding.isFirstBrandingImageAndNotFirstBrandingLink();
~
+		ctrl.verify();
~
~
+		return result;
~
+	}
~
~
+	@Test
~
+	public void shouldTestIsFirstBrandingImageAndNotFirstBrandingLink_ReturnsTrue() throws Exception {
~
+		BrandingImage[] brandingImages = {new BrandingImage()};
~
+		BrandingLink[] brandingLinks = { };
~
+		assertTrue(commonCodeForIsFirstBrandingImageAndNotFirstBrandingLink(brandingImages, brandingLinks));
~
+	}
~
~
+	@Test
~
+	public void shouldTestIsFirstBrandingImageAndNotFirstBrandingLink_ReturnsFalse_WhenFirstBrandingImageIsNotPresent() throws Exception {
~
+		BrandingImage[] brandingImages = { };
~
+		BrandingLink[] brandingLinks = { };
~
+		assertFalse(commonCodeForIsFirstBrandingImageAndNotFirstBrandingLink(brandingImages, brandingLinks));
~
+	}
~
~
+	@Test
~
+	public void shouldTestIsFirstBrandingImageAndNotFirstBrandingLink_ReturnsFalse_WhenFirstBrandingLinkIsPresent() throws Exception {
~
+		BrandingImage[] brandingImages = {new BrandingImage()};
~
+		BrandingLink[] brandingLinks = {new BrandingLink()};
~
+		assertFalse(commonCodeForIsFirstBrandingImageAndNotFirstBrandingLink(brandingImages, brandingLinks));
~
+	}
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnailsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnailsTest.java
index 223baab..903ec01 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnailsTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/IllustrataThumbnailsTest.java
@@ -21,6 +21,8 @@ import org.junit.Test;
 import com.caucus.apps.core.services.usagelogging.Operation;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.QueryData;
~
@@ -270,7 +272,7 @@ public class IllustrataThumbnailsTest extends InstrumentedTestCase
 		MediaAttachment ma1 = new MediaAttachment();
~
 		ma1.setOrder(orderForMa);
~
 		List<MediaAttachment> mas = new ArrayList<MediaAttachment>(Arrays.asList(ma1));
~
 		
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL)).andReturn(mas);
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL)).andReturn(mas);
 
~
 		return mockMediaIndex;
~
 	}
~
 
~
@@ -325,7 +327,7 @@ public class IllustrataThumbnailsTest extends InstrumentedTestCase
 		ma1.setOrder(orderForMa);
~
 		ma1.setPath("path");
~
 		List<MediaAttachment> mas = new ArrayList<MediaAttachment>(Arrays.asList(ma1));
~
 		
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(mas);
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(mas);
 
~
 	}
~
 
~
 	@Test
~
@@ -386,7 +388,7 @@ public class IllustrataThumbnailsTest extends InstrumentedTestCase
 		ma1.setOrder(orderForMa);
~
 		ma1.setPath("path");
~
 		List<MediaAttachment> mas = new ArrayList<MediaAttachment>(Arrays.asList(ma1));
~
 		
-expect(mockMediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.ORIG)).andReturn(mas);
+expect(mockMediaIndex.getMediaAttachments(Role.IXI, SubRole.ORIG)).andReturn(mas);
 
~
 		String[] expectedDatabases = { };
~
 		if (runExpects) {
~
 			expect(mockContentItemWrapperFactory.getDatabases(item)).andReturn(expectedDatabases);
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainerTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainerTest.java
index fbda96a..4e668bb 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainerTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/PinkynailsContainerTest.java
@@ -1,6 +1,7 @@
 package com.caucus.apps.onesearch.components.citation;
~
 
~
 import static org.easymock.EasyMock.expect;
~
+import static org.easymock.EasyMock.isA;
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertFalse;
~
 import static org.junit.Assert.assertTrue;
~
@@ -12,21 +13,19 @@ import org.apache.tapestry5.ioc.services.SymbolSource;
 import org.apache.tapestry5.services.ApplicationStateManager;
~
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
-import static org.easymock.EasyMock.isA;
~
 import org.junit.Before;
~
-import org.junit.Ignore;
~
 import org.junit.Test;
~
 
~
-import com.caucus.apps.corelib.access.User;
~
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.SearchHistory;
~
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
 import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryService;
~
 import com.caucus.apps.corelib.usage.UsageLogging;
~
-import com.caucus.apps.corelib.usage.UsageLoggingDummy;
~
 import com.caucus.apps.corelib.util.HttpVsHttpsService;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.PricingListManager;
~
@@ -88,7 +87,7 @@ public class PinkynailsContainerTest extends InstrumentedTestCase
 	public void testInitMedia02() {
~
 		expect(restrictionService.isIllustrataImageAvailable(item, false)).andReturn(true);
~
 		expect(mediaIndex.getItem()).andReturn(item);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(new
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(new
  ArrayList<MediaAttachment>());
~
 		
~
 		ctrl.replay();
~
 		container.initMedia(mediaIndex);
~
@@ -109,7 +108,7 @@ public class PinkynailsContainerTest extends InstrumentedTestCase
 		
~
 		expect(restrictionService.isIllustrataImageAvailable(item, false)).andReturn(true);
~
 		expect(mediaIndex.getItem()).andReturn(item);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(Arrays.asList(attach01,
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(Arrays.asList(attach01,
  attach02, attach03));
~
 		
~
 		ctrl.replay();
~
 		container.initMedia(mediaIndex);
~
@@ -142,7 +141,7 @@ public class PinkynailsContainerTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, false)).andReturn(false);
~
 		expect(mediaIndex.getItem()).andReturn(item);
~
 		expect(mediaIndex.isTextAndGraphicsAvailable(false)).andReturn(true);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.THUM)).andReturn(Arrays.asList(attach01,
+expect(mediaIndex.getMediaAttachments(Role.ILI, SubRole.THUM)).andReturn(Arrays.asList(attach01,
  attach02, attach03));
~
 		
~
 		ctrl.replay();
~
 		container.initMedia(mediaIndex);
~
@@ -164,8 +163,8 @@ public class PinkynailsContainerTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, false)).andReturn(false);
~
 		expect(mediaIndex.getItem()).andReturn(item);
~
 		expect(mediaIndex.isTextAndGraphicsAvailable(false)).andReturn(true);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.THUM)).andReturn(Arrays.asList(attach01,
+expect(mediaIndex.getMediaAttachments(Role.ILI, SubRole.THUM)).andReturn(Arrays.asList(attach01,
  attach02));
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL)).andReturn(Arrays.asList(attach03));
+expect(mediaIndex.getMediaAttachments(Role.ILI, SubRole.FULL)).andReturn(Arrays.asList(attach03));
~
 		
~
 		ctrl.replay();
~
 		container.initMedia(mediaIndex);
~
@@ -187,9 +186,9 @@ public class PinkynailsContainerTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, false)).andReturn(false);
~
 		expect(mediaIndex.getItem()).andReturn(item);
~
 		expect(mediaIndex.isTextAndGraphicsAvailable(false)).andReturn(true);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.THUM)).andReturn(Arrays.asList(attach01,
+expect(mediaIndex.getMediaAttachments(Role.ILI, SubRole.THUM)).andReturn(Arrays.asList(attach01,
  attach02));
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL)).andReturn(Arrays.asList(attach01,
+expect(mediaIndex.getMediaAttachments(Role.ILI, SubRole.FULL)).andReturn(Arrays.asList(attach01,
  attach02));
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL)).andReturn(Arrays.asList(attach03));
+expect(mediaIndex.getMediaAttachments(Role.IXI, SubRole.FULL)).andReturn(Arrays.asList(attach03));
~
 		
~
 		ctrl.replay();
~
 		
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/TextPlusGraphicsContainerTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/TextPlusGraphicsContainerTest.java
index 0f8d051..7757a15 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/TextPlusGraphicsContainerTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/TextPlusGraphicsContainerTest.java
@@ -34,7 +34,7 @@ import org.w3c.dom.Node;
 import com.caucus.apps.corelib.media.InlineImage;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParentTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParentTest.java
index 369447f..9ca5444 100755
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParentTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldExperianParentTest.java
@@ -10,11 +10,11 @@ import org.easymock.IMocksControl;
 import org.junit.Before;
~
 import org.junit.Test;
~
 
~
+import com.caucus.apps.core.services.relatedids.RelatedId;
~
 import com.caucus.apps.core.services.relatedids.RelatedIds;
~
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.documents.indexfields.model.data.ExperianParent;
~
-import com.caucus.apps.corelib.documents.indexfields.model.data.ExperianParentTest;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.impl.fastesp.FastESPFieldFormatter;
~
@@ -27,7 +27,6 @@ import com.caucus.gossamer.exceptions.MethodFault;
 import com.caucus.test.util.tapestry.FieldUtils;
~
 
~
 
~
~
 public class IndexFieldExperianParentTest
~
 {
~
 	private static final String EXPERIAN_ID = "myExperianId";
~
@@ -42,7 +41,7 @@ public class IndexFieldExperianParentTest
 		ctrl = EasyMock.createControl();
~
 	}
~
 	
~
 	private IndexFieldExperianParent 
-makeExperianParentComponent
+makeFullExperianParentComponent
  (String companyName) {
~
 		IndexFieldExperianParent experianParentComponent = new IndexFieldExperianParent();
~
 		
~
 		ExperianParent experianParent = new ExperianParent(companyName, EXPERIAN_ID);
~
@@ -61,8 +60,8 @@ public class IndexFieldExperianParentTest
 	
~
 	@Test
~
 	public void shouldGetResultsItem_forExperianParent_fromRelatedIdService() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
 		IndexFieldExperianParent component = 
-makeExperianParentComponent("myCompany");
+makeFullExperianParentComponent("myCompany");
~
 		RelatedIds relatedIds = 
-ExperianParentTest.makeRelatedIdsFrom("myGoid");
+makeRelatedIdsFrom("myGoid");
~
 		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
 		
~
 		ctrl.replay();
~
@@ -77,9 +76,9 @@ public class IndexFieldExperianParentTest
 	
~
 	@Test
~
 	public void shouldNotGetResultsItem_forExperianParentWithNoGoid() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
 		IndexFieldExperianParent component = 
-makeExperianParentComponent("myCompany");
+makeFullExperianParentComponent("myCompany");
~
 		FieldUtils.setFieldStrict(component, "fieldFormatter", new DummyFieldFormatter());
~
 		RelatedIds relatedIds = 
-ExperianParentTest.makeRelatedIdsFrom("");
+makeRelatedIdsFrom("");
~
 		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
 		
~
 		ctrl.replay();
~
@@ -92,13 +91,13 @@ public class IndexFieldExperianParentTest
 	
~
 	@Test
~
 	public void shouldTranslateMkupToHtmlHighlightedSpan() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
 		IndexFieldExperianParent component = 
-makeExperianParentComponent("[[mkup]]myCompany[[mkup]]");
+makeFullExperianParentComponent("[[mkup]]myCompany[[mkup]]");
~
 		
~
 		MinimalProductConfig productConfig = new MinimalProductConfig();
~
 		FastESPFieldFormatter formatter = new FastESPFieldFormatter(productConfig);
~
 		FieldUtils.setFieldStrict(component, "fieldFormatter", formatter);
~
 		
~
 		RelatedIds relatedIds = 
-ExperianParentTest.makeRelatedIdsFrom("");
+makeRelatedIdsFrom("");
~
 		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
 		
~
 		ctrl.replay();
~
@@ -107,4 +106,81 @@ public class IndexFieldExperianParentTest
 		
~
 		assertEquals ("<span class=\"hit\">myCompany</span>", component.getCompanyName());
~
 	}
~
 	
~
 	
+public static RelatedIds makeRelatedIdsFrom(String goid) {
~
+		RelatedId relatedId = new RelatedId();
~
+		relatedId.setContent(goid);
~
+		RelatedId[] goids = new RelatedId[] {relatedId};
~
~
+		RelatedIds relatedIds = new RelatedIds();
~
+		relatedIds.setRelatedId(goids);
~
+		return relatedIds;
~
+	}
~
+	
~
+	
~
+	// ===================================================
~
+	
~
+	@Test
~
+	public void shouldGetGoidFromExperianId() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
+		IndexFieldExperianParent experianParentComponent = makeMinimalExperianParentComponent();
~
+		
~
+		RelatedIds relatedIds = makeRelatedIdsFrom("myGoid");
~
+		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
~
+		ctrl.replay();
~
+		assertEquals ("myGoid", experianParentComponent.getGoid(EXPERIAN_ID));
~
+		ctrl.verify();
~
+	}
~
+	
~
+	private IndexFieldExperianParent makeMinimalExperianParentComponent() {
~
+		IndexFieldExperianParent experianParentComponent = new IndexFieldExperianParent();
~
+		mockRelatedIdsResource = ctrl.createMock(RelatedidsGoidIdtypeIdResource.class);
~
+		FieldUtils.setFieldStrict(experianParentComponent, "relatedIdResource", mockRelatedIdsResource);
~
+		return experianParentComponent;
~
+	}
~
+	
~
+	@Test
~
+	public void shouldGetNoGoid_whenRelatedIdServiceHasNoInfo() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
+		IndexFieldExperianParent experianParentComponent = makeMinimalExperianParentComponent();
~
+		
~
+		RelatedIds relatedIds = makeRelatedIdsFrom("");
~
+		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
+		
~
+		ctrl.replay();
~
+		assertEquals ("", experianParentComponent.getGoid(EXPERIAN_ID));
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldGetNoGoid_whenRelatedIdServiceReturnsEmptyArray() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
+		IndexFieldExperianParent experianParentComponent = makeMinimalExperianParentComponent();
~
+		
~
+		RelatedIds relatedIds = new RelatedIds();
~
+		relatedIds.setRelatedId(new RelatedId [0]);
~
+		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(relatedIds);
~
+		
~
+		ctrl.replay();
~
+		assertEquals ("", experianParentComponent.getGoid(EXPERIAN_ID));
~
+		ctrl.verify();
~
+	}
~
+		
~
+	@Test
~
+	public void shouldGetNoGoid_whenRelatedIdServiceReturnsNull() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
+		IndexFieldExperianParent experianParentComponent = makeMinimalExperianParentComponent();
~
+		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andReturn(null);
~
+			
~
+		ctrl.replay();
~
+		assertEquals ("", experianParentComponent.getGoid(EXPERIAN_ID));
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldGetNoGoid_whenRelatedIdServiceThrowsException() throws ClientTimeoutException, MethodFault, EncodingDecodingException, CommunicationsException {
~
+		IndexFieldExperianParent experianParentComponent = makeMinimalExperianParentComponent();
~
+		expect(mockRelatedIdsResource.get("MstarXID", EXPERIAN_ID)).andThrow (new MethodFault(0));
~
+			
~
+		ctrl.replay();
~
+		assertEquals ("", experianParentComponent.getGoid(EXPERIAN_ID));
~
+		ctrl.verify();
~
+	}
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldsTest.java
index effd73d..9921609 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldsTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/citation/view/IndexFieldsTest.java
@@ -23,26 +23,25 @@ import com.caucus.apps.corelib.documents.indexfields.model.impl.ItemValueImpl;
 import com.caucus.apps.corelib.documents.indexfields.model.impl.ItemValuesImpl;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.media.mindexv2.Link;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
-import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.search.impl.ContentItemWrapperFactoryService;
~
 import com.caucus.apps.corelib.tapestry.dom.XhtmlMarkupModel;
~
 import com.caucus.apps.onesearch.util.PageTesterUtils;
~
+import com.caucus.test.util.InstrumentedTestCase;
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
 import com.caucus.test.util.xpath.XPathHelper;
~
-import com.caucus.test.util.InstrumentedTestCase;
~
 
~
 public class IndexFieldsTest  extends InstrumentedTestCase {
~
 
~
 	
~
+//
 	private static final String DOI_XPATH = "/root/global/Obj/ObjectIDs/ObjectID/DOI";
~
 	
+private
  ContentItemWrapperFactoryService contentItemWrapperFactoryService;
~
 	
+private
  MediaIndex mediaIndex;
~
 	
~
 	/**
~
 	 * Tests of the IndexFields component delivers the right HTML for Save As
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeaderTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeaderTest.java
index 746217d..63d940a 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeaderTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocHeaderTest.java
@@ -28,8 +28,8 @@ import org.junit.Test;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocViewTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocViewTest.java
index 99d3deb..bbe75fa 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocViewTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/docview/UnAuthDocViewTest.java
@@ -38,8 +38,8 @@ import com.caucus.apps.corelib.config.MinimalProductConfig;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.resolvers.OutboundLinkResolver;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatFormTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatFormTest.java
index 0912060..914d4b0 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatFormTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/markedlist/DisplayFormatFormTest.java
@@ -11,7 +11,6 @@ import static org.junit.Assert.assertTrue;
 import java.util.ArrayList;
~
 import java.util.List;
~
 
~
-import org.apache.commons.lang.StringUtils;
~
 import org.apache.tapestry5.Block;
~
 import org.apache.tapestry5.Link;
~
 import org.apache.tapestry5.ioc.Messages;
~
@@ -29,9 +28,9 @@ import com.caucus.apps.corelib.markedlist.DisplayItemFormat;
 import com.caucus.apps.corelib.markedlist.MarkedListItem;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
-import com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
@@ -46,12 +45,10 @@ import com.caucus.apps.onesearch.access.Database;
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.PricingListManager;
~
 import com.caucus.apps.onesearch.services.ApplicationIdentifierService;
~
-import com.caucus.apps.onesearch.services.SitesService;
~
 import com.caucus.apps.onesearch.services.PricingService;
~
 import 
-com.caucus.test.util.tapestry.FieldUtils;
+com.caucus.apps.onesearch.services.SitesService;
 
~
 import com.caucus.test.util.InstrumentedTestCase;
~
+import com.caucus.test.util.tapestry.FieldUtils;
 
~
 
~
 public class DisplayFormatFormTest extends InstrumentedTestCase 
~
 {
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogAlertOverlayTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogAlertOverlayTest.java
index 44757e5..9c48f9e 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogAlertOverlayTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogAlertOverlayTest.java
@@ -44,7 +44,7 @@ import com.caucus.apps.core.services.usermigration.AlertDetail;
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
 import com.caucus.apps.corelib.util.DownloadProgress;
~
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.DummyDatabaseListManager;
~
@@ -391,7 +391,7 @@ public class MigrateDialogAlertOverlayTest  extends InstrumentedTestCase {
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "messages", createMessages(count));
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "alertMigrationForm", alertMigrationForm);
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "dialogMigrationService", dialogMigrationService);
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "logger", new DummyLogger());
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "locale", Locale.US);
~
 		FieldUtils.setFieldStrict(migrateDialogAlertOverlay, "dbSelectionBean", new DatabaseSelectionBean());
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogSavedSearchOverlayTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogSavedSearchOverlayTest.java
index da0cf1d..35d3592 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogSavedSearchOverlayTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/migration/dialog/MigrateDialogSavedSearchOverlayTest.java
@@ -46,7 +46,7 @@ import com.caucus.apps.core.services.usermigration.TransformedSearchOverviewQu
 import com.caucus.apps.corelib.search.databaseusage.DatabaseSelectionBean;
~
 import com.caucus.apps.corelib.util.DownloadProgress;
~
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.Database;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
@@ -405,7 +405,7 @@ public class MigrateDialogSavedSearchOverlayTest extends InstrumentedTestCase {
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "messages", createMessages(count));
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "savedSearchMigrationForm", savedSearchMigrationForm);
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "dialogMigrationService", dialogMigrationService);
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "logger", new DummyLogger());
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "locale", Locale.US);
~
 		FieldUtils.setFieldStrict(migrateDialogSavedSearchOverlay, "dbSelectionBean", new DatabaseSelectionBean());
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesListTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesListTest.java
index 280cf7d..b90b685 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesListTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesListTest.java
@@ -23,6 +23,8 @@ import com.caucus.apps.corelib.components.ResultsPagedList;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.myresearch.Areas;
~
 import com.caucus.apps.corelib.myresearch.FigureTableMyResearchItems;
~
 import com.caucus.apps.corelib.myresearch.FigureTableStoredItem;
~
@@ -33,8 +35,8 @@ import com.caucus.apps.corelib.search.FieldFormatter;
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import com.caucus.apps.corelib.util.DateFormatUtil;
~
-import com.caucus.test.util.tapestry.FieldUtils;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
+import com.caucus.test.util.tapestry.FieldUtils;
 
~
 
~
 @SuppressWarnings("unchecked")
~
 public class FigTablesListTest extends InstrumentedTestCase 
~
@@ -346,8 +348,7 @@ public class FigTablesListTest extends InstrumentedTestCase
 	@Test
~
 	public void testGetCaption01() {
~
 		expect(mediaIndexCache.getMediaIndex(item)).andReturn(mIndex);
~
 		
-expect(mIndex.getMediaAttachments(MediaIndex.Role.IXI,
~
-				MediaIndex.SubRole.THUM)).andReturn(mediaAttachments);
+expect(mIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaAttachments);
 
~
 		expect(mediaAttachment.getCategories()).andReturn(categories);
~
 		expect(mediaAttachment.getAbstractText()).andReturn("AbstractText");
~
 		expect(fieldFormatter.formatHitHighlighting("AbstractText", false)).andReturn("Caption");
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFileTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFileTest.java
index c226c53..523090f 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFileTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/FigTablesSaveAsFileTest.java
@@ -40,8 +40,8 @@ import com.caucus.apps.corelib.access.User;
 import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.mindexv2.Comp;
~
 import com.caucus.apps.corelib.media.mindexv2.Rep;
~
@@ -184,7 +184,7 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		expect(figTableResultsList.getNumResults()).andReturn(1);
~
 		expect(figTableResultsList.get(1)).andReturn(resultsItem);
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.PG,MediaIndex.SubRole.NORM,
+expect(mediaIndex.getMediaAttachments(Role.PG, SubRole.NORM,
  false)).andReturn(list);
~
 		expect(mediaAttachment.getComp()).andReturn(comp).times(2);
~
 		expect(mediaAttachment.getMindex()).andReturn(mindex);
~
 		expect(mediaAttachment.getRep()).andReturn(rep);
~
@@ -209,7 +209,7 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		expect(figTableResultsList.getNumResults()).andReturn(2);
~
 		expect(figTableResultsList.get(1)).andReturn(resultsItem);
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.PG,MediaIndex.SubRole.NORM,
+expect(mediaIndex.getMediaAttachments(Role.PG,SubRole.NORM,
  false)).andReturn(list);
~
 		expect(mediaAttachment.getComp()).andReturn(comp).times(2);
~
 		expect(mediaAttachment.getMindex()).andReturn(mindex);
~
 		expect(mediaAttachment.getRep()).andReturn(rep);
~
@@ -252,7 +252,7 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		
~
 		expect(figTableResultsList.getAll()).andReturn(Arrays.asList(new ResultsItem[] {resultsItem}));
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.THUM)).andReturn(list);
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.THUM)).andReturn(list);
 
~
 		expect(mediaAttachment.getCategories()).andReturn(categories);
~
 		expect(mediaAttachment.getAbstractText()).andReturn(caption);
~
 		expect(mediaAttachment.getOrder()).andReturn(1);
~
@@ -286,8 +286,8 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		expect(figTableResultsList.getNumResults()).andReturn(1).times(2);
~
 		expect(figTableResultsList.get(1)).andReturn(resultsItem).times(2);
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex).times(2);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.FULL,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.FULL,
  false)).andReturn(list);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.THUM,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.THUM,
  false)).andReturn(list1);
~
 		expect(mediaAttachment.getBytes()).andReturn(mediaAttachmentByte);
~
 		
~
 		ctrl.replay();
~
@@ -311,8 +311,8 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		expect(figTableResultsList.getNumResults()).andReturn(1).times(2);
~
 		expect(figTableResultsList.get(1)).andReturn(resultsItem).times(2);
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex).times(2);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.FULL,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.FULL,
  false)).andReturn(list);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.THUM,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.THUM,
  false)).andReturn(list1);
~
 		expect(mediaAttachment.getBytes()).andReturn(mediaAttachmentByte);
~
 				
~
 		ctrl.replay();
~
@@ -336,8 +336,8 @@ public class FigTablesSaveAsFileTest extends InstrumentedTestCase
 		expect(figTableResultsList.getNumResults()).andReturn(1).times(2);
~
 		expect(figTableResultsList.get(1)).andReturn(resultsItem).times(2);
~
 		expect(mediaIndexCache.getMediaIndex(resultsItem)).andReturn(mediaIndex).times(2);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.FULL,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.FULL,
  false)).andReturn(list);
~
 		
-expect(mediaIndex.getMediaAttachments(MediaIndex.Role.IXI,MediaIndex.SubRole.THUM,
+expect(mediaIndex.getMediaAttachments(Role.IXI,SubRole.THUM,
  false)).andReturn(list1);
~
 		expect(mediaAttachment.getBytes()).andReturn(mediaAttachmentByte);
~
 				
~
 		ctrl.replay();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/NewFolderTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/NewFolderTest.java
index 62fa97d..3b7a5e8 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/NewFolderTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/NewFolderTest.java
@@ -24,7 +24,7 @@ import com.caucus.apps.corelib.myresearch.MyResearchManagerService;
 import com.caucus.apps.corelib.myresearch.MyResearchServiceException;
~
 import com.caucus.apps.corelib.myresearch.folders.FolderManager;
~
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.onesearch.componentinterfaces.NewFolderAction;
~
 import com.caucus.gossamer.exceptions.MethodFault;
~
 import com.caucus.test.util.DummyMessages;
~
@@ -181,7 +181,7 @@ public class NewFolderTest extends InstrumentedTestCase
 		FieldUtils.setFieldStrict(newFolder, "location", 0L);
~
 		FieldUtils.setFieldStrict(newFolder, "notes", "someNotes");
~
 		FieldUtils.setFieldStrict(newFolder, "newFolderAction", action);
~
 		FieldUtils.injectTapestryService(newFolder, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 
~
 		ctrl.replay();
~
 		assertEquals(onSuccessRetVal, newFolder.createFolder());
~
@@ -283,7 +283,7 @@ public class NewFolderTest extends InstrumentedTestCase
 		FieldUtils.setFieldStrict(newFolder, "notes", "someNotes");
~
 		FieldUtils.setFieldStrict(newFolder, "createFolderForm", createFolderForm);
~
 		FieldUtils.setFieldStrict(newFolder, "logger", new DummyLogger());
~
 		FieldUtils.injectTapestryService(newFolder, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 
~
 		ctrl.replay();
~
 		assertEquals(createFolderForm, newFolder.createFolder());
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/SignInFormTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/SignInFormTest.java
index 58b86b0..43af580 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/SignInFormTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/myresearch/SignInFormTest.java
@@ -33,7 +33,7 @@ import com.caucus.apps.corelib.myresearch.PersonalProfileResult;
 import com.caucus.apps.corelib.myresearch.PersonalProfileService;
~
 import com.caucus.apps.corelib.myresearch.ProfileManager;
~
 import com.caucus.apps.corelib.usage.UsageLogging;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
 import com.caucus.apps.onesearch.access.DatabaseShortcut;
~
@@ -106,7 +106,7 @@ public class SignInFormTest extends InstrumentedTestCase
 
~
 		signInLoginForm = new Form();
~
 		FieldUtils.setFieldStrict(signInForm, "signInLoginForm", signInLoginForm);
~
 		FieldUtils.injectTapestryService(signInForm, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setTapestryProperty(signInForm, "siUsername", username);
~
 		FieldUtils.setTapestryProperty(signInForm, "siPassword", password);
~
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/relateddocs/EbraryRelatedDocsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/relateddocs/EbraryRelatedDocsTest.java
index 5c542fb..1ad14b6 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/relateddocs/EbraryRelatedDocsTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/relateddocs/EbraryRelatedDocsTest.java
@@ -42,7 +42,7 @@ import com.caucus.apps.corelib.search.impl.gis.RelatedDocsConstants;
 import com.caucus.apps.corelib.usage.UsageLoggingDummy;
~
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import com.caucus.apps.corelib.util.EbraryChannel;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.access.Database;
~
 import com.caucus.apps.onesearch.access.DatabaseListManager;
~
@@ -67,7 +67,7 @@ public class EbraryRelatedDocsTest extends InstrumentedTestCase {
 	private ResultsPagedList mockResultsPagedList;
~
 	private SearchEngineSelector mockSearchEngineSelector;
~
 	private DatabaseListManager mockDatabaseListManager;
~
 	private 
-LogTimingsDummyImpl
+DummyLogTimings
  dummyLogTimings;
~
 	private DummyResultsItem dummyItem;
~
 	private EbraryServiceImpl mockEbraryServiceImpl;
~
 	private EbraryChannel mockEbraryChannel;
~
@@ -114,7 +114,7 @@ public class EbraryRelatedDocsTest extends InstrumentedTestCase {
 		
~
 		queryData = new QueryDataStd();
~
 		
~
 		dummyLogTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
~
 		FieldUtils.setFieldStrict(ebraryRelatedDocs, "logTimings", dummyLogTimings);
~
 
~
 		dummyProductConfig = new MinimalProductConfig();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinksTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinksTest.java
index 14ebf1b..b4dd400 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinksTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/search/ResultsNavigationLinksTest.java
@@ -25,6 +25,8 @@ import com.caucus.apps.corelib.documents.indexfields.refworks.impl.NullMessage
 import com.caucus.apps.corelib.media.DummyMediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
@@ -410,7 +412,8 @@ public class ResultsNavigationLinksTest  extends InstrumentedTestCase {
 		nextItem.setField("abstract", "abstract");
~
 		expect(resultsMock.get(itemIndex + 1)).andReturn(nextItem).anyTimes();
~
 		expect(displayFormatServiceMock.isFormatAvailable(displayFormat, mediaIndexMock, "abstract", false)).andReturn(true);
~
 		
-expect(mediaIndexMock.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaAttachments);
+expect(mediaIndexMock.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaAttachments);
 
~
 		
~
 		ctrl.replay();
~
 		FieldUtils.setTapestryProperty(links, "index", itemIndex);
~
 		injectFields();
~
@@ -445,7 +448,7 @@ public class ResultsNavigationLinksTest  extends InstrumentedTestCase {
 		nextItem.setField("abstract", "abstract");
~
 		expect(resultsMock.get(itemIndex + 1)).andReturn(nextItem).anyTimes();
~
 		expect(displayFormatServiceMock.isFormatAvailable(displayFormat, mediaIndexMock, "abstract", false)).andReturn(true);
~
 		
-expect(mediaIndexMock.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaAttachments);
+expect(mediaIndexMock.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaAttachments);
 
~
 		ctrl.replay();
~
 		FieldUtils.setTapestryProperty(links, "index", itemIndex);
~
 		injectFields();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurveyTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurveyTest.java
index 6242a8c..46ab8f0 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurveyTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/thirdparty/ForeSeeSurveyTest.java
@@ -1,20 +1,26 @@
 package com.caucus.apps.onesearch.components.thirdparty;
~
 
~
 import static org.easymock.EasyMock.expect;
~
+import static org.easymock.EasyMock.isA;
~
 import static org.junit.Assert.assertFalse;
~
 import static org.junit.Assert.assertTrue;
~
 
~
+import javax.servlet.http.HttpServletRequest;
~
 import org.apache.tapestry5.ComponentResources;
~
+import org.apache.tapestry5.json.JSONObject;
~
 import org.apache.tapestry5.runtime.Component;
~
+import org.apache.tapestry5.services.RequestGlobals;
~
+import org.apache.tapestry5.services.javascript.JavaScriptSupport;
~
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
-import org.junit.After;
~
 import org.junit.Before;
~
 import org.junit.Test;
~
 
~
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.usage.UsageLoggingDummy;
~
 import com.caucus.test.util.tapestry.FieldUtils;
~
+import com.caucus.test.util.DummyHttpSession;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 
~
 public class ForeSeeSurveyTest extends InstrumentedTestCase 
~
@@ -22,9 +28,11 @@ public class ForeSeeSurveyTest extends InstrumentedTestCase
 	
~
 	private ForeSeeSurvey survey;
~
 	
~
 	
~
 	@Before
~
 	public void setUp() {
~
 		this.survey = new ForeSeeSurvey();
~
 		
~
 	}
~
 	
~
 	/**
~
@@ -106,5 +114,39 @@ public class ForeSeeSurveyTest extends InstrumentedTestCase
 		assertFalse(survey.setup());
~
 		ctrl.verify();
~
 	}
~
 	
~
 	
+@Test
~
+	public void testForeSeeSurveyAfterRender() {
~
~
+		DummyHttpSession dummySession = new DummyHttpSession(null);
~
+		dummySession.setId("12345");
~
~
+		UsageLoggingDummy dummyUsageLog = new UsageLoggingDummy();
~
+		dummyUsageLog.setSessId("123456789");
~
~
+		IMocksControl ctrl = EasyMock.createControl();
~
~
+		JavaScriptSupport javaScriptSupport = ctrl.createMock(JavaScriptSupport.class);
~
+		javaScriptSupport.addInitializerCall(isA(String.class), isA(JSONObject.class));
~
~
+		HttpServletRequest request = ctrl.createMock(HttpServletRequest.class);
~
+		RequestGlobals requestGlobals = ctrl.createMock(RequestGlobals.class);
~
+		Component page = ctrl.createMock(Component.class);
~
+		ComponentResources resources = ctrl.createMock(ComponentResources.class);
~
~
+		FieldUtils.injectTapestryService(survey, "requestGlobals", requestGlobals);
~
+		FieldUtils.injectTapestryService(survey, "usageLog", dummyUsageLog);
~
+		FieldUtils.injectTapestryService(survey, "javaScriptSupport", javaScriptSupport);
~
+		FieldUtils.injectTapestryService(survey, "resources", resources);
~
~
+		expect(request.getRemoteAddr()).andReturn("http://xyz.com");
~
+		expect(request.getSession()).andReturn(dummySession);
~
+		expect(requestGlobals.getHTTPServletRequest()).andReturn(request).times(2);
~
+		expect(resources.getPage()).andReturn((Component) page);
~
~
+		ctrl.replay();
~
+		survey.afterRender();
~
+		ctrl.verify();
~
+	}
~
 
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImplTest.java
index 37522c9..b5b4964 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/components/transactional/FindDeliverableItemFormatImplTest.java
@@ -15,8 +15,8 @@ import com.caucus.apps.core.services.usagelogging.Operation;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.models.ReferenceStyle;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/media/RestrictionServiceImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/media/RestrictionServiceImplTest.java
index d9ce28c..621fd27 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/media/RestrictionServiceImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/media/RestrictionServiceImplTest.java
@@ -23,8 +23,8 @@ import com.caucus.apps.corelib.base.AbstractContentItemBase;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
@@ -442,8 +442,8 @@ public class RestrictionServiceImplTest extends InstrumentedTestCase
 		availableMedia.add(ma);
~
 		
~
 		expect(mediaIndexCache.getMediaIndex(item)).andReturn(mediaIndex);
~
 		expect(mediaIndex.getMedia(roleIXI, subRoleFULL)).andReturn(new 
-ArrayList());
+ArrayList<MediaAttachment>());
 
~
 		expect(mediaIndex.getMedia(roleIXI, subRoleTHUM)).andReturn(new 
-ArrayList());
+ArrayList<MediaAttachment>());
 
~
 		
~
 		ctrl.replay();
~
 		boolean isIllustrataImageAvailable = restrictionService.isIllustrataImageAvailable(item, false);
~
@@ -454,7 +454,7 @@ public class RestrictionServiceImplTest extends InstrumentedTestCase
 	@Test
~
 	public void shouldTestHasMediaRights_includeDuplicatesTrue_hasMediaFalse() throws NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {
~
 		boolean includeDuplicates = true;
~
 		expect(mediaIndex.getMedia(roleIXI, subRoleFULL)).andReturn(new 
-ArrayList());
+ArrayList<MediaAttachment>());
 
~
 		
~
 		ctrl.replay();
~
 		Method hasMediaAndRightsMethod = getHasMediaAndRightsMethod("hasMediaAndRights");
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/BrowseTermsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/BrowseTermsTest.java
index 40399bd..482fa4f 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/BrowseTermsTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/BrowseTermsTest.java
@@ -1,6 +1,8 @@
 package com.caucus.apps.onesearch.pages;
~
 
~
+import static org.easymock.EasyMock.anyObject;
 
~
 import static org.easymock.EasyMock.expect;
~
+import static org.easymock.EasyMock.expectLastCall;
 
~
 import static org.junit.Assert.assertEquals;
~
 import static org.junit.Assert.assertFalse;
~
 import static org.junit.Assert.assertTrue;
~
@@ -10,12 +12,14 @@ import java.lang.reflect.Method;
 import java.util.ArrayList;
~
 import java.util.List;
~
 
~
+import org.apache.tapestry5.services.Request;
 
~
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
 import org.junit.Before;
~
 import org.junit.Ignore;
~
 import org.junit.Test;
~
 
~
+import com.caucus.apps.corelib.components.ResultsPagedList;
 
~
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.models.SortSelectModel.SortTypes;
~
@@ -25,10 +29,13 @@ import com.caucus.apps.corelib.search.ResultsList;
 import com.caucus.apps.corelib.search.SearchEngineException;
~
 import com.caucus.apps.corelib.search.SearchHistory;
~
 import com.caucus.apps.corelib.search.browseIndex.BrowseItem;
~
+import com.caucus.apps.corelib.search.execute.DummySearchExecutionBean;
~
+import com.caucus.apps.corelib.search.execute.DummySearchExecutionBeanFactory;
 
~
 import com.caucus.apps.corelib.search.execute.SearchExecutionBean;
~
 import com.caucus.apps.corelib.search.execute.SearchExecutionBeanFactory;
~
 import com.caucus.apps.corelib.search.execute.SearchExecutionService;
~
 import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
+import com.caucus.apps.corelib.util.DummyLogger;
 
~
 import com.caucus.apps.onesearch.pages.profiles.abi.AbiBrowse;
~
 import com.caucus.apps.onesearch.services.SitesService;
~
 import com.caucus.apps.onesearch.services.UsageLoggingAppHelper;
~
@@ -55,11 +62,12 @@ public class BrowseTermsTest extends InstrumentedTestCase
 	private QueryDataStd queryDataStd;
~
 	private BrowseTerms browseTerms;
~
 	private ProductConfig productConfig;
~
 	private SitesService 
-sitesService;
+mockSitesService;
 
~
 	private BrowseResults browseResults;
~
 	private AbiBrowse abiBrowse;
~
 	private SearchExecutionService 
-executeService;
+mockExecuteService;
 
~
 	private SearchHistory mockHistory;
~
 	
+private Request mockRequest;
 
~
 	private BrowseTermsHelper browseTermHelper;
~
 	
~
 	@Before
~
@@ -68,16 +76,16 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		browseTerms = new BrowseTerms();
~
 		iControl = EasyMock.createControl();
~
 
~
-//		productConfig = iControl.createMock(ProductConfig.class);
~
 		productConfig = new MinimalProductConfig();
~
 		
-sitesService
+mockSitesService
  = iControl.createMock(SitesService.class);
~
 		
-executeService
+mockExecuteService
  = iControl.createMock(SearchExecutionService.class);
~
 		mockHistory = iControl.createMock(SearchHistory.class);
~
 		
+mockRequest = iControl.createMock(Request.class);
 
~
 		browseResults = new BrowseResults();
~
 		browseTermHelper = new BrowseTermsHelperImpl(productConfig);
~
 		
~
 		FieldUtils.setFieldStrict(browseTerms, "productConfig", productConfig);
~
 		FieldUtils.setFieldStrict(browseTerms, "sites", 
-sitesService);
+mockSitesService);
 
~
 		FieldUtils.setFieldStrict(browseTerms, "browseTermHelper", browseTermHelper);
~
 		
~
 		queryDataStd.addSearchTerm(new QueryData.SearchTerm("Title", "IsegorÃ­a"));
~
@@ -130,7 +138,7 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		fillInDummyProductConfig(productConfig);
~
 		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + "pubid", "");
~
 		
~
 		
-expect(sitesService.isPsycbooksSite()).andReturn(true).times(2);
+expect(mockSitesService.isPsycbooksSite()).andReturn(true).times(2);
 
~
 		
~
 		iControl.replay();
~
 		List<SearchTerm> list = browseTerms.getSearchTerms();
~
@@ -157,7 +165,7 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		fillInDummyProductConfig(productConfig);
~
 		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + "pubid", PUBID);
~
 		
~
 		
-expect(sitesService.isPsycbooksSite()).andReturn(true).times(2);
+expect(mockSitesService.isPsycbooksSite()).andReturn(true).times(2);
 
~
 		iControl.replay();
~
 		List<SearchTerm> list = browseTerms.getSearchTerms();
~
 		iControl.verify();
~
@@ -187,7 +195,7 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		fillInDummyProductConfig(productConfig);
~
 		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + BrowseTerm.PUB_ID.getTerm(), PUBID);
~
 		
~
 		
-expect(sitesService.isPsycbooksSite()).andReturn(false).times(2);
+expect(mockSitesService.isPsycbooksSite()).andReturn(false).times(2);
 
~
 		
~
 		iControl.replay();
~
 		List<SearchTerm> list = browseTerms.getSearchTerms();
~
@@ -222,12 +230,12 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		FieldUtils.setFieldStrict(browseTerms, "browseName", BROWSE_NAME);
~
 		FieldUtils.setFieldStrict(browseTerms, "resultsPage", browseResults);
~
 		FieldUtils.setFieldStrict(browseTerms, "abibrowse", abiBrowse);
~
 		FieldUtils.setFieldStrict(abiBrowse, "sites", 
-sitesService);
+mockSitesService);
 
~
 		
~
 		UsageLoggingAppHelper loggingHelper;
~
 		
~
 		
~
 		
-expect(sitesService.getSite()).andReturn("site").times(2);
+expect(mockSitesService.getSite()).andReturn("site").times(2);
 
~
 		
~
 		fillInDummyProductConfig(productConfig);
~
 		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + "pubid", "");
~
@@ -253,7 +261,7 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		};
~
 		
~
 		FieldUtils.setFieldStrict(browseTerms, "executeBeanFactory", factory);
~
 		FieldUtils.setFieldStrict(browseTerms, "executeService", 
-executeService);
+mockExecuteService);
 
~
 		FieldUtils.setFieldStrict(browseTerms, "history", mockHistory);
~
 		
~
 		ResultsList list = iControl.createMock(ResultsList.class);
~
@@ -261,16 +269,16 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		mockHistory.add(list);
~
 		
~
 		try {
~
 			
-expect(executeService.executeSearch(null)).andReturn(list);
+expect(mockExecuteService.executeSearch(null)).andReturn(list);
 
~
 		} catch (SearchEngineException e) {
~
 			fail(e.getMessage());
~
 		}
~
 		
~
 		productConfig.putString(BrowseTerms.NPC_BROWSE_CONFIG_KEY  + "." + BROWSE_NAME + "." + "title", "");
~
 		
~
 		
-expect(sitesService.isPsycbooksSite()).andReturn(false);
~
-		expect(sitesService.isEntrepreneurshipSite()).andReturn(false);
~
-		expect(sitesService.getPreferredSortType()).andReturn(SortTypes.DateAsc);
+expect(mockSitesService.isPsycbooksSite()).andReturn(false);
~
+		expect(mockSitesService.isEntrepreneurshipSite()).andReturn(false);
~
+		expect(mockSitesService.getPreferredSortType()).andReturn(SortTypes.DateAsc);
 
~
 		
~
 		productConfig.getString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + BROWSE_SUBJECT + ".dateBrowse", "false");
~
 		productConfig.getString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + BROWSE_LOCATION + ".dateBrowse", "false");
~
@@ -284,7 +292,7 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		fillInDummyProductConfig(productConfig);
~
 		BrowseItem browseItem = new BrowseItem("searchTerm", 5);
~
 		FieldUtils.setFieldStrict(browseTerms, "browseItem", browseItem);
~
 		
-expect(sitesService.isPsycbooksSite()).andReturn(false).times(2);
+expect(mockSitesService.isPsycbooksSite()).andReturn(false).times(2);
 
~
 		iControl.replay();
~
 		List<SearchTerm> searchTerms = browseTerms.getSearchTerms();
~
 		iControl.verify();
~
@@ -334,4 +342,59 @@ public class BrowseTermsTest extends InstrumentedTestCase
 		QueryData queryData = commonAddSearchTermToQueryData();
~
 		assertEquals(0, queryData.getSearchTerms().size());
~
 	}
~
 	
~
 	
+private void commonCodeForSortOrderTesting(SortTypes sortOrder, boolean fromProductConfig) throws Exception {
~
+		abiBrowse = new AbiBrowse();
~
+		FieldUtils.setFieldStrict(browseTerms, "browseName", BROWSE_NAME);
~
+		FieldUtils.setFieldStrict(browseTerms, "resultsPage", browseResults);
~
+		FieldUtils.setFieldStrict(browseTerms, "abibrowse", abiBrowse);
~
+		FieldUtils.setFieldStrict(abiBrowse, "sites", mockSitesService);
~
+		FieldUtils.setFieldStrict(browseTerms, "executeBeanFactory", new DummySearchExecutionBeanFactory());
~
+		FieldUtils.setFieldStrict(browseTerms, "executeService", mockExecuteService);
~
+		FieldUtils.setFieldStrict(browseTerms, "history", mockHistory);
~
+		FieldUtils.setFieldStrict(browseResults, "logger", new DummyLogger());
~
+		FieldUtils.setFieldStrict(browseResults, "request", mockRequest);
~
+		FieldUtils.setFieldStrict(browseResults, "history", mockHistory);
~
+		FieldUtils.setFieldStrict(browseResults, "resultsPagedList", new ResultsPagedList());
~
+
~
+		fillInDummyProductConfig(productConfig);
~
+		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + "." + BROWSE_SUBJECT + ".navigator", NAVIGATOR_Value);
~
+		productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + ".title", "title");
~
+		if (fromProductConfig) {
~
+			productConfig.putString(NPC_BROWSE_CONFIG_KEY + "." + BROWSE_NAME + ".defaultDateSort", "DateDesc");
~
+		}
~
+		expect(mockSitesService.getSite()).andReturn("site").times(2);
~
+		expect(mockSitesService.isPsycbooksSite()).andReturn(false);
~
+		if (fromProductConfig) {
~
+			expect(mockSitesService.getPreferredSortType()).andReturn(sortOrder);
~
+		} else {
~
+			expect(mockSitesService.getPreferredSortType()).andReturn(SortTypes.titleAsc);
~
+		}
~
+		expect(mockSitesService.isEntrepreneurshipSite()).andReturn(false);
~
+		ResultsList mockResultsList = iControl.createMock(ResultsList.class);
~
+		expect(mockExecuteService.executeSearch(anyObject(DummySearchExecutionBean.class))).andReturn(mockResultsList);
~
+		mockHistory.add(mockResultsList);
~
+		expect(mockResultsList.getResultsID()).andReturn("");
~
+		expect(mockRequest.getAttribute(anyObject(String.class))).andReturn(Boolean.TRUE);
~
+		expect(mockHistory.get("")).andReturn(mockResultsList);
~
+		expectLastCall();
~
+
~
+		iControl.replay();
~
+		browseTerms.fetchResults("termName");
~
+		iControl.verify();
~
+	}
~
+
~
+	@Test
~
+	public void shouldTestFetchResults_ReturnsSortOrderFromPreference_WhenProductConfigDoesNotHaveDefaultDateSortSet() throws Exception {
~
+		SortTypes expectedSortOrder = SortTypes.titleAsc;
~
+		commonCodeForSortOrderTesting(expectedSortOrder, false);
~
+		assertEquals(expectedSortOrder, browseResults.getSortType());
~
+	}
~
+
~
+	@Test
~
+	public void shouldTestFetchResults_ReturnsSortOrderFromProductConfig_WhenProductConfigDoesHaveDefaultDateSortSet() throws Exception {
~
+		SortTypes expectedSortOrder = SortTypes.DateDesc;
~
+		commonCodeForSortOrderTesting(expectedSortOrder, true);
~
+		assertEquals(expectedSortOrder, browseResults.getSortType());
~
+	}
 
~
 }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/DocViewTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/DocViewTest.java
index d2b474a..74d2e038 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/DocViewTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/DocViewTest.java
@@ -33,8 +33,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.PublicationSearchHistory;
~
@@ -277,7 +277,7 @@ public class DocViewTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, true)).andReturn(true);
~
 		expect(item.getResultsList()).andReturn(resultsList).times(4);
~
 		expect(resultsList.getResultsID()).andReturn("resultId").times(2);
~
 		
-expect(mIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaList);
+expect(mIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaList);
 
~
 		expect(mAttachment.getInlineNum()).andReturn("inLineNo");
~
 		expect(item.getUniqueID()).andReturn(uniqueItemID);
~
 		expect(componentClassResolver.resolvePageClassNameToPageName(docView.getClass().getName())).andReturn("docView");
~
@@ -547,7 +547,7 @@ public class DocViewTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, true)).andReturn(true);
~
 		expect(resultsList.getResultsID()).andReturn(resultsId);
~
 		expect(mediaIndexCache.getMediaIndex(item)).andReturn(mIndex);
~
 		
-expect(mIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaList);
+expect(mIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaList);
 
~
 		expect(mAttachment.getInlineNum()).andReturn("inLineNo");
~
 		expect(componentClassResolver.resolvePageClassNameToPageName(docView.getClass().getName())).andReturn("docView");
~
 		expect(sites.getTargetPage("docView")).andReturn("docView");
~
@@ -591,7 +591,7 @@ public class DocViewTest extends InstrumentedTestCase
 		expect(restrictionService.isIllustrataImageAvailable(item, true)).andReturn(true);
~
 		expect(resultsList.getResultsID()).andReturn(resultsId);
~
 		expect(mediaIndexCache.getMediaIndex(item)).andReturn(mIndex);
~
 		
-expect(mIndex.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM)).andReturn(mediaList);
+expect(mIndex.getMediaAttachments(Role.IXI, SubRole.THUM)).andReturn(mediaList);
 
~
 		expect(mAttachment.getInlineNum()).andReturn("inLineNo");
~
 		expect(componentClassResolver.resolvePageClassNameToPageName(docView.getClass().getName())).andReturn("docView");
~
 		expect(sites.getTargetPage("docView")).andReturn("docView");
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/FlashViewerTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/FlashViewerTest.java
index 805334e..b7bcb4f 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/FlashViewerTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/FlashViewerTest.java
@@ -37,8 +37,8 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Comp;
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.media.mindexv2.Mindex;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/IllustrataImageTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/IllustrataImageTest.java
new file mode 100644
index 0000000..498303e
--- /dev/null
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/IllustrataImageTest.java
@@ -0,0 +1,170 @@
+package com.caucus.apps.onesearch.pages;
~
~
+import static org.easymock.EasyMock.expect;
~
+import static org.junit.Assert.assertEquals;
~
+import static org.junit.Assert.assertTrue;
~
+import static org.junit.Assert.assertFalse;
~
~
+import java.util.ArrayList;
~
+import java.util.Arrays;
~
+import java.util.List;
~
~
+import org.easymock.EasyMock;
~
+import org.easymock.IMocksControl;
~
+import org.junit.Before;
~
+import org.junit.Test;
~
~
+import com.caucus.apps.corelib.media.MediaAttachment;
~
+import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
+import com.caucus.apps.corelib.search.ResultsItem;
~
+import com.caucus.test.util.DummyMessages;
~
+import com.caucus.test.util.tapestry.FieldUtils;
~
~
~
+public class IllustrataImageTest {
~
~
+	private IllustrataImage illustrataImage;
~
+	private IMocksControl ctrl;
~
+	private ResultsItem mockResultsItem;
~
+	private MediaAttachment mockMediaAttachment;
~
+	private List<String> categories;
~
+	private List<String> categoriesWithoutTable;
~
+	private DummyMessages dummyMessages;
~
~
+	@Before
~
+	public void setUp() {
~
+		ctrl = EasyMock.createControl();
~
+		illustrataImage = new IllustrataImage();
~
+		mockResultsItem = ctrl.createMock(ResultsItem.class);
~
+		mockMediaAttachment = ctrl.createMock(MediaAttachment.class);
~
~
+		List<MediaAttachment> tables = new ArrayList<MediaAttachment>(Arrays.asList(mockMediaAttachment));
~
+		FieldUtils.setFieldStrict(illustrataImage, "thumbnailsList", tables);
~
~
+		illustrataImage.setItem(mockResultsItem);
~
+		
~
+		dummyMessages = new DummyMessages();
~
+		FieldUtils.setFieldStrict (illustrataImage, "messages", dummyMessages);
~
+	}
~
~
+	@Test
~
+	public void shouldReturnBlank() {
~
+		// In case of any error, the method should return a blank string and NOT throw an exception.
~
+		ctrl.replay();
~
+		assertEquals("", illustrataImage.getSpreadsheetLink());
~
+		ctrl.verify();
~
+	}
~
~
+	@Test
~
+	public void shouldTestisTable_returnsTrue_WhenImageFormatIsTable() {
~
+		categories = Arrays.asList("Table", "Something");
~
+		expect(mockMediaAttachment.getCategories()).andReturn(categories);
~
+		
~
+		ctrl.replay();
~
+		assertTrue(illustrataImage.isTable());
~
+		ctrl.verify();
~
+	}
~
~
+	@Test
~
+	public void shouldTestisTable_returnsFalse_WhenImageFormatIsNotTable() {
~
+		categoriesWithoutTable = Arrays.asList("Figure", "Something");
~
+		expect(mockMediaAttachment.getCategories()).andReturn(categoriesWithoutTable);
~
+		
~
+		ctrl.replay();
~
+		assertFalse(illustrataImage.isTable());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotBeFromResults_withNoSource() {
~
+		ctrl.replay();
~
+		assertFalse (illustrataImage.isFromResults());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotBeFromResults_withSourceButNoBackLink() {
~
+		FieldUtils.setFieldStrict(illustrataImage, "source", "results");
~
+		ctrl.replay();
~
+		assertFalse (illustrataImage.isFromResults());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldBeFromResults_withSourceAndBackLink() {
~
+		FieldUtils.setFieldStrict(illustrataImage, "source",       "results");
~
+		FieldUtils.setFieldStrict(illustrataImage, "backLinkPage", "myBackLink");
~
+		ctrl.replay();
~
+		assertTrue (illustrataImage.isFromResults());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotBeFromMyResearch_withNoBackLink() {
~
+		FieldUtils.setFieldStrict(illustrataImage, "backLinkPage", "");
~
+		dummyMessages.put("illustrata.backtoresults", "backTo");
~
+		ctrl.replay();
~
+		assertEquals ("backTo", illustrataImage.getBackLinkText());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldBeFromMyResearch_withBackLinkOfMyResearch() {
~
+		FieldUtils.setFieldStrict(illustrataImage, "backLinkPage", IllustrataImage.MR_DOCUMENTS_PAGE_URL_PATH);
~
+		dummyMessages.put("illustrata.myResearch", "myResearch");
~
+		ctrl.replay();
~
+		assertEquals ("myResearch", illustrataImage.getBackLinkText());
~
+		ctrl.verify();
~
+	}
~
+	
~
+	@Test
~
+	public void shouldGetSelectedThumbNail() {
~
+		injectThumbNails("caption0", "caption1");
~
+		
~
+		FieldUtils.setFieldStrict(illustrataImage, "imageNumber", 1);
~
+		assertEquals (1, illustrataImage.getImageNum());
~
+		
~
+		assertEquals ("caption1", illustrataImage.getMediaAttachment().getCaption());
~
+	}
~
+	
~
+	private void injectThumbNails (String ... captions) {
~
+		List<MediaAttachment> thumbnailsList = new ArrayList<MediaAttachment>();
~
+		int inlineNum = 0;
~
+		for (String caption: captions) {
~
+			MediaAttachment ma = new MediaAttachment();
~
+			ma.setCaption(caption);
~
+			ma.setAbstractText(caption + "-abstract");
~
+			ma.setInlineNum("" + inlineNum);
~
+			++inlineNum;
~
+			thumbnailsList.add(ma);
~
+		}
~
+		
~
+		FieldUtils.setFieldStrict(illustrataImage, "thumbnailsList", thumbnailsList);
~
+	}
~
+	
~
+	@Test
~
+	public void shouldSetThePage_basedOnImageInLineNum() {
~
+		injectThumbNails("caption0", "caption1", "caption2");
~
+		FieldUtils.setFieldStrict (illustrataImage, "inlineNum", "1");
~
+		
~
+		illustrataImage.setThePage();
~
+		assertEquals (1, illustrataImage.getImageNum());
~
+	}
~
+	
~
+	@Test
~
+	public void shouldLeavePageUnset_whenNoThumbnails() {
~
+		injectThumbNails();
~
+		illustrataImage.setThePage();
~
+		assertEquals (0, illustrataImage.getImageNum());
~
+	}
~
+	
~
+	@Test //TODO it might be nice to have a dummy formatter that actually *does* something.  Worth it?
~
+	public void shouldGetCaption_fromHitHighlightedAbstractText() {
~
+		injectThumbNails("caption0");
~
+		DummyFieldFormatter formatter = new DummyFieldFormatter();
~
+		FieldUtils.setFieldStrict (illustrataImage, "fieldFormatter", formatter);
~
+		
~
+		assertEquals ("caption0-abstract", illustrataImage.getCaption());
~
+	}
~
+	
~
+}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PageMapTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PageMapTest.java
index 5b204c9..b399aa2 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PageMapTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PageMapTest.java
@@ -26,8 +26,8 @@ import com.caucus.apps.core.services.media.pqimage.Mindex;
 import com.caucus.apps.core.services.media.pqimage.Rep;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
@@ -86,7 +86,7 @@ public class PageMapTest extends InstrumentedTestCase
 
~
 	private <T> T createMockAndSetField(Class<T> clazz, String fieldName) {
~
 		T result = ctrl.createMock(clazz);
~
 		
-FieldUtils.setField(pageMap,
+FieldUtils.setFieldStrict(pageMap,
  fieldName, result);
~
 		return result;
~
 	}
~
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PagePdfTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PagePdfTest.java
index 1ae0176..ee76b78 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PagePdfTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/PagePdfTest.java
@@ -29,7 +29,7 @@ import com.caucus.apps.corelib.components.PagedList;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.mindexv2.Link;
~
 import com.caucus.apps.corelib.media.mindexv2.RelatedId;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalizedTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalizedTest.java
index 9831d9d..531bb47 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalizedTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/callback/email/StdHTMLEmailNormalizedTest.java
@@ -32,8 +32,8 @@ import com.caucus.apps.core.services.email.types.EmailFormatType;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/maintain/FederatedSearchTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/maintain/FederatedSearchTest.java
index 4e090c6..e7c3d7a 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/maintain/FederatedSearchTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/maintain/FederatedSearchTest.java
@@ -40,7 +40,7 @@ import com.caucus.apps.corelib.search.impl.gis.GISSearch;
 import com.caucus.apps.corelib.search.impl.gis.GISSearchImpl.GISSearchTimeoutException;
~
 import com.caucus.apps.corelib.util.EbraryChannel;
~
 import com.caucus.apps.corelib.util.LogTimings;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
~
 import com.caucus.apps.gossamer.auth.AuthLogintokenResource;
~
 import com.caucus.gossamer.exceptions.ClientTimeoutException;
~
 import com.caucus.gossamer.exceptions.CommunicationsException;
~
@@ -59,7 +59,7 @@ public class FederatedSearchTest extends InstrumentedTestCase
 	private ProductConfig mockProductConfig;
~
 	private IMocksControl control;
~
 	private EncryptionService encryptionUtilsService;
~
 	private 
-LogTimingsDummyImpl
+DummyLogTimings
  dummyLogTimings;
~
 
~
 	@Before
~
 	public void setUp() {
~
@@ -69,7 +69,7 @@ public class FederatedSearchTest extends InstrumentedTestCase
 		encryptionUtilsService = new EncryptionServiceImpl();
~
 		control = EasyMock.createControl();
~
 		mockProductConfig = control.createMock(ProductConfig.class);
~
 		dummyLogTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
~
 		FieldUtils.setFieldStrict(page, "productConfig", mockProductConfig);
~
 		FieldUtils.setFieldStrict(page, "encryptionUtilsService", encryptionUtilsService);
~
 		expect(mockProductConfig.getString(RelatedDocsConstants.CFGKEY_XMLAPISERVER)).andReturn("thisHost").anyTimes();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/DocumentsTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/DocumentsTest.java
index ce2b70b..968e27e 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/DocumentsTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/DocumentsTest.java
@@ -41,7 +41,7 @@ import com.caucus.apps.corelib.search.ResultsItem;
 import com.caucus.apps.corelib.search.ResultsList;
~
 import com.caucus.apps.corelib.search.SearchEngineException;
~
 import com.caucus.apps.corelib.search.UniqueItemID;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.components.myresearch.DocumentList;
~
 import com.caucus.apps.onesearch.components.myresearch.TabNavigation;
~
@@ -95,7 +95,7 @@ public class DocumentsTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(documents, "linkSource", linkSource);
~
 		FieldUtils.injectTapestryService(documents, "messages", messages);
~
 		FieldUtils.setField(documents, "documentList", documentList);
~
 		FieldUtils.injectTapestryService(documents, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.injectTapestryService(documents, "request", request);
~
 		FieldUtils.setField(documents, "tabNavigation", tabNavigation);
~
 	}
~
@@ -142,7 +142,7 @@ public class DocumentsTest extends InstrumentedTestCase
 		myResearchManager.setCurrentArea(Areas.All);
~
 		folderManager.setCurrentFolderId(0);
~
 		expectLastCall();
~
 		FieldUtils.injectTapestryService(documents, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		
~
 		tabNavigation.initialize();
~
 		expectLastCall();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/SavedSearchesTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/SavedSearchesTest.java
index 9a58abf..fa90fb4 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/SavedSearchesTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/myResearch/SavedSearchesTest.java
@@ -33,7 +33,7 @@ import com.caucus.apps.corelib.myresearch.search.SavedSearch;
 import com.caucus.apps.corelib.myresearch.search.SavedSearchList;
~
 import com.caucus.apps.corelib.myresearch.search.SavedSearchManagerService;
~
 import com.caucus.apps.corelib.search.QueryData;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.PreferenceData;
~
 import com.caucus.apps.onesearch.components.myresearch.TabNavigation;
~
 import com.caucus.apps.onesearch.pages.ErrorPage;
~
@@ -200,7 +200,7 @@ public class SavedSearchesTest extends InstrumentedTestCase
 		FieldUtils.injectTapestryService(savedSearches, "locale", DEFAULT_LOCALE);
~
 		FieldUtils.setField(savedSearches, "defaultTimeout", defaultTimeout);
~
 		FieldUtils.setField(savedSearches, "savedSearchesList", savedSearchesList);
~
 		FieldUtils.injectTapestryService(savedSearches, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setField(savedSearches, "tabNavigation", tabNavigation);
~
 
~
 		savedSearches.setup();
~
@@ -263,7 +263,7 @@ public class SavedSearchesTest extends InstrumentedTestCase
 		FieldUtils.setField(savedSearches, "savedSearchManager", savedSearchManager);
~
 		FieldUtils.setField(savedSearches, "savedSearchesList", savedSearchesList);
~
 		FieldUtils.injectTapestryService(savedSearches, "locale", locale);
~
 		FieldUtils.injectTapestryService(savedSearches, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setField(savedSearches, "tabNavigation", tabNavigation);
~
 
~
 		savedSearches.setup();
~
@@ -324,7 +324,7 @@ public class SavedSearchesTest extends InstrumentedTestCase
 		FieldUtils.setField(savedSearches, "savedSearchesList", savedSearchesList);
~
 		FieldUtils.setField(savedSearches, "savedSearchManager", savedSearchManager);
~
 		FieldUtils.injectTapestryService(savedSearches, "locale", DEFAULT_LOCALE);
~
 		FieldUtils.injectTapestryService(savedSearches, "logTimings", new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		FieldUtils.setField(savedSearches, "tabNavigation", tabNavigation);
~
 
~
 		savedSearches.setup();
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandlerTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandlerTest.java
index 5820b44..c91fd1d 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandlerTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/openurl/OpenUrlHandlerTest.java
@@ -21,8 +21,8 @@ import com.caucus.apps.core.services.auth.Account;
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.mindexv2.RelatedId;
~
 import com.caucus.apps.corelib.models.DateRangeType;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImageTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImageTest.java
deleted file mode 100644
index 1320985..0000000
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/pages/profiles/eiuarchive/EiuarchiveIllustrataImageTest.java
+++ /dev/null
@@ -1,70 +0,0 @@
-package com.caucus.apps.onesearch.pages.profiles.eiuarchive;
~
~
-import static org.easymock.EasyMock.expect;
~
-import static org.junit.Assert.assertEquals;
~
-import static org.junit.Assert.assertTrue;
~
-import static org.junit.Assert.assertFalse;
~
~
-import java.util.ArrayList;
~
-import java.util.Arrays;
~
-import java.util.List;
~
~
-import org.easymock.EasyMock;
~
-import org.easymock.IMocksControl;
~
-import org.junit.Before;
~
-import org.junit.Test;
~
~
-import com.caucus.apps.corelib.media.MediaAttachment;
~
-import com.caucus.apps.corelib.search.ResultsItem;
~
-import com.caucus.test.util.InstrumentedTestCase;
~
-import com.caucus.test.util.tapestry.FieldUtils;
~
~
~
-public class EiuarchiveIllustrataImageTest extends InstrumentedTestCase
~
-{
~
~
-	private EiuarchiveIllustrataImage pageImage;
~
-	private IMocksControl ctrl;
~
-	private ResultsItem ri;
~
-	private MediaAttachment mockMediaAttachment;
~
-	private List<String> categories;
~
-	private List<String> categoriesWithoutTable;
~
~
-	@SuppressWarnings("unchecked")
~
-	@Before
~
-	public void setUp() {
~
-		ctrl = EasyMock.createControl();
~
-		pageImage = new EiuarchiveIllustrataImage();
~
-		ri = ctrl.createMock(ResultsItem.class);
~
-		mockMediaAttachment = ctrl.createMock(MediaAttachment.class);
~
~
-		List<MediaAttachment> tables = new ArrayList<MediaAttachment>(Arrays.asList(mockMediaAttachment));
~
-		FieldUtils.setFieldStrict(pageImage, "thumbnailsList", tables);
~
~
-		pageImage.setItem(ri);
~
-	}
~
~
-	@Test
~
-	public void shouldReturnBlank() {
~
-		// In case of any error, the method should return a blank string and NOT throw an exception.
~
-		assertEquals("", pageImage.getSpreadsheetLink());
~
-	}
~
~
-	@Test
~
-	public void shouldTestisTable_returnsTrue_WhenImageFormatIsTable() {
~
-		categories = Arrays.asList("Table", "Something");
~
-		expect(mockMediaAttachment.getCategories()).andReturn(categories);
~
-		ctrl.replay();
~
-		assertTrue(pageImage.isTable());
~
-		ctrl.verify();
~
-	}
~
~
-	@Test
~
-	public void shouldTestisTable_returnsFalse_WhenImageFormatIsNotTable() {
~
-		categoriesWithoutTable = Arrays.asList("Figure", "Something");
~
-		expect(mockMediaAttachment.getCategories()).andReturn(categoriesWithoutTable);
~
-		ctrl.replay();
~
-		assertFalse(pageImage.isTable());
~
-		ctrl.verify();
~
-	}
~
-}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/search/BatchFileMStarToFQLTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/search/BatchFileMStarToFQLTest.java
index a46ea6d..ffa4f93 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/search/BatchFileMStarToFQLTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/search/BatchFileMStarToFQLTest.java
@@ -70,7 +70,7 @@ import com.caucus.apps.corelib.search.translation.SearchTermTranslatorService;
 import com.caucus.apps.corelib.search.translation.SearchTermTranslatorServiceImpl;
~
 import com.caucus.apps.corelib.util.ISOLanguageService;
~
 import com.caucus.apps.corelib.util.ISOLanguageServiceImpl;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.corelib.util.SessionIdService;
~
 import com.caucus.apps.corelib.util.SessionIdServiceImpl;
~
 import com.caucus.test.util.DummyRandomizer;
~
@@ -137,7 +137,7 @@ public class BatchFileMStarToFQLTest  extends InstrumentedTestCase {
 
~
 		QueryComplexityAnalyzerImpl complexityAnalyzer = new QueryComplexityAnalyzerImpl(productConfig);
~
 
~
 		
-LogTimingsDummyImpl
+DummyLogTimings
  logTimings = new 
-LogTimingsDummyImpl();
+DummyLogTimings();
 
~
 
~
 		SessionIdService sessionIdSvc = new SessionIdServiceImpl(new RequestGlobalsImpl(), "cookiename");
~
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/search/MStarToFQLTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/search/MStarToFQLTest.java
index f26e33b..96bf761 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/search/MStarToFQLTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/search/MStarToFQLTest.java
@@ -88,9 +88,9 @@ import com.caucus.apps.corelib.thesaurus.ThesaurusExplodeMapperImpl;
 import com.caucus.apps.onesearch.services.search.QueryParser.HistoryFlags;
~
 import com.caucus.apps.onesearch.services.search.QueryParserImpl;
~
 import com.caucus.apps.onesearch.services.search.S1Pattern;
~
+import com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies.DatabaseSpecificStrategyFactory;
 
~
 import com.caucus.apps.onesearch.services.search.preprocessing.PreprocessorDispatcher;
~
 import com.caucus.apps.onesearch.services.search.preprocessing.SearchExpressionPreprocessor;
~
-import com.caucus.apps.onesearch.services.search.strategy.DatabaseSpecificStrategyFactory;
~
 import com.caucus.apps.onesearch.util.CommandLineSearchSyntax;
~
 import com.caucus.apps.onesearch.util.CommandLineSearchSyntaxImpl;
~
 import com.caucus.test.util.InstrumentedTestCase;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImplTest.java
index a9bcaa8..f13fe7c 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/ContentItemLinksServiceImplTest.java
@@ -44,13 +44,12 @@ import com.caucus.apps.corelib.media.DummyMediaIndexCacheService;
 import com.caucus.apps.corelib.media.Media;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
-import com.caucus.apps.corelib.media.MediaIndex.Role;
~
-import com.caucus.apps.corelib.media.MediaIndex.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheServiceImpl;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Link;
~
-import com.caucus.apps.corelib.media.mindexv2.Links;
~
 import com.caucus.apps.corelib.media.mindexv2.Param;
~
 import com.caucus.apps.corelib.media.mindexv2.RelatedId;
~
 import com.caucus.apps.corelib.media.mindexv2.TemplateLink;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/DummyMagazineService.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/DummyMagazineService.java
new file mode 100755
index 0000000..949cf29
--- /dev/null
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/DummyMagazineService.java
@@ -0,0 +1,28 @@
+package com.caucus.apps.onesearch.services;
~
~
+import org.junit.Ignore;
~
~
+import com.caucus.apps.corelib.search.ResultsItem;
~
~
~
+@Ignore
~
+public class DummyMagazineService implements MagazineService
~
+{
~
+	@Override public boolean isMagazine() {return false;}
~
+	@Override public boolean isMagazine(ResultsItem item) {return false;}
~
+	@Override public String getThumbnailPath(ResultsItem item) {return null;}
~
+	@Override public Object[] getLinkMagazineContext(ResultsItem item) {return null;}
~
+	@Override public boolean isVogue(ResultsItem item) {return false;}
~
+	@Override public boolean isWwd(ResultsItem item) {return false;}
~
+	@Override public boolean isEima(ResultsItem item) {	return false;}
~
+	@Override public String[] getMagazineBundleCodes() {return null;}
~
+	@Override public boolean isCropDisabledInFlashViewer(ResultsItem item) {return false;}
~
+	@Override public boolean isThumbnailEnabledInPreview(ResultsItem item) {return false;}
~
+	@Override public boolean isLatestIssueEnabled() {return false;}
~
+	@Override public boolean isFeaturedContentEnabled() {return false;}
~
+	@Override public boolean isFullSizeImageLinkDisabledInPinkynailPreview(ResultsItem item) {return false;}
~
+	@Override public boolean isFullSizeImageLinkDisabledInDisplayFigTableResultsItem(ResultsItem item) {return false;}		
~
+	@Override public boolean isFullSizeImageLinkDisabledInIllustrataThumbnails(ResultsItem item) {return false;}
~
+	@Override public boolean isLateralTypeSearchFromHoveroverEnabled(ResultsItem item) {return false;}
~
+	@Override public boolean isBrowseLinkEnabled(ResultsItem item) {return false;}
~
+}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/EMSURLGeneratorImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/EMSURLGeneratorImplTest.java
index 2772b0e..43cb829 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/EMSURLGeneratorImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/EMSURLGeneratorImplTest.java
@@ -27,8 +27,8 @@ import com.caucus.apps.core.services.usagelogging.TransactionType;
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
 import com.caucus.apps.corelib.search.QueryData;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/MagazineServiceImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/MagazineServiceImplTest.java
index 4beb313..7a5c370 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/MagazineServiceImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/MagazineServiceImplTest.java
@@ -23,8 +23,8 @@ import com.caucus.apps.corelib.base.AbstractContentItemBase;
 import com.caucus.apps.corelib.config.MinimalProductConfig;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.QueryData;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/ProductBehaviourServiceImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/ProductBehaviourServiceImplTest.java
index aa2d464..768fce4 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/ProductBehaviourServiceImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/ProductBehaviourServiceImplTest.java
@@ -20,8 +20,8 @@ import org.junit.runners.Parameterized.Parameters;
 import com.caucus.apps.corelib.base.AbstractContentItemBase;
~
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.search.ResultsItem;
~
 import com.caucus.apps.onesearch.services.media.RestrictionService;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLogSvcImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLogSvcImplTest.java
index 2923de1..acf8baa 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLogSvcImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLogSvcImplTest.java
@@ -12,8 +12,8 @@ import org.junit.Test;
 import com.caucus.apps.corelib.config.ProductConfig;
~
 import com.caucus.apps.corelib.markedlist.DisplayItemFormat;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.models.DisplayFormat;
~
 import com.caucus.apps.corelib.search.FieldFormatter;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImplTest.java
index 8e98d80..eba3daa 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/UsageLoggingAppHelperImplTest.java
@@ -43,8 +43,8 @@ import com.caucus.apps.corelib.markedlist.MarkedListService;
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.MediaIndex.VideoMimeType;
~
 import com.caucus.apps.corelib.media.MediaIndexCacheService;
~
 import com.caucus.apps.corelib.media.RightsMap;
~
@@ -199,7 +199,7 @@ public class UsageLoggingAppHelperImplTest  extends QueryDataTests {
 		
~
 		dummyUsageLog = new UsageLoggingImpl(null, null, null, null, null, null, null, "30000", dummyProductConfig, null);
~
 
~
 		dummyResultsItem = new DummyResultsItem(ITEM_ID, 
-true);
+false);
 
~
 		dummyResultsItem.setField("pubid", PARENT_ID);
~
 		dummyResultsItem.setField("bdl", "db1");
~
 		
~
@@ -225,7 +225,7 @@ public class UsageLoggingAppHelperImplTest  extends QueryDataTests {
 		dummyResultsList = new DummyResultsList(queryData1);
~
 		dummyResultsList.setResultsID(RESULTS_ID + "1");
~
 
~
 		dummyResultsItem = new DummyResultsItem(ITEM_ID + 
-"1",true);
+"1",false);
 
~
 		dummyResultsItem.setField("pubid", PARENT_ID);
~
 		dummyResultsItem.setField("bdl", "2");
~
 		dummyResultsItem.setField(AbstractContentItemBase.FIELD_SOURCETYPE, SOURCE_TYPE);
~
@@ -239,7 +239,7 @@ public class UsageLoggingAppHelperImplTest  extends QueryDataTests {
 		queryData2.setQueryType("2");
~
 		dummyResultsList2 = new DummyResultsList(queryData2);
~
 		dummyResultsList2.setResultsID(RESULTS_ID + "2");
~
 		dummyResultsItem2 = new DummyResultsItem(ITEM_ID + 
-"2",true);
+"2",false);
 
~
 		dummyResultsItem2.setField("pubid", PARENT_ID);
~
 		dummyResultsItem2.setResultList(dummyResultsList2);
~
 
~
@@ -672,7 +672,7 @@ public class UsageLoggingAppHelperImplTest  extends QueryDataTests {
 		Reference reference = new Reference();
~
 		reference.setClientApp(RefWorksReferenceBuilder.CLIENT_APP);
~
 		DummyResultsList dummyResultsList = new DummyResultsList(new QueryDataStd());
~
 		DummyRefWorksResultsItem refWorksResultsItem = new DummyRefWorksResultsItem(reference, dummyResultsList, 0, 
-true);
+false);
 
~
 		refWorksResultsItem.setField("pubid", PARENT_ID);
~
 		refWorksResultsItem.setField("bdl", "2");
~
 		refWorksResultsItem.setField(AbstractContentItemBase.FIELD_SOURCETYPE, UsageLoggingImpl.UNDEFINED_SOURCE_TYPE);
~
@@ -1084,6 +1084,21 @@ public class UsageLoggingAppHelperImplTest  extends QueryDataTests {
 	}
~
 	
~
 	@Test
~
 	
+public void shouldModifyLowercaseBookToUppercase() {
~
+		assertEquals("Book|Book Chapter", loggingHelper.appendBookChapter("book"));
~
+	}
~
+	
~
+	@Test
~
+	public void shouldModifyLowercaseBooksToUppercase() {
~
+		assertEquals("Books|Book Chapter", loggingHelper.appendBookChapter("books"));
~
+	}
~
+	
~
+	@Test
~
+	public void shouldNotAppendWhenObjectTypeIsBlank() {
~
+		assertEquals("", loggingHelper.appendBookChapter(""));
~
+	}
~
+	
~
+	@Test
 
~
 	public void shouldNotModifyObjectTypeWhenItDoesntContainBook() {
~
 		assertEquals("Instructional Material/Guideline", loggingHelper.appendBookChapter("Instructional Material/Guideline"));
~
 	}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/export/XmlDataBuilderForSchemaImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/export/XmlDataBuilderForSchemaImplTest.java
index 7d91ebc..45e37c3 100755
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/export/XmlDataBuilderForSchemaImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/export/XmlDataBuilderForSchemaImplTest.java
@@ -50,7 +50,7 @@ import com.caucus.apps.corelib.util.DownloadProgress;
 import com.caucus.apps.corelib.util.DummyLogger;
~
 import com.caucus.apps.corelib.util.DurableURL;
~
 import com.caucus.apps.corelib.util.LogTimings;
~
 import 
-com.caucus.apps.corelib.util.LogTimingsDummyImpl;
+com.caucus.apps.corelib.util.DummyLogTimings;
 
~
 import com.caucus.apps.onesearch.model.RenderIdentifier;
~
 import com.caucus.apps.onesearch.model.savefile.SaveAsInputParameter;
~
 import com.caucus.apps.onesearch.services.export.XmlDataBuilderForSchemaImpl.Overview;
~
@@ -312,7 +312,7 @@ public class XmlDataBuilderForSchemaImplTest extends InstrumentedTestCase {
 		User user = new User();
~
 		user.setAccountId("12345");
~
 		ApplicationStateManager mockAsm = ctrl.createMock(ApplicationStateManager.class);
~
 		expect(mockAsm.get(LogTimings.class)).andReturn(new 
-LogTimingsDummyImpl());
+DummyLogTimings());
 
~
 		expect(mockAsm.getIfExists(DownloadProgress.class)).andReturn(null);
~
 		expect(mockAsm.getIfExists(User.class)).andReturn(user);
~
 		FieldUtils.setFieldStrict(GenericDataBuilderImpl.class, xmlBuilder, "asm", mockAsm);
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImplTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImplTest.java
index bd7cf8c..fea5f29 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImplTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/publications/CoverageSvcImplTest.java
@@ -47,7 +47,7 @@ import com.caucus.apps.corelib.config.ProductConfig;
 import com.caucus.apps.corelib.config.ProductConfigTestUtil;
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import com.caucus.apps.corelib.media.RightsMap;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
 import com.caucus.apps.corelib.search.DummyResultsItem;
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverterTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverterTest.java
deleted file mode 100644
index 5655229..0000000
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/FastFigTableSearchConverterTest.java
+++ /dev/null
@@ -1,56 +0,0 @@
-package com.caucus.apps.onesearch.services.search.impl.fastesp;
~
-
~
-import org.junit.Assert;
~
-import org.junit.Before;
~
-import org.junit.Test;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.config.mstar.MnemonicsConfiguration;
~
-import com.caucus.apps.corelib.search.QueryData;
~
-import com.caucus.apps.corelib.search.QueryData.SearchTerm;
~
-import com.caucus.apps.corelib.search.impl.QueryDataStd;
~
-import com.caucus.apps.onesearch.services.mstar.MStarConfigurationAcademicImpl;
~
-
~
-import com.caucus.test.util.InstrumentedTestCase;
~
-
~
-public class FastFigTableSearchConverterTest  extends InstrumentedTestCase {
~
-
~
-	private ProductConfig productConfig;
~
-	private MnemonicsConfiguration mnemonicsConfig;
~
-
~
-	@Before
~
-	public void setUp() {
~
-
~
-		productConfig = com.caucus.apps.corelib.config.ProductConfigTestUtil.getProductConfigWithMocks();
~
-		mnemonicsConfig = new MStarConfigurationAcademicImpl(productConfig);
~
-	}
~
-
~
-	@Test
~
-	public void testNormalTerm() {
~
-		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
-		QueryData query=new QueryDataStd();
~
-		SearchTerm in=new SearchTerm("citationBody","test");
~
-		SearchTerm out=f.getFigTableTerm(in, query);
~
-		Assert.assertEquals(in,out);
~
-	}
~
-	
~
-	@Test
~
-	public void testGetFigTableTerm_withParenthesis() {
~
-		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
-		QueryData query=new QueryDataStd();
~
-		SearchTerm in=new SearchTerm("citationBody","milk w/2 (food or corn)");
~
-		SearchTerm out=f.getFigTableTerm(in, query);
~
-		Assert.assertEquals(in,out);
~
-	}
~
-
~
-	
~
-	@Test
~
-	public void testGetFigTableTerm_ReplaceMnemonicsWithParenthesis() {
~
-		FastFigTableSearchConverter f = new FastFigTableSearchConverter(productConfig, mnemonicsConfig);
~
-		QueryData query=new QueryDataStd();
~
-		SearchTerm in=new SearchTerm("citationBody","(au(frank or john) or ti(milk)) w/2 (food or corn)");
~
-		SearchTerm out=f.getFigTableTerm(in, query);
~
-		SearchTerm expected=new SearchTerm("citationBody","(any(frank or john) or any(milk)) w/2 (food or corn)");
~
-		Assert.assertEquals(expected,out);
~
-	}
~
-}
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyTest.java
new file mode 100644
index 0000000..55f3428
--- /dev/null
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/impl/fastesp/translation/strategies/DatabaseSpecificStrategyTest.java
@@ -0,0 +1,230 @@
+package com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies;
~
+
~
+import static org.easymock.EasyMock.expect;
~
+import static org.junit.Assert.assertEquals;
~
+import static org.junit.Assert.fail;
~
+
~
+import java.util.HashMap;
~
+import java.util.Map;
~
+import java.util.Set;
~
+import java.util.TreeSet;
~
+
~
+import org.easymock.EasyMock;
~
+import org.easymock.IMocksControl;
~
+import org.junit.Test;
~
+
~
+import com.caucus.apps.corelib.config.ProductConfig;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLDefaultRelationship;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTermNode;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.DatabaseNodeContext;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.DatabaseNodeContextRoot;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.TreeContext;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.TreeContextImpl;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.enums.BundleSuffix;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
+import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilderImpl;
~
+import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
+import com.caucus.apps.corelib.search.translation.BooleanEnum;
~
+import com.caucus.apps.onesearch.services.SitesService;
~
+import com.caucus.apps.onesearch.services.search.impl.fastesp.translation.strategies.DatabaseSpecificStrategy;
~
+import com.caucus.test.util.config.SimpleMapProductConfig;
~
+import com.caucus.test.util.InstrumentedTestCase;
~
+import com.caucus.test.util.config.SimpleMapProductConfig;
~
+
~
+public class DatabaseSpecificStrategyTest  extends InstrumentedTestCase {
~
+	
~
+	/**
~
+	 * No FQL configured for the selected databases.
~
+	 */
~
+	@Test
~
+	public void testHumanToFQLMappingNoDatabaseMatch() {
~
+		Map<String, String> limiters = new HashMap<String, String>();
~
+		limiters.put("10000159", "MedlineHumans");
~
+		Map<String, String> fields = new HashMap<String, String>();
~
+		fields.put("1007458", "global:Population:or(\"human\")");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
+		
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
+		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("999991");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		try {
~
+			s.handleTerm(termNode);
~
+			fail("Should throw illegalargument exception. The databases 999991 and 999992 have no configuration for mnemonic human()");
~
+		} catch (QueryParseException e) { // Success
~
+		}
~
+	}
~
+	
~
+	@Test
~
+	public void testHumanToFQLMappingFor1Database() {
~
+		Map<String, String> limiters = new HashMap<String, String>();
~
+		limiters.put("10000159", "MedlineHumans");
~
+		Map<String, String> fields = new HashMap<String, String>();
~
+		fields.put("1007458", "global:Population:or(\"human\")");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
+		
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
+		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("10000159");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		String fql = s.handleTerm(termNode);
~
+		assertEquals("FQL fur human(yes)","filter(global:humans)", fql);
~
+	}
~
+
~
+	@Test
~
+	public void testHumanToFQLMappingFor2Databases() {
~
+		Map<String, String> limiters = new HashMap<String, String>();
~
+		limiters.put("10000159", "MedlineHumans");
~
+		Map<String, String> fields = new HashMap<String, String>();
~
+		fields.put("1007458", "global:Population:or(\"human\")");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
+		
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
+		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("10000159");
~
+		andBundleCodes.add("1007458");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		String fql = s.handleTerm(termNode);
~
+		assertEquals("FQL fur human(yes)","filter(or(global:Population:or(\"human\"), global:humans))", fql);
~
+	}
~
+	
~
+	@Test
~
+	public void testExcluderevToFQLMappingNoDatabaseMatch() {
~
+		Map<String, String> strategies = new HashMap<String, String>();
~
+		strategies.put("1007571", "ExcludeReviews");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, null, null);
~
+		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("999991");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		try {
~
+			s.handleTerm(termNode);
~
+			fail("Should throw illegalargument exception. The databases 999991 and 999992 have no configuration for mnemonic excluderev()");
~
+		} catch (QueryParseException e) { // Success
~
+		}
~
+	}
~
+	
~
+	@Test
~
+	public void testExcluderevToFQLMappingOneDatabaseMatch01() {
~
+		Map<String, String> strategies = new HashMap<String, String>();
~
+		strategies.put("1007571", "ExcludeReviews");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
+		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, null);
~
+		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("1007571");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		try {
~
+			String fql = s.handleTerm(termNode);
~
+			assertEquals(fql, "not(flags:excrev)");
~
+		} catch (QueryParseException e) { // Success
~
+		}
~
+	}
~
+	
~
+	@Test
~
+	public void testExcluderevToFQLMappingOneDatabaseMatch02() {
~
+		Map<String, String> strategies = new HashMap<String, String>();
~
+		strategies.put("1007571", "ExcludeReviews");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
+		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, null);
~
+		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("1007571");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		try {
~
+			s.handleTerm(termNode);
~
+			fail("Should log error that startegy name is not found");
~
+		} catch (QueryParseException e) {
~
+			assertEquals(e.getMessage(), "This mnemonic is not supported for these databases.");
~
+		}
~
+	}
~
+	
~
+	@Test
~
+	public void testExcluderevToFQLMappingOneDatabaseMatch03() {
~
+		Map<String, String> strategies = new HashMap<String, String>();
~
+		strategies.put("1007571", "ExcludeReviews");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, null, null);
~
+		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("1007571");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		try {
~
+			s.handleTerm(termNode);
~
+			fail("Should log error that startegy name is not found");
~
+		} catch (QueryParseException e) {
~
+			assertEquals(e.getMessage(), "This mnemonic is not supported for these databases.");
~
+		}
~
+	}
~
+	
~
+	@Test
~
+	public void testExcluderevToFQLMappingOneSiteMatch01() {
~
+		Map<String, String> strategies = new HashMap<String, String>();
~
+		strategies.put("arts", "ExcludeReviews");
~
+		IMocksControl ctrl = EasyMock.createControl();
~
+		SitesService sites = ctrl.createMock(SitesService.class);
~
+		expect(sites.getSite()).andReturn("arts");
~
+		ProductConfig productConfig = new SimpleMapProductConfig();
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
+		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
+		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
+		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
+		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, sites);
~
+		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
+		Set<String> andBundleCodes=new TreeSet<String>();
~
+		andBundleCodes.add("1007571");
~
+		andBundleCodes.add("999992");
~
+		TreeContext treeContext=new TreeContextImpl(null,null);
~
+		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
+		termNode.applyDatabaseFilter(nodeContext);
~
+		
~
+		ctrl.replay();
~
+		try {
~
+			String fql = s.handleTerm(termNode);
~
+			assertEquals(fql, "not(flags:excrev)");
~
+		} catch (QueryParseException e) { // Success
~
+		}
~
+		ctrl.verify();
~
+	}
~
+	
~
+
~
+}
 
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverTest.java
index e2bbae9..a3dfa1e 100755
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessingImageResolverTest.java
@@ -1,10 +1,11 @@
 package com.caucus.apps.onesearch.services.search.postprocessing;
~
 
~
+import static org.junit.Assert.assertEquals;
~
+import static org.junit.Assert.assertNotNull;
 
~
 
~
 import java.util.ArrayList;
~
 import java.util.List;
~
 
~
-import junit.framework.Assert;
~
-
~
 import org.easymock.EasyMock;
~
 import org.easymock.IMocksControl;
~
 import org.junit.Before;
~
@@ -12,10 +13,11 @@ import org.junit.Test;
 
~
 import com.caucus.apps.corelib.media.MediaAttachment;
~
 import com.caucus.apps.corelib.media.MediaIndex;
~
+import com.caucus.apps.corelib.media.Role;
~
+import com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.media.mindexv2.Comp;
~
 import com.caucus.apps.corelib.media.mindexv2.Compattrib;
~
 import com.caucus.apps.corelib.media.mindexv2.Rep;
~
-
~
 import com.caucus.test.util.InstrumentedTestCase;
~
 
~
 public class PostProcessingImageResolverTest  extends InstrumentedTestCase {
~
@@ -38,136 +40,136 @@ public class PostProcessingImageResolverTest  extends InstrumentedTestCase {
 	public void testMakePageRangeNullSafe() {
~
 		PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 		String result = page.getPageRangeInCsv("", 1);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		result = page.getPageRangeInCsv(null, 1);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		result = page.getPageRangeInCsv(null, 0);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		result = page.getPageRangeInCsv(null, 2);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 	}
~
 	
~
 	@Test
~
 	public void testMakePageRangeCurrentPage() {
~
 		PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 		String result = page.getPageRangeInCsv("1", 1);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1", 0);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("9999999999999", 4);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1", 2);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("s", 1);
~
 		
-Assert.assertEquals("0",
+assertEquals("0",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("-1", 1);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("0", 1);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("-8", 7);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("8", 7); //asking for number 8, we don't have 8 so return what it is.
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 	}
~
 	
~
 	@Test
~
 	public void testMakePageRangePageRange() {
~
 		PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 		String result = page.getPageRangeInCsv("1-2", 1);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1-2", 2);
~
 		
-Assert.assertEquals("1,2",
+assertEquals("1,2",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1-2", 3);
~
 		
-Assert.assertEquals("1,2",
+assertEquals("1,2",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("2-3", 3);
~
 		
-Assert.assertEquals("2,3",
+assertEquals("2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3-2", 3);
~
 		
-Assert.assertEquals("2,3",
+assertEquals("2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("4-2", 3);
~
 		
-Assert.assertEquals("2,3",
+assertEquals("2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3--4", 3);
~
 		
-Assert.assertEquals("3",
+assertEquals("3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3--", 3);
~
 		
-Assert.assertEquals("0",
+assertEquals("0",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3--10", 3);
~
 		
-Assert.assertEquals("3",
+assertEquals("3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3--0", 3);
~
 		
-Assert.assertEquals("1,2,3",
+assertEquals("1,2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3 - 0", 3);
~
 		
-Assert.assertEquals("1,2,3",
+assertEquals("1,2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("3 - 0 - 1", 3);
~
 		
-Assert.assertEquals("1,2,3",
+assertEquals("1,2,3",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1 - 4 - 2", 7);
~
 		
-Assert.assertEquals("1,2,3,4",
+assertEquals("1,2,3,4",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1 - 1", 7);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1 - -1", 7);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("0-0", 7);
~
 		
-Assert.assertEquals("0",
+assertEquals("0",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("0- 0", 7);
~
 		
-Assert.assertEquals("0",
+assertEquals("0",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("0-1", 7);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("1-1", 7);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("-1--1", 7);
~
 		
-Assert.assertEquals("1",
+assertEquals("1",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("4,6", 7);
~
 		
-Assert.assertEquals("4,6",
+assertEquals("4,6",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("4,5,6", 7);
~
 		
-Assert.assertEquals("4,5,6",
+assertEquals("4,5,6",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("4,6-5", 7);
~
 		
-Assert.assertEquals("4,5,6",
+assertEquals("4,5,6",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("-4, 6", 7);
~
 		
-Assert.assertEquals("6",
+assertEquals("6",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("e, 6", 7);
~
 		
-Assert.assertEquals("0,6",
+assertEquals("0,6",
  result);
~
 	}
~
 
~
 	@Test
~
 	public void testMakePageRangeAllPages(){
~
 		PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 		String result = page.getPageRangeInCsv("all", -1);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("all", 2);
~
 		
-Assert.assertEquals("1,2",
+assertEquals("1,2",
  result);
~
 		
~
 		result = page.getPageRangeInCsv("All", 0);
~
 		
-Assert.assertEquals("",
+assertEquals("",
  result);
~
 	}
~
 
~
     /**
~
@@ -177,51 +179,51 @@ public class PostProcessingImageResolverTest  extends InstrumentedTestCase {
     public void testGetImageMediasList() {
~
         IMocksControl ctrl = EasyMock.createControl();
~
         MediaIndex index = ctrl.createMock(MediaIndex.class);
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL,
+EasyMock.expect(index.getMediaAttachments(Role.IXI, SubRole.FULL,
  false)).andReturn(mockResult).anyTimes();
~
         ctrl.replay();
~
 
~
         PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 
~
         List<MediaAttachment> results = page.getImageMediasAsList(index, "1,2,3");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(3,
+assertNotNull(results);
~
+        assertEquals(3,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "1-3"); //invalid page range
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "1,2");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(2,
+assertNotNull(results);
~
+        assertEquals(2,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "4,5,6");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
 
~
         
~
         results = page.getImageMediasAsList(index, "0");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
         
~
         results = page.getImageMediasAsList(index, "");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(3,
+assertNotNull(results);
~
+        assertEquals(3,
  results.size());
~
         
~
         results = page.getImageMediasAsList(index, "1.2.3.4");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
         
~
         results = page.getImageMediasAsList(index, null);
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(3,
+assertNotNull(results);
~
+        assertEquals(3,
  results.size());
~
         
~
         ctrl.verify();
~
     }
~
@@ -233,32 +235,32 @@ public class PostProcessingImageResolverTest  extends InstrumentedTestCase {
     public void testGetImageMediasListILI() {
~
         IMocksControl ctrl = EasyMock.createControl();
~
         MediaIndex index = ctrl.createMock(MediaIndex.class);
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL,
+EasyMock.expect(index.getMediaAttachments(Role.IXI, SubRole.FULL,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+EasyMock.expect(index.getMediaAttachments(Role.IXI, SubRole.THUM,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL,
+EasyMock.expect(index.getMediaAttachments(Role.ILI, SubRole.FULL,
  false)).andReturn(mockResult).anyTimes();
~
         ctrl.replay();
~
 
~
         PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 
~
         List<MediaAttachment> results = page.getImageMediasAsList(index, "1,2,3");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(3,
+assertNotNull(results);
~
+        assertEquals(3,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "1-3"); //invalid page range
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "1,2");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(2,
+assertNotNull(results);
~
+        assertEquals(2,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "4,5,6");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(0,
+assertNotNull(results);
~
+        assertEquals(0,
  results.size());
~
 
~
         ctrl.verify();
~
     }
~
@@ -286,24 +288,24 @@ public class PostProcessingImageResolverTest  extends InstrumentedTestCase {
         attachments.add(attachDup);
~
       
~
         MediaIndex index = ctrl.createMock(MediaIndex.class);
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.FULL,
+EasyMock.expect(index.getMediaAttachments(Role.IXI, SubRole.FULL,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.IXI, MediaIndex.SubRole.THUM,
+EasyMock.expect(index.getMediaAttachments(Role.IXI, SubRole.THUM,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.FULL,
+EasyMock.expect(index.getMediaAttachments(Role.ILI, SubRole.FULL,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.ILI, MediaIndex.SubRole.THUM,
+EasyMock.expect(index.getMediaAttachments(Role.ILI, SubRole.THUM,
  false)).andReturn(null).anyTimes();
~
         
-EasyMock.expect(index.getMediaAttachments(MediaIndex.Role.PG, MediaIndex.SubRole.NORM,
+EasyMock.expect(index.getMediaAttachments(Role.PG, SubRole.NORM,
  false)).andReturn(attachments).anyTimes();
~
         ctrl.replay();
~
 
~
         PostProcessingImageResolver page = new PostProcessingImageResolverImpl(null, null, null);
~
 
~
         List<MediaAttachment> results = page.getImageMediasAsList(index, "1,2,3");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(2,
+assertNotNull(results);
~
+        assertEquals(2,
  results.size());
~
 
~
         results = page.getImageMediasAsList(index, "2,3");
~
 
~
         
-Assert.assertNotNull(results);
~
-        Assert.assertEquals(1,
+assertNotNull(results);
~
+        assertEquals(1,
  results.size());
~
 
~
         ctrl.verify();
~
     }
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManagerTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManagerTest.java
index 1fc206e..0d94fb3 100644
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManagerTest.java
+++ b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/postprocessing/PostProcessorManagerTest.java
@@ -44,8 +44,8 @@ import com.caucus.apps.corelib.documents.indexfields.model.ItemValue;
 import com.caucus.apps.corelib.markedlist.MarkedListItem;
~
 import com.caucus.apps.corelib.markedlist.MarkedListService;
~
 import com.caucus.apps.corelib.media.MediaIndex.DeliveryMode;
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.Role;
+com.caucus.apps.corelib.media.Role;
 
~
 import 
-com.caucus.apps.corelib.media.MediaIndex.SubRole;
+com.caucus.apps.corelib.media.SubRole;
 
~
 import com.caucus.apps.corelib.models.CitationStyle;
~
 import com.caucus.apps.corelib.myresearch.SelectionStateList;
~
 import com.caucus.apps.corelib.search.DummyFieldFormatter;
~
@@ -112,8 +112,8 @@ public class PostProcessorManagerTest  extends InstrumentedTestCase {
 			"click on the <a href=\"http://XXX.XXX.com/docview\">Caucus document link</a> **";
~
 	
~
 	private final String cite = "cite1 <a class=\"hit\">test</a> cite1, cite3 <a class=\"hit\" style=\"font\">test</a> cite3";
~
+//
 	private final String hitHighlightStart = "<span class=\"hit\">";
~
+//
 	private final String hitHighlightEnd = "</span>";
~
 	private final String filePrefix = "CaucusDocuments-";
~
 	private final String fileFormat = "pdf";
~
 	private final String imageRange = "0";
~
diff --git a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyTest.java b/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyTest.java
deleted file mode 100644
index b12a8d6..0000000
--- a/WebApp/src/test/java/com/caucus/apps/onesearch/services/search/strategy/DatabaseSpecificStrategyTest.java
+++ /dev/null
@@ -1,229 +0,0 @@
-package com.caucus.apps.onesearch.services.search.strategy;
~
-
~
-import static org.easymock.EasyMock.expect;
~
-import static org.junit.Assert.assertEquals;
~
-import static org.junit.Assert.fail;
~
-
~
-import java.util.HashMap;
~
-import java.util.Map;
~
-import java.util.Set;
~
-import java.util.TreeSet;
~
-
~
-import org.easymock.EasyMock;
~
-import org.easymock.IMocksControl;
~
-import org.junit.Test;
~
-
~
-import com.caucus.apps.corelib.config.ProductConfig;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLDefaultRelationship;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.FQLTermNode;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.DatabaseNodeContext;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.DatabaseNodeContextRoot;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.TreeContext;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.context.TreeContextImpl;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.parser.enums.BundleSuffix;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilder;
~
-import com.caucus.apps.corelib.search.impl.fastesp.translation.strategies.TermStrategyBuilderImpl;
~
-import com.caucus.apps.corelib.search.impl.search.QueryParseException;
~
-import com.caucus.apps.corelib.search.translation.BooleanEnum;
~
-import com.caucus.apps.onesearch.services.SitesService;
~
-import com.caucus.test.util.config.SimpleMapProductConfig;
~
-import com.caucus.test.util.InstrumentedTestCase;
~
-import com.caucus.test.util.config.SimpleMapProductConfig;
~
-
~
-public class DatabaseSpecificStrategyTest  extends InstrumentedTestCase {
~
-	
~
-	/**
~
-	 * No FQL configured for the selected databases.
~
-	 */
~
-	@Test
~
-	public void testHumanToFQLMappingNoDatabaseMatch() {
~
-		Map<String, String> limiters = new HashMap<String, String>();
~
-		limiters.put("10000159", "MedlineHumans");
~
-		Map<String, String> fields = new HashMap<String, String>();
~
-		fields.put("1007458", "global:Population:or(\"human\")");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
-		
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
-		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("999991");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		try {
~
-			s.handleTerm(termNode);
~
-			fail("Should throw illegalargument exception. The databases 999991 and 999992 have no configuration for mnemonic human()");
~
-		} catch (QueryParseException e) { // Success
~
-		}
~
-	}
~
-	
~
-	@Test
~
-	public void testHumanToFQLMappingFor1Database() {
~
-		Map<String, String> limiters = new HashMap<String, String>();
~
-		limiters.put("10000159", "MedlineHumans");
~
-		Map<String, String> fields = new HashMap<String, String>();
~
-		fields.put("1007458", "global:Population:or(\"human\")");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
-		
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
-		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("10000159");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		String fql = s.handleTerm(termNode);
~
-		assertEquals("FQL fur human(yes)","filter(global:humans)", fql);
~
-	}
~
-
~
-	@Test
~
-	public void testHumanToFQLMappingFor2Databases() {
~
-		Map<String, String> limiters = new HashMap<String, String>();
~
-		limiters.put("10000159", "MedlineHumans");
~
-		Map<String, String> fields = new HashMap<String, String>();
~
-		fields.put("1007458", "global:Population:or(\"human\")");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.FastEnterpriseSearch.SimpleLimiters.searchTerm.MedlineHumans", "global:humans");
~
-		
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "human";
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(limiters, fields, null, productConfig, configKey, null, null, null);
~
-		FQLTermNode termNode = new FQLTermNode("human", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("10000159");
~
-		andBundleCodes.add("1007458");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		String fql = s.handleTerm(termNode);
~
-		assertEquals("FQL fur human(yes)","filter(or(global:Population:or(\"human\"), global:humans))", fql);
~
-	}
~
-	
~
-	@Test
~
-	public void testExcluderevToFQLMappingNoDatabaseMatch() {
~
-		Map<String, String> strategies = new HashMap<String, String>();
~
-		strategies.put("1007571", "ExcludeReviews");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, null, null);
~
-		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("999991");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		try {
~
-			s.handleTerm(termNode);
~
-			fail("Should throw illegalargument exception. The databases 999991 and 999992 have no configuration for mnemonic excluderev()");
~
-		} catch (QueryParseException e) { // Success
~
-		}
~
-	}
~
-	
~
-	@Test
~
-	public void testExcluderevToFQLMappingOneDatabaseMatch01() {
~
-		Map<String, String> strategies = new HashMap<String, String>();
~
-		strategies.put("1007571", "ExcludeReviews");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
-		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, null);
~
-		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("1007571");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		try {
~
-			String fql = s.handleTerm(termNode);
~
-			assertEquals(fql, "not(flags:excrev)");
~
-		} catch (QueryParseException e) { // Success
~
-		}
~
-	}
~
-	
~
-	@Test
~
-	public void testExcluderevToFQLMappingOneDatabaseMatch02() {
~
-		Map<String, String> strategies = new HashMap<String, String>();
~
-		strategies.put("1007571", "ExcludeReviews");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
-		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, null);
~
-		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("1007571");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		try {
~
-			s.handleTerm(termNode);
~
-			fail("Should log error that startegy name is not found");
~
-		} catch (QueryParseException e) {
~
-			assertEquals(e.getMessage(), "This mnemonic is not supported for these databases.");
~
-		}
~
-	}
~
-	
~
-	@Test
~
-	public void testExcluderevToFQLMappingOneDatabaseMatch03() {
~
-		Map<String, String> strategies = new HashMap<String, String>();
~
-		strategies.put("1007571", "ExcludeReviews");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, null, null);
~
-		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("1007571");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		try {
~
-			s.handleTerm(termNode);
~
-			fail("Should log error that startegy name is not found");
~
-		} catch (QueryParseException e) {
~
-			assertEquals(e.getMessage(), "This mnemonic is not supported for these databases.");
~
-		}
~
-	}
~
-	
~
-	@Test
~
-	public void testExcluderevToFQLMappingOneSiteMatch01() {
~
-		Map<String, String> strategies = new HashMap<String, String>();
~
-		strategies.put("arts", "ExcludeReviews");
~
-		IMocksControl ctrl = EasyMock.createControl();
~
-		SitesService sites = ctrl.createMock(SitesService.class);
~
-		expect(sites.getSite()).andReturn("arts");
~
-		ProductConfig productConfig = new SimpleMapProductConfig();
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews", "ExcludeReviews");
~
-		productConfig.addString("SearchEngine.MStarTranslator.fieldTermStrategy.ExcludeReviews.format", "%s(flags:excrev)");
~
-		String configKey = TermStrategyBuilder.CFGKEY_FIELD_STRATEGY + "excluderev";
~
-		TermStrategyBuilder strategyBuilder = new TermStrategyBuilderImpl(null, null, productConfig, null, null, null, configKey, null);
~
-		DatabaseSpecificStrategy s = new DatabaseSpecificStrategy(null, null, strategies, productConfig, configKey, null, strategyBuilder, sites);
~
-		FQLTermNode termNode = new FQLTermNode("excluderev", "yes", FQLDefaultRelationship.getInstance(), null);
~
-		Set<String> andBundleCodes=new TreeSet<String>();
~
-		andBundleCodes.add("1007571");
~
-		andBundleCodes.add("999992");
~
-		TreeContext treeContext=new TreeContextImpl(null,null);
~
-		DatabaseNodeContext nodeContext = new DatabaseNodeContextRoot(treeContext, andBundleCodes, BooleanEnum.ANY, BundleSuffix.NONE, null);
~
-		termNode.applyDatabaseFilter(nodeContext);
~
-		
~
-		ctrl.replay();
~
-		try {
~
-			String fql = s.handleTerm(termNode);
~
-			assertEquals(fql, "not(flags:excrev)");
~
-		} catch (QueryParseException e) { // Success
~
-		}
~
-		ctrl.verify();
~
-	}
~
-	
~
-
~
-}
~
diff --git a/WebContent/devl-3/Sites/Captcha.properties b/WebContent/devl-3/Sites/Captcha.properties
index 2339bda..b93dde9 100644
--- a/WebContent/devl-3/Sites/Captcha.properties
+++ b/WebContent/devl-3/Sites/Captcha.properties
@@ -10,8 +10,8 @@ MYRESEARCH_PQD=disabled
 
~
 #comma separated list of accounts ids for devl-3
~
 #AccountId=0 means unauthenticated google scholar /openview
~
-account.disabled=0,93653,93937,93877,91750,85029,81329,94019,10312,81169,93554,93921,91489,93637,82070,93817,91509,93635,93695,93878,93703,93566,93654,93653,93406,93702,93378,93646,93719,93726,94020,88769,93715,93716,93718,93714,93030,91749,78789,93704,93598,91829,92309,93829,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,91817,91796,91776,91878,91879,95397,92033,92049,92039
~
-myresearch.account.disabled=88769,93829,91817,91796,91776,91878,91879,91790,93921,93878,95397,92033,92049,92039
+account.disabled=0,93653,93937,93877,91750,85029,81329,94019,10312,81169,93554,93921,91489,93637,82070,93817,91509,93635,93695,93878,93703,93566,93654,93653,93406,93702,93378,93646,93719,93726,94020,88769,93715,93716,93718,93714,93030,91749,78789,93704,93598,91829,92309,93829,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,91817,91796,91776,91878,91879,95397,92033,92049,92039,92059
~
+myresearch.account.disabled=88769,93829,91817,91796,91776,91878,91879,91790,93921,93878,95397,92033,92049,92039,92059
~
 
~
 #comma separated list of partial urls
~
 url.disabled=search.serialssolutions.com,summon.serialssolutions,sfx.calstate.edu,sfxhosted.exlibrisgroup,firstsearch.oclc.org,partneraccess.oclc.org,ncbi.nlm.nih.gov,scholar.google,linksource.ebsco,refworks.com,udini.caucus.com,stage.sersol.lib,devqa.sersol.il.pqe,cs.serialssolutions.com
~
diff --git a/WebContent/devl/Sites/Captcha.properties b/WebContent/devl/Sites/Captcha.properties
index 1d8c8d3..095669c 100644
--- a/WebContent/devl/Sites/Captcha.properties
+++ b/WebContent/devl/Sites/Captcha.properties
@@ -10,8 +10,8 @@ MYRESEARCH_PQD=disabled
 
~
 #comma separated list of accounts ids for devl
~
 #AccountId=0 means unauthenticated google scholar /openview
~
-account.disabled=0,81329,93829,91878,91459,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,,91817,91796,91776,91765,91879,81409,85029,93554,93937,94137,94220,94259,94261
~
-myresearch.account.disabled=88769,91817,91796,91776,91765,91879,91790,91878,81409,85029,93937,94137,94220,94259,94261
+account.disabled=0,81329,93829,91878,91459,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,,91817,91796,91776,91765,91879,81409,85029,93554,93937,94137,94220,94259,94261,95542,95397,95458
~
+myresearch.account.disabled=88769,91817,91796,91776,91765,91879,91790,91878,81409,85029,93937,94137,94220,94259,94261,95542,95397,95458
~
 
~
 #comma separated list of partial urls
~
 url.disabled=search.serialssolutions.com,summon.serialssolutions,sfx.calstate.edu,sfxhosted.exlibrisgroup,firstsearch.oclc.org,partneraccess.oclc.org,ncbi.nlm.nih.gov,scholar.google,linksource.ebsco,refworks.com,udini.caucus.com,stage.sersol.lib,devqa.sersol.il.pqe,cs.serialssolutions.com
~
diff --git a/WebContent/pqis-team-c/Sites/Captcha.properties b/WebContent/pqis-team-c/Sites/Captcha.properties
index e915cae..095669c 100644
--- a/WebContent/pqis-team-c/Sites/Captcha.properties
+++ b/WebContent/pqis-team-c/Sites/Captcha.properties
@@ -8,10 +8,10 @@ PQD=enabled
 MYRESEARCH_PQIS=enabled
~
 MYRESEARCH_PQD=disabled
~
 
~
 #comma separated list of accounts ids for 
-devl-2.
+devl
~
 #AccountId=0 means unauthenticated google scholar /openview
~
-account.disabled=0,91777,91776,91778,91015,85029,81329,91447,10312,81169,91168,91459,91817,91019,91685,82070,91790,91004,91745,91796,91748,91651,91707,91684,91439,91384,91744,91782,91783,91765,88769,91786,91787,91788,91785,91094,91055,78789,91724,91714,91747,91879,91878,93921,93878,93937,94137,94140,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,93554,93839,93779,93783,93825,92033,92049,92039
~
-myresearch.account.disabled=88769,93878,93937,94137,94140,93817,93839,93779,93783,93825,92033,92049,92039
+account.disabled=0,81329,93829,91878,91459,94477,94517,94518,94637,94523,94524,94537,94538,94539,94540,94541,94542,94543,94544,94546,94547,94548,94549,94551,94552,94553,94554,94555,94577,94578,94579,94580,94581,94582,94583,94638,94584,94585,94586,94587,94591,94592,94593,94594,94595,94596,94597,94598,94599,94600,94603,94604,94605,94617,94618,94619,94621,94622,94623,94632,,91817,91796,91776,91765,91879,81409,85029,93554,93937,94137,94220,94259,94261,95542,95397,95458
~
+myresearch.account.disabled=88769,91817,91796,91776,91765,91879,91790,91878,81409,85029,93937,94137,94220,94259,94261,95542,95397,95458
~
 
~
 #comma separated list of partial urls
~
 url.disabled=search.serialssolutions.com,summon.serialssolutions,sfx.calstate.edu,sfxhosted.exlibrisgroup,firstsearch.oclc.org,partneraccess.oclc.org,ncbi.nlm.nih.gov,scholar.google,linksource.ebsco,refworks.com,udini.caucus.com,stage.sersol.lib,devqa.sersol.il.pqe,cs.serialssolutions.com
~
diff --git a/WebContent/pqis-team-e/config/ThirdParty.properties b/WebContent/pqis-team-e/config/ThirdParty.properties
index bc62bf2..4d6880b 100644
--- a/WebContent/pqis-team-e/config/ThirdParty.properties
+++ b/WebContent/pqis-team-e/config/ThirdParty.properties
@@ -7,7 +7,7 @@ WebTrends.enabled=true
 Survey.excluded_pages=.login,.shibbolethlogin,.ip,.refurl,.barcode,.contactus,.privacy,.termsandconditions,.ExceptionReport
~
 
~
 #---Dev: Forsee enabled?
~
-Survey.enabled=false
+Survey.enabled=true
~
 
~
 #---Devl-2: exclude accounts from Forsee
~
 Survey.excluded_accountIDs=78789,85029,8241,8387,8546,9613,9634,9768,9834,9875,9912,9935,9994,10008,10163,10189,8245,10298,10428,10616,10669,10812,10939,11048,11099,11259,11330,11634,14003,11741,12050,12290,12308,12335,12493,12539,12675,13069,13190,13209,13429,13513,38642,13564,13568,13601,13675,13681,13993,13939,14197,14019,14179,14215,14399,14818,15152,14923,14996,15049,15060,8499,8569,8574,9715,9858,9936,10098,10427,10598,10730,11041,11207,11235,11411,11745,12039,13505,12120,12153,12280,12390,12408,12544,12726,12714,13172,38688,14041,13657,13823,14024,12610,14868,14890,13141,15065,7175,8246,8259,8336,8443,8547,9612,9762,8385,9797,9819,9833,147339,9934,10049,13217,10061,10164,10230,10299,4315,450,10430,55552,10613,10636,10668,10807,10928,3442,41767,11047,11191,11206,11258,11297,11326,11370,11399,11410,11625,11866,12036,147338,12221,12334,12547,12662,12676,12679,12747,12779,12904,12990,147340,13154,147341,13171,13238,13222,13428,13556,13565,13570,13603,13627,13674,13682,13745,13834,13955,14020,14078,14388,14622,4911,14867,14886,14898,14924,15059,8337,8355,10052,10639,10635,10717,10813,11202,12607,12711,12713,7980,12723,12725,12904,10188,13961,14603,12722,8388,14244,14605,14604,13153,14606,14866,14968,15070
~
diff --git a/WebContent/preprod/Sites/Captcha.properties b/WebContent/preprod/Sites/Captcha.properties
index 2a490fd..1a17bf5 100644
--- a/WebContent/preprod/Sites/Captcha.properties
+++ b/WebContent/preprod/Sites/Captcha.properties
@@ -10,8 +10,8 @@ MYRESEARCH_PQD=disabled
 
~
 #comma separated list of accounts ids for preprod
~
 #AccountId=0 means unauthenticated google scholar /openview
~
-account.disabled=168446,168446,168640,168663
~
-myresearch.account.disabled=153092,168446,168640,168663
+account.disabled=168446,168446,168640,168663,169051,168446,168640
~
+myresearch.account.disabled=153092,168446,168640,168663,169051,168446,168640
~
 
~
 #comma separated list of partial urls
~
 url.disabled=search.serialssolutions.com,summon.serialssolutions,sfx.calstate.edu,sfxhosted.exlibrisgroup,firstsearch.oclc.org,partneraccess.oclc.org,ncbi.nlm.nih.gov,scholar.google,linksource.ebsco,refworks.com,udini.caucus.com,stage.sersol.lib,devqa.sersol.il.pqe,cs.serialssolutions.com
~

diff --git a/CoreLibrary/src/main/java/com/caucus/apps/corelib/AppCoreLibModule.java b/CoreLibrary/src/main/java/com/caucus/apps/corelib/AppCoreLibModule.java
index df1cd28..c8faac7 100644
--- a/CoreLibrary/src/main/java/com/caucus/apps/corelib/AppCoreLibModule.java
+++ b/CoreLibrary/src/main/java/com/caucus/apps/corelib/AppCoreLibModule.java
@@ -109,7 +109,9 @@ import com.caucus.apps.corelib.myresearch.search.SavedSearchManagerServiceImpl
 import com.caucus.apps.corelib.myresearch.session.UserSessionStorage;
~
 import com.caucus.apps.corelib.myresearch.session.UserSessionStorageImpl;
~
 import com.caucus.apps.corelib.resolvers.OutboundLinkResolver;
